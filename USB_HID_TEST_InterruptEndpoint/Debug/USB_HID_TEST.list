
USB_HID_TEST.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00007680  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000080  0800778c  0800778c  0001778c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800780c  0800780c  00020164  2**0
                  CONTENTS
  4 .ARM          00000000  0800780c  0800780c  00020164  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800780c  0800780c  00020164  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800780c  0800780c  0001780c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08007810  08007810  00017810  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000164  20000000  08007814  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000008bc  20000164  08007978  00020164  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000a20  08007978  00020a20  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020164  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000c2fb  00000000  00000000  0002018d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000027d2  00000000  00000000  0002c488  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000a38  00000000  00000000  0002ec60  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000008f0  00000000  00000000  0002f698  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00019574  00000000  00000000  0002ff88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000dd38  00000000  00000000  000494fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000848bc  00000000  00000000  00057234  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000dbaf0  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000026ec  00000000  00000000  000dbb40  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000164 	.word	0x20000164
 8000128:	00000000 	.word	0x00000000
 800012c:	08007774 	.word	0x08007774

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000168 	.word	0x20000168
 8000148:	08007774 	.word	0x08007774

0800014c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800014c:	b580      	push	{r7, lr}
 800014e:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000150:	f000 f9a4 	bl	800049c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000154:	f000 f85c 	bl	8000210 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000158:	f000 f8b4 	bl	80002c4 <MX_GPIO_Init>
  MX_USB_DEVICE_Init();
 800015c:	f006 fed6 	bl	8006f0c <MX_USB_DEVICE_Init>
  /* USER CODE BEGIN 2 */
  USB_buffer_send_data[0] = 0x42;
 8000160:	4b26      	ldr	r3, [pc, #152]	; (80001fc <main+0xb0>)
 8000162:	2242      	movs	r2, #66	; 0x42
 8000164:	701a      	strb	r2, [r3, #0]
  USB_buffer_send_data[1] = 0x33;
 8000166:	4b25      	ldr	r3, [pc, #148]	; (80001fc <main+0xb0>)
 8000168:	2233      	movs	r2, #51	; 0x33
 800016a:	705a      	strb	r2, [r3, #1]
  USB_buffer_send_data[2] = 0x32;
 800016c:	4b23      	ldr	r3, [pc, #140]	; (80001fc <main+0xb0>)
 800016e:	2232      	movs	r2, #50	; 0x32
 8000170:	709a      	strb	r2, [r3, #2]
  USB_buffer_send_data[3] = 0x33;
 8000172:	4b22      	ldr	r3, [pc, #136]	; (80001fc <main+0xb0>)
 8000174:	2233      	movs	r2, #51	; 0x33
 8000176:	70da      	strb	r2, [r3, #3]
  USB_buffer_send_data[4] = 0x34;
 8000178:	4b20      	ldr	r3, [pc, #128]	; (80001fc <main+0xb0>)
 800017a:	2234      	movs	r2, #52	; 0x34
 800017c:	711a      	strb	r2, [r3, #4]
  USB_buffer_send_data[5] = 0x35;
 800017e:	4b1f      	ldr	r3, [pc, #124]	; (80001fc <main+0xb0>)
 8000180:	2235      	movs	r2, #53	; 0x35
 8000182:	715a      	strb	r2, [r3, #5]
  USB_buffer_send_data[6] = 0x36;
 8000184:	4b1d      	ldr	r3, [pc, #116]	; (80001fc <main+0xb0>)
 8000186:	2236      	movs	r2, #54	; 0x36
 8000188:	719a      	strb	r2, [r3, #6]
  USB_buffer_send_data[7] = 0x20;
 800018a:	4b1c      	ldr	r3, [pc, #112]	; (80001fc <main+0xb0>)
 800018c:	2220      	movs	r2, #32
 800018e:	71da      	strb	r2, [r3, #7]
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    /* USER CODE END WHILE */

	  if(USB_packet_enable == 1)
 8000190:	4b1b      	ldr	r3, [pc, #108]	; (8000200 <main+0xb4>)
 8000192:	681b      	ldr	r3, [r3, #0]
 8000194:	2b01      	cmp	r3, #1
 8000196:	d11c      	bne.n	80001d2 <main+0x86>
	      {
	     	if(USB_RX_Buffer[0] == 2 && USB_RX_Buffer[1] == 1)
 8000198:	4b1a      	ldr	r3, [pc, #104]	; (8000204 <main+0xb8>)
 800019a:	781b      	ldrb	r3, [r3, #0]
 800019c:	2b02      	cmp	r3, #2
 800019e:	d108      	bne.n	80001b2 <main+0x66>
 80001a0:	4b18      	ldr	r3, [pc, #96]	; (8000204 <main+0xb8>)
 80001a2:	785b      	ldrb	r3, [r3, #1]
 80001a4:	2b01      	cmp	r3, #1
 80001a6:	d104      	bne.n	80001b2 <main+0x66>
	     	{
	     		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_SET);
 80001a8:	2201      	movs	r2, #1
 80001aa:	2120      	movs	r1, #32
 80001ac:	4816      	ldr	r0, [pc, #88]	; (8000208 <main+0xbc>)
 80001ae:	f000 fc8d 	bl	8000acc <HAL_GPIO_WritePin>
	     	}
	     	if(USB_RX_Buffer[0] == 2 && USB_RX_Buffer[1] == 0)
 80001b2:	4b14      	ldr	r3, [pc, #80]	; (8000204 <main+0xb8>)
 80001b4:	781b      	ldrb	r3, [r3, #0]
 80001b6:	2b02      	cmp	r3, #2
 80001b8:	d108      	bne.n	80001cc <main+0x80>
 80001ba:	4b12      	ldr	r3, [pc, #72]	; (8000204 <main+0xb8>)
 80001bc:	785b      	ldrb	r3, [r3, #1]
 80001be:	2b00      	cmp	r3, #0
 80001c0:	d104      	bne.n	80001cc <main+0x80>
	     	{
	     	   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_RESET);
 80001c2:	2200      	movs	r2, #0
 80001c4:	2120      	movs	r1, #32
 80001c6:	4810      	ldr	r0, [pc, #64]	; (8000208 <main+0xbc>)
 80001c8:	f000 fc80 	bl	8000acc <HAL_GPIO_WritePin>
	       	}

	     	USB_packet_enable = 0;
 80001cc:	4b0c      	ldr	r3, [pc, #48]	; (8000200 <main+0xb4>)
 80001ce:	2200      	movs	r2, #0
 80001d0:	601a      	str	r2, [r3, #0]
	      }
	  if(USB_RX_Buffer[0] == 2 && USB_RX_Buffer[1] == 3)
 80001d2:	4b0c      	ldr	r3, [pc, #48]	; (8000204 <main+0xb8>)
 80001d4:	781b      	ldrb	r3, [r3, #0]
 80001d6:	2b02      	cmp	r3, #2
 80001d8:	d107      	bne.n	80001ea <main+0x9e>
 80001da:	4b0a      	ldr	r3, [pc, #40]	; (8000204 <main+0xb8>)
 80001dc:	785b      	ldrb	r3, [r3, #1]
 80001de:	2b03      	cmp	r3, #3
 80001e0:	d103      	bne.n	80001ea <main+0x9e>
	  {
	   	HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_5);
 80001e2:	2120      	movs	r1, #32
 80001e4:	4808      	ldr	r0, [pc, #32]	; (8000208 <main+0xbc>)
 80001e6:	f000 fc89 	bl	8000afc <HAL_GPIO_TogglePin>

	  }

	  USBD_CUSTOM_HID_SendReport(&hUsbDeviceFS, USB_buffer_send_data, 65);
 80001ea:	2241      	movs	r2, #65	; 0x41
 80001ec:	4903      	ldr	r1, [pc, #12]	; (80001fc <main+0xb0>)
 80001ee:	4807      	ldr	r0, [pc, #28]	; (800020c <main+0xc0>)
 80001f0:	f005 fd24 	bl	8005c3c <USBD_CUSTOM_HID_SendReport>
	  HAL_Delay(100);
 80001f4:	2064      	movs	r0, #100	; 0x64
 80001f6:	f000 f9b3 	bl	8000560 <HAL_Delay>
	  if(USB_packet_enable == 1)
 80001fa:	e7c9      	b.n	8000190 <main+0x44>
 80001fc:	200001c8 	.word	0x200001c8
 8000200:	200001c4 	.word	0x200001c4
 8000204:	20000180 	.word	0x20000180
 8000208:	40010c00 	.word	0x40010c00
 800020c:	20000214 	.word	0x20000214

08000210 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000210:	b580      	push	{r7, lr}
 8000212:	b094      	sub	sp, #80	; 0x50
 8000214:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000216:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800021a:	2228      	movs	r2, #40	; 0x28
 800021c:	2100      	movs	r1, #0
 800021e:	4618      	mov	r0, r3
 8000220:	f007 faa0 	bl	8007764 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000224:	f107 0314 	add.w	r3, r7, #20
 8000228:	2200      	movs	r2, #0
 800022a:	601a      	str	r2, [r3, #0]
 800022c:	605a      	str	r2, [r3, #4]
 800022e:	609a      	str	r2, [r3, #8]
 8000230:	60da      	str	r2, [r3, #12]
 8000232:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8000234:	1d3b      	adds	r3, r7, #4
 8000236:	2200      	movs	r2, #0
 8000238:	601a      	str	r2, [r3, #0]
 800023a:	605a      	str	r2, [r3, #4]
 800023c:	609a      	str	r2, [r3, #8]
 800023e:	60da      	str	r2, [r3, #12]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000240:	2301      	movs	r3, #1
 8000242:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000244:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000248:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 800024a:	2300      	movs	r3, #0
 800024c:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 800024e:	2301      	movs	r3, #1
 8000250:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000252:	2302      	movs	r3, #2
 8000254:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000256:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800025a:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 800025c:	f44f 13e0 	mov.w	r3, #1835008	; 0x1c0000
 8000260:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000262:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8000266:	4618      	mov	r0, r3
 8000268:	f002 f90e 	bl	8002488 <HAL_RCC_OscConfig>
 800026c:	4603      	mov	r3, r0
 800026e:	2b00      	cmp	r3, #0
 8000270:	d001      	beq.n	8000276 <SystemClock_Config+0x66>
  {
    Error_Handler();
 8000272:	f000 f87d 	bl	8000370 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000276:	230f      	movs	r3, #15
 8000278:	617b      	str	r3, [r7, #20]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800027a:	2302      	movs	r3, #2
 800027c:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800027e:	2300      	movs	r3, #0
 8000280:	61fb      	str	r3, [r7, #28]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000282:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000286:	623b      	str	r3, [r7, #32]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000288:	2300      	movs	r3, #0
 800028a:	627b      	str	r3, [r7, #36]	; 0x24

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 800028c:	f107 0314 	add.w	r3, r7, #20
 8000290:	2102      	movs	r1, #2
 8000292:	4618      	mov	r0, r3
 8000294:	f002 fb7a 	bl	800298c <HAL_RCC_ClockConfig>
 8000298:	4603      	mov	r3, r0
 800029a:	2b00      	cmp	r3, #0
 800029c:	d001      	beq.n	80002a2 <SystemClock_Config+0x92>
  {
    Error_Handler();
 800029e:	f000 f867 	bl	8000370 <Error_Handler>
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB;
 80002a2:	2310      	movs	r3, #16
 80002a4:	607b      	str	r3, [r7, #4]
  PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 80002a6:	2300      	movs	r3, #0
 80002a8:	613b      	str	r3, [r7, #16]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 80002aa:	1d3b      	adds	r3, r7, #4
 80002ac:	4618      	mov	r0, r3
 80002ae:	f002 fcd3 	bl	8002c58 <HAL_RCCEx_PeriphCLKConfig>
 80002b2:	4603      	mov	r3, r0
 80002b4:	2b00      	cmp	r3, #0
 80002b6:	d001      	beq.n	80002bc <SystemClock_Config+0xac>
  {
    Error_Handler();
 80002b8:	f000 f85a 	bl	8000370 <Error_Handler>
  }
}
 80002bc:	bf00      	nop
 80002be:	3750      	adds	r7, #80	; 0x50
 80002c0:	46bd      	mov	sp, r7
 80002c2:	bd80      	pop	{r7, pc}

080002c4 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80002c4:	b580      	push	{r7, lr}
 80002c6:	b088      	sub	sp, #32
 80002c8:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80002ca:	f107 0310 	add.w	r3, r7, #16
 80002ce:	2200      	movs	r2, #0
 80002d0:	601a      	str	r2, [r3, #0]
 80002d2:	605a      	str	r2, [r3, #4]
 80002d4:	609a      	str	r2, [r3, #8]
 80002d6:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80002d8:	4b23      	ldr	r3, [pc, #140]	; (8000368 <MX_GPIO_Init+0xa4>)
 80002da:	699b      	ldr	r3, [r3, #24]
 80002dc:	4a22      	ldr	r2, [pc, #136]	; (8000368 <MX_GPIO_Init+0xa4>)
 80002de:	f043 0310 	orr.w	r3, r3, #16
 80002e2:	6193      	str	r3, [r2, #24]
 80002e4:	4b20      	ldr	r3, [pc, #128]	; (8000368 <MX_GPIO_Init+0xa4>)
 80002e6:	699b      	ldr	r3, [r3, #24]
 80002e8:	f003 0310 	and.w	r3, r3, #16
 80002ec:	60fb      	str	r3, [r7, #12]
 80002ee:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80002f0:	4b1d      	ldr	r3, [pc, #116]	; (8000368 <MX_GPIO_Init+0xa4>)
 80002f2:	699b      	ldr	r3, [r3, #24]
 80002f4:	4a1c      	ldr	r2, [pc, #112]	; (8000368 <MX_GPIO_Init+0xa4>)
 80002f6:	f043 0320 	orr.w	r3, r3, #32
 80002fa:	6193      	str	r3, [r2, #24]
 80002fc:	4b1a      	ldr	r3, [pc, #104]	; (8000368 <MX_GPIO_Init+0xa4>)
 80002fe:	699b      	ldr	r3, [r3, #24]
 8000300:	f003 0320 	and.w	r3, r3, #32
 8000304:	60bb      	str	r3, [r7, #8]
 8000306:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000308:	4b17      	ldr	r3, [pc, #92]	; (8000368 <MX_GPIO_Init+0xa4>)
 800030a:	699b      	ldr	r3, [r3, #24]
 800030c:	4a16      	ldr	r2, [pc, #88]	; (8000368 <MX_GPIO_Init+0xa4>)
 800030e:	f043 0304 	orr.w	r3, r3, #4
 8000312:	6193      	str	r3, [r2, #24]
 8000314:	4b14      	ldr	r3, [pc, #80]	; (8000368 <MX_GPIO_Init+0xa4>)
 8000316:	699b      	ldr	r3, [r3, #24]
 8000318:	f003 0304 	and.w	r3, r3, #4
 800031c:	607b      	str	r3, [r7, #4]
 800031e:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000320:	4b11      	ldr	r3, [pc, #68]	; (8000368 <MX_GPIO_Init+0xa4>)
 8000322:	699b      	ldr	r3, [r3, #24]
 8000324:	4a10      	ldr	r2, [pc, #64]	; (8000368 <MX_GPIO_Init+0xa4>)
 8000326:	f043 0308 	orr.w	r3, r3, #8
 800032a:	6193      	str	r3, [r2, #24]
 800032c:	4b0e      	ldr	r3, [pc, #56]	; (8000368 <MX_GPIO_Init+0xa4>)
 800032e:	699b      	ldr	r3, [r3, #24]
 8000330:	f003 0308 	and.w	r3, r3, #8
 8000334:	603b      	str	r3, [r7, #0]
 8000336:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_RESET);
 8000338:	2200      	movs	r2, #0
 800033a:	2120      	movs	r1, #32
 800033c:	480b      	ldr	r0, [pc, #44]	; (800036c <MX_GPIO_Init+0xa8>)
 800033e:	f000 fbc5 	bl	8000acc <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PB5 */
  GPIO_InitStruct.Pin = GPIO_PIN_5;
 8000342:	2320      	movs	r3, #32
 8000344:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000346:	2301      	movs	r3, #1
 8000348:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800034a:	2300      	movs	r3, #0
 800034c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800034e:	2302      	movs	r3, #2
 8000350:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000352:	f107 0310 	add.w	r3, r7, #16
 8000356:	4619      	mov	r1, r3
 8000358:	4804      	ldr	r0, [pc, #16]	; (800036c <MX_GPIO_Init+0xa8>)
 800035a:	f000 fa33 	bl	80007c4 <HAL_GPIO_Init>

}
 800035e:	bf00      	nop
 8000360:	3720      	adds	r7, #32
 8000362:	46bd      	mov	sp, r7
 8000364:	bd80      	pop	{r7, pc}
 8000366:	bf00      	nop
 8000368:	40021000 	.word	0x40021000
 800036c:	40010c00 	.word	0x40010c00

08000370 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000370:	b480      	push	{r7}
 8000372:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000374:	b672      	cpsid	i
}
 8000376:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000378:	e7fe      	b.n	8000378 <Error_Handler+0x8>
	...

0800037c <HAL_MspInit>:
 800037c:	b480      	push	{r7}
 800037e:	b085      	sub	sp, #20
 8000380:	af00      	add	r7, sp, #0
 8000382:	4b15      	ldr	r3, [pc, #84]	; (80003d8 <HAL_MspInit+0x5c>)
 8000384:	699b      	ldr	r3, [r3, #24]
 8000386:	4a14      	ldr	r2, [pc, #80]	; (80003d8 <HAL_MspInit+0x5c>)
 8000388:	f043 0301 	orr.w	r3, r3, #1
 800038c:	6193      	str	r3, [r2, #24]
 800038e:	4b12      	ldr	r3, [pc, #72]	; (80003d8 <HAL_MspInit+0x5c>)
 8000390:	699b      	ldr	r3, [r3, #24]
 8000392:	f003 0301 	and.w	r3, r3, #1
 8000396:	60bb      	str	r3, [r7, #8]
 8000398:	68bb      	ldr	r3, [r7, #8]
 800039a:	4b0f      	ldr	r3, [pc, #60]	; (80003d8 <HAL_MspInit+0x5c>)
 800039c:	69db      	ldr	r3, [r3, #28]
 800039e:	4a0e      	ldr	r2, [pc, #56]	; (80003d8 <HAL_MspInit+0x5c>)
 80003a0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80003a4:	61d3      	str	r3, [r2, #28]
 80003a6:	4b0c      	ldr	r3, [pc, #48]	; (80003d8 <HAL_MspInit+0x5c>)
 80003a8:	69db      	ldr	r3, [r3, #28]
 80003aa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80003ae:	607b      	str	r3, [r7, #4]
 80003b0:	687b      	ldr	r3, [r7, #4]
 80003b2:	4b0a      	ldr	r3, [pc, #40]	; (80003dc <HAL_MspInit+0x60>)
 80003b4:	685b      	ldr	r3, [r3, #4]
 80003b6:	60fb      	str	r3, [r7, #12]
 80003b8:	68fb      	ldr	r3, [r7, #12]
 80003ba:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 80003be:	60fb      	str	r3, [r7, #12]
 80003c0:	68fb      	ldr	r3, [r7, #12]
 80003c2:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 80003c6:	60fb      	str	r3, [r7, #12]
 80003c8:	4a04      	ldr	r2, [pc, #16]	; (80003dc <HAL_MspInit+0x60>)
 80003ca:	68fb      	ldr	r3, [r7, #12]
 80003cc:	6053      	str	r3, [r2, #4]
 80003ce:	bf00      	nop
 80003d0:	3714      	adds	r7, #20
 80003d2:	46bd      	mov	sp, r7
 80003d4:	bc80      	pop	{r7}
 80003d6:	4770      	bx	lr
 80003d8:	40021000 	.word	0x40021000
 80003dc:	40010000 	.word	0x40010000

080003e0 <NMI_Handler>:
 80003e0:	b480      	push	{r7}
 80003e2:	af00      	add	r7, sp, #0
 80003e4:	e7fe      	b.n	80003e4 <NMI_Handler+0x4>

080003e6 <HardFault_Handler>:
 80003e6:	b480      	push	{r7}
 80003e8:	af00      	add	r7, sp, #0
 80003ea:	e7fe      	b.n	80003ea <HardFault_Handler+0x4>

080003ec <MemManage_Handler>:
 80003ec:	b480      	push	{r7}
 80003ee:	af00      	add	r7, sp, #0
 80003f0:	e7fe      	b.n	80003f0 <MemManage_Handler+0x4>

080003f2 <BusFault_Handler>:
 80003f2:	b480      	push	{r7}
 80003f4:	af00      	add	r7, sp, #0
 80003f6:	e7fe      	b.n	80003f6 <BusFault_Handler+0x4>

080003f8 <UsageFault_Handler>:
 80003f8:	b480      	push	{r7}
 80003fa:	af00      	add	r7, sp, #0
 80003fc:	e7fe      	b.n	80003fc <UsageFault_Handler+0x4>

080003fe <SVC_Handler>:
 80003fe:	b480      	push	{r7}
 8000400:	af00      	add	r7, sp, #0
 8000402:	bf00      	nop
 8000404:	46bd      	mov	sp, r7
 8000406:	bc80      	pop	{r7}
 8000408:	4770      	bx	lr

0800040a <DebugMon_Handler>:
 800040a:	b480      	push	{r7}
 800040c:	af00      	add	r7, sp, #0
 800040e:	bf00      	nop
 8000410:	46bd      	mov	sp, r7
 8000412:	bc80      	pop	{r7}
 8000414:	4770      	bx	lr

08000416 <PendSV_Handler>:
 8000416:	b480      	push	{r7}
 8000418:	af00      	add	r7, sp, #0
 800041a:	bf00      	nop
 800041c:	46bd      	mov	sp, r7
 800041e:	bc80      	pop	{r7}
 8000420:	4770      	bx	lr

08000422 <SysTick_Handler>:
 8000422:	b580      	push	{r7, lr}
 8000424:	af00      	add	r7, sp, #0
 8000426:	f000 f87f 	bl	8000528 <HAL_IncTick>
 800042a:	bf00      	nop
 800042c:	bd80      	pop	{r7, pc}
	...

08000430 <USB_LP_CAN1_RX0_IRQHandler>:
 8000430:	b580      	push	{r7, lr}
 8000432:	af00      	add	r7, sp, #0
 8000434:	4802      	ldr	r0, [pc, #8]	; (8000440 <USB_LP_CAN1_RX0_IRQHandler+0x10>)
 8000436:	f000 fcab 	bl	8000d90 <HAL_PCD_IRQHandler>
 800043a:	bf00      	nop
 800043c:	bd80      	pop	{r7, pc}
 800043e:	bf00      	nop
 8000440:	200006d8 	.word	0x200006d8

08000444 <SystemInit>:
 8000444:	b480      	push	{r7}
 8000446:	af00      	add	r7, sp, #0
 8000448:	bf00      	nop
 800044a:	46bd      	mov	sp, r7
 800044c:	bc80      	pop	{r7}
 800044e:	4770      	bx	lr

08000450 <Reset_Handler>:
 8000450:	480c      	ldr	r0, [pc, #48]	; (8000484 <LoopFillZerobss+0x12>)
 8000452:	490d      	ldr	r1, [pc, #52]	; (8000488 <LoopFillZerobss+0x16>)
 8000454:	4a0d      	ldr	r2, [pc, #52]	; (800048c <LoopFillZerobss+0x1a>)
 8000456:	2300      	movs	r3, #0
 8000458:	e002      	b.n	8000460 <LoopCopyDataInit>

0800045a <CopyDataInit>:
 800045a:	58d4      	ldr	r4, [r2, r3]
 800045c:	50c4      	str	r4, [r0, r3]
 800045e:	3304      	adds	r3, #4

08000460 <LoopCopyDataInit>:
 8000460:	18c4      	adds	r4, r0, r3
 8000462:	428c      	cmp	r4, r1
 8000464:	d3f9      	bcc.n	800045a <CopyDataInit>
 8000466:	4a0a      	ldr	r2, [pc, #40]	; (8000490 <LoopFillZerobss+0x1e>)
 8000468:	4c0a      	ldr	r4, [pc, #40]	; (8000494 <LoopFillZerobss+0x22>)
 800046a:	2300      	movs	r3, #0
 800046c:	e001      	b.n	8000472 <LoopFillZerobss>

0800046e <FillZerobss>:
 800046e:	6013      	str	r3, [r2, #0]
 8000470:	3204      	adds	r2, #4

08000472 <LoopFillZerobss>:
 8000472:	42a2      	cmp	r2, r4
 8000474:	d3fb      	bcc.n	800046e <FillZerobss>
 8000476:	f7ff ffe5 	bl	8000444 <SystemInit>
 800047a:	f007 f94f 	bl	800771c <__libc_init_array>
 800047e:	f7ff fe65 	bl	800014c <main>
 8000482:	4770      	bx	lr
 8000484:	20000000 	.word	0x20000000
 8000488:	20000164 	.word	0x20000164
 800048c:	08007814 	.word	0x08007814
 8000490:	20000164 	.word	0x20000164
 8000494:	20000a20 	.word	0x20000a20

08000498 <ADC1_2_IRQHandler>:
 8000498:	e7fe      	b.n	8000498 <ADC1_2_IRQHandler>
	...

0800049c <HAL_Init>:
 800049c:	b580      	push	{r7, lr}
 800049e:	af00      	add	r7, sp, #0
 80004a0:	4b08      	ldr	r3, [pc, #32]	; (80004c4 <HAL_Init+0x28>)
 80004a2:	681b      	ldr	r3, [r3, #0]
 80004a4:	4a07      	ldr	r2, [pc, #28]	; (80004c4 <HAL_Init+0x28>)
 80004a6:	f043 0310 	orr.w	r3, r3, #16
 80004aa:	6013      	str	r3, [r2, #0]
 80004ac:	2003      	movs	r0, #3
 80004ae:	f000 f947 	bl	8000740 <HAL_NVIC_SetPriorityGrouping>
 80004b2:	200f      	movs	r0, #15
 80004b4:	f000 f808 	bl	80004c8 <HAL_InitTick>
 80004b8:	f7ff ff60 	bl	800037c <HAL_MspInit>
 80004bc:	2300      	movs	r3, #0
 80004be:	4618      	mov	r0, r3
 80004c0:	bd80      	pop	{r7, pc}
 80004c2:	bf00      	nop
 80004c4:	40022000 	.word	0x40022000

080004c8 <HAL_InitTick>:
 80004c8:	b580      	push	{r7, lr}
 80004ca:	b082      	sub	sp, #8
 80004cc:	af00      	add	r7, sp, #0
 80004ce:	6078      	str	r0, [r7, #4]
 80004d0:	4b12      	ldr	r3, [pc, #72]	; (800051c <HAL_InitTick+0x54>)
 80004d2:	681a      	ldr	r2, [r3, #0]
 80004d4:	4b12      	ldr	r3, [pc, #72]	; (8000520 <HAL_InitTick+0x58>)
 80004d6:	781b      	ldrb	r3, [r3, #0]
 80004d8:	4619      	mov	r1, r3
 80004da:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80004de:	fbb3 f3f1 	udiv	r3, r3, r1
 80004e2:	fbb2 f3f3 	udiv	r3, r2, r3
 80004e6:	4618      	mov	r0, r3
 80004e8:	f000 f95f 	bl	80007aa <HAL_SYSTICK_Config>
 80004ec:	4603      	mov	r3, r0
 80004ee:	2b00      	cmp	r3, #0
 80004f0:	d001      	beq.n	80004f6 <HAL_InitTick+0x2e>
 80004f2:	2301      	movs	r3, #1
 80004f4:	e00e      	b.n	8000514 <HAL_InitTick+0x4c>
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	2b0f      	cmp	r3, #15
 80004fa:	d80a      	bhi.n	8000512 <HAL_InitTick+0x4a>
 80004fc:	2200      	movs	r2, #0
 80004fe:	6879      	ldr	r1, [r7, #4]
 8000500:	f04f 30ff 	mov.w	r0, #4294967295
 8000504:	f000 f927 	bl	8000756 <HAL_NVIC_SetPriority>
 8000508:	4a06      	ldr	r2, [pc, #24]	; (8000524 <HAL_InitTick+0x5c>)
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	6013      	str	r3, [r2, #0]
 800050e:	2300      	movs	r3, #0
 8000510:	e000      	b.n	8000514 <HAL_InitTick+0x4c>
 8000512:	2301      	movs	r3, #1
 8000514:	4618      	mov	r0, r3
 8000516:	3708      	adds	r7, #8
 8000518:	46bd      	mov	sp, r7
 800051a:	bd80      	pop	{r7, pc}
 800051c:	20000000 	.word	0x20000000
 8000520:	20000008 	.word	0x20000008
 8000524:	20000004 	.word	0x20000004

08000528 <HAL_IncTick>:
 8000528:	b480      	push	{r7}
 800052a:	af00      	add	r7, sp, #0
 800052c:	4b05      	ldr	r3, [pc, #20]	; (8000544 <HAL_IncTick+0x1c>)
 800052e:	781b      	ldrb	r3, [r3, #0]
 8000530:	461a      	mov	r2, r3
 8000532:	4b05      	ldr	r3, [pc, #20]	; (8000548 <HAL_IncTick+0x20>)
 8000534:	681b      	ldr	r3, [r3, #0]
 8000536:	4413      	add	r3, r2
 8000538:	4a03      	ldr	r2, [pc, #12]	; (8000548 <HAL_IncTick+0x20>)
 800053a:	6013      	str	r3, [r2, #0]
 800053c:	bf00      	nop
 800053e:	46bd      	mov	sp, r7
 8000540:	bc80      	pop	{r7}
 8000542:	4770      	bx	lr
 8000544:	20000008 	.word	0x20000008
 8000548:	2000020c 	.word	0x2000020c

0800054c <HAL_GetTick>:
 800054c:	b480      	push	{r7}
 800054e:	af00      	add	r7, sp, #0
 8000550:	4b02      	ldr	r3, [pc, #8]	; (800055c <HAL_GetTick+0x10>)
 8000552:	681b      	ldr	r3, [r3, #0]
 8000554:	4618      	mov	r0, r3
 8000556:	46bd      	mov	sp, r7
 8000558:	bc80      	pop	{r7}
 800055a:	4770      	bx	lr
 800055c:	2000020c 	.word	0x2000020c

08000560 <HAL_Delay>:
 8000560:	b580      	push	{r7, lr}
 8000562:	b084      	sub	sp, #16
 8000564:	af00      	add	r7, sp, #0
 8000566:	6078      	str	r0, [r7, #4]
 8000568:	f7ff fff0 	bl	800054c <HAL_GetTick>
 800056c:	60b8      	str	r0, [r7, #8]
 800056e:	687b      	ldr	r3, [r7, #4]
 8000570:	60fb      	str	r3, [r7, #12]
 8000572:	68fb      	ldr	r3, [r7, #12]
 8000574:	f1b3 3fff 	cmp.w	r3, #4294967295
 8000578:	d005      	beq.n	8000586 <HAL_Delay+0x26>
 800057a:	4b0a      	ldr	r3, [pc, #40]	; (80005a4 <HAL_Delay+0x44>)
 800057c:	781b      	ldrb	r3, [r3, #0]
 800057e:	461a      	mov	r2, r3
 8000580:	68fb      	ldr	r3, [r7, #12]
 8000582:	4413      	add	r3, r2
 8000584:	60fb      	str	r3, [r7, #12]
 8000586:	bf00      	nop
 8000588:	f7ff ffe0 	bl	800054c <HAL_GetTick>
 800058c:	4602      	mov	r2, r0
 800058e:	68bb      	ldr	r3, [r7, #8]
 8000590:	1ad3      	subs	r3, r2, r3
 8000592:	68fa      	ldr	r2, [r7, #12]
 8000594:	429a      	cmp	r2, r3
 8000596:	d8f7      	bhi.n	8000588 <HAL_Delay+0x28>
 8000598:	bf00      	nop
 800059a:	bf00      	nop
 800059c:	3710      	adds	r7, #16
 800059e:	46bd      	mov	sp, r7
 80005a0:	bd80      	pop	{r7, pc}
 80005a2:	bf00      	nop
 80005a4:	20000008 	.word	0x20000008

080005a8 <__NVIC_SetPriorityGrouping>:
 80005a8:	b480      	push	{r7}
 80005aa:	b085      	sub	sp, #20
 80005ac:	af00      	add	r7, sp, #0
 80005ae:	6078      	str	r0, [r7, #4]
 80005b0:	687b      	ldr	r3, [r7, #4]
 80005b2:	f003 0307 	and.w	r3, r3, #7
 80005b6:	60fb      	str	r3, [r7, #12]
 80005b8:	4b0c      	ldr	r3, [pc, #48]	; (80005ec <__NVIC_SetPriorityGrouping+0x44>)
 80005ba:	68db      	ldr	r3, [r3, #12]
 80005bc:	60bb      	str	r3, [r7, #8]
 80005be:	68ba      	ldr	r2, [r7, #8]
 80005c0:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80005c4:	4013      	ands	r3, r2
 80005c6:	60bb      	str	r3, [r7, #8]
 80005c8:	68fb      	ldr	r3, [r7, #12]
 80005ca:	021a      	lsls	r2, r3, #8
 80005cc:	68bb      	ldr	r3, [r7, #8]
 80005ce:	4313      	orrs	r3, r2
 80005d0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80005d4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80005d8:	60bb      	str	r3, [r7, #8]
 80005da:	4a04      	ldr	r2, [pc, #16]	; (80005ec <__NVIC_SetPriorityGrouping+0x44>)
 80005dc:	68bb      	ldr	r3, [r7, #8]
 80005de:	60d3      	str	r3, [r2, #12]
 80005e0:	bf00      	nop
 80005e2:	3714      	adds	r7, #20
 80005e4:	46bd      	mov	sp, r7
 80005e6:	bc80      	pop	{r7}
 80005e8:	4770      	bx	lr
 80005ea:	bf00      	nop
 80005ec:	e000ed00 	.word	0xe000ed00

080005f0 <__NVIC_GetPriorityGrouping>:
 80005f0:	b480      	push	{r7}
 80005f2:	af00      	add	r7, sp, #0
 80005f4:	4b04      	ldr	r3, [pc, #16]	; (8000608 <__NVIC_GetPriorityGrouping+0x18>)
 80005f6:	68db      	ldr	r3, [r3, #12]
 80005f8:	0a1b      	lsrs	r3, r3, #8
 80005fa:	f003 0307 	and.w	r3, r3, #7
 80005fe:	4618      	mov	r0, r3
 8000600:	46bd      	mov	sp, r7
 8000602:	bc80      	pop	{r7}
 8000604:	4770      	bx	lr
 8000606:	bf00      	nop
 8000608:	e000ed00 	.word	0xe000ed00

0800060c <__NVIC_EnableIRQ>:
 800060c:	b480      	push	{r7}
 800060e:	b083      	sub	sp, #12
 8000610:	af00      	add	r7, sp, #0
 8000612:	4603      	mov	r3, r0
 8000614:	71fb      	strb	r3, [r7, #7]
 8000616:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800061a:	2b00      	cmp	r3, #0
 800061c:	db0b      	blt.n	8000636 <__NVIC_EnableIRQ+0x2a>
 800061e:	79fb      	ldrb	r3, [r7, #7]
 8000620:	f003 021f 	and.w	r2, r3, #31
 8000624:	4906      	ldr	r1, [pc, #24]	; (8000640 <__NVIC_EnableIRQ+0x34>)
 8000626:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800062a:	095b      	lsrs	r3, r3, #5
 800062c:	2001      	movs	r0, #1
 800062e:	fa00 f202 	lsl.w	r2, r0, r2
 8000632:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000636:	bf00      	nop
 8000638:	370c      	adds	r7, #12
 800063a:	46bd      	mov	sp, r7
 800063c:	bc80      	pop	{r7}
 800063e:	4770      	bx	lr
 8000640:	e000e100 	.word	0xe000e100

08000644 <__NVIC_SetPriority>:
 8000644:	b480      	push	{r7}
 8000646:	b083      	sub	sp, #12
 8000648:	af00      	add	r7, sp, #0
 800064a:	4603      	mov	r3, r0
 800064c:	6039      	str	r1, [r7, #0]
 800064e:	71fb      	strb	r3, [r7, #7]
 8000650:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000654:	2b00      	cmp	r3, #0
 8000656:	db0a      	blt.n	800066e <__NVIC_SetPriority+0x2a>
 8000658:	683b      	ldr	r3, [r7, #0]
 800065a:	b2da      	uxtb	r2, r3
 800065c:	490c      	ldr	r1, [pc, #48]	; (8000690 <__NVIC_SetPriority+0x4c>)
 800065e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000662:	0112      	lsls	r2, r2, #4
 8000664:	b2d2      	uxtb	r2, r2
 8000666:	440b      	add	r3, r1
 8000668:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 800066c:	e00a      	b.n	8000684 <__NVIC_SetPriority+0x40>
 800066e:	683b      	ldr	r3, [r7, #0]
 8000670:	b2da      	uxtb	r2, r3
 8000672:	4908      	ldr	r1, [pc, #32]	; (8000694 <__NVIC_SetPriority+0x50>)
 8000674:	79fb      	ldrb	r3, [r7, #7]
 8000676:	f003 030f 	and.w	r3, r3, #15
 800067a:	3b04      	subs	r3, #4
 800067c:	0112      	lsls	r2, r2, #4
 800067e:	b2d2      	uxtb	r2, r2
 8000680:	440b      	add	r3, r1
 8000682:	761a      	strb	r2, [r3, #24]
 8000684:	bf00      	nop
 8000686:	370c      	adds	r7, #12
 8000688:	46bd      	mov	sp, r7
 800068a:	bc80      	pop	{r7}
 800068c:	4770      	bx	lr
 800068e:	bf00      	nop
 8000690:	e000e100 	.word	0xe000e100
 8000694:	e000ed00 	.word	0xe000ed00

08000698 <NVIC_EncodePriority>:
 8000698:	b480      	push	{r7}
 800069a:	b089      	sub	sp, #36	; 0x24
 800069c:	af00      	add	r7, sp, #0
 800069e:	60f8      	str	r0, [r7, #12]
 80006a0:	60b9      	str	r1, [r7, #8]
 80006a2:	607a      	str	r2, [r7, #4]
 80006a4:	68fb      	ldr	r3, [r7, #12]
 80006a6:	f003 0307 	and.w	r3, r3, #7
 80006aa:	61fb      	str	r3, [r7, #28]
 80006ac:	69fb      	ldr	r3, [r7, #28]
 80006ae:	f1c3 0307 	rsb	r3, r3, #7
 80006b2:	2b04      	cmp	r3, #4
 80006b4:	bf28      	it	cs
 80006b6:	2304      	movcs	r3, #4
 80006b8:	61bb      	str	r3, [r7, #24]
 80006ba:	69fb      	ldr	r3, [r7, #28]
 80006bc:	3304      	adds	r3, #4
 80006be:	2b06      	cmp	r3, #6
 80006c0:	d902      	bls.n	80006c8 <NVIC_EncodePriority+0x30>
 80006c2:	69fb      	ldr	r3, [r7, #28]
 80006c4:	3b03      	subs	r3, #3
 80006c6:	e000      	b.n	80006ca <NVIC_EncodePriority+0x32>
 80006c8:	2300      	movs	r3, #0
 80006ca:	617b      	str	r3, [r7, #20]
 80006cc:	f04f 32ff 	mov.w	r2, #4294967295
 80006d0:	69bb      	ldr	r3, [r7, #24]
 80006d2:	fa02 f303 	lsl.w	r3, r2, r3
 80006d6:	43da      	mvns	r2, r3
 80006d8:	68bb      	ldr	r3, [r7, #8]
 80006da:	401a      	ands	r2, r3
 80006dc:	697b      	ldr	r3, [r7, #20]
 80006de:	409a      	lsls	r2, r3
 80006e0:	f04f 31ff 	mov.w	r1, #4294967295
 80006e4:	697b      	ldr	r3, [r7, #20]
 80006e6:	fa01 f303 	lsl.w	r3, r1, r3
 80006ea:	43d9      	mvns	r1, r3
 80006ec:	687b      	ldr	r3, [r7, #4]
 80006ee:	400b      	ands	r3, r1
 80006f0:	4313      	orrs	r3, r2
 80006f2:	4618      	mov	r0, r3
 80006f4:	3724      	adds	r7, #36	; 0x24
 80006f6:	46bd      	mov	sp, r7
 80006f8:	bc80      	pop	{r7}
 80006fa:	4770      	bx	lr

080006fc <SysTick_Config>:
 80006fc:	b580      	push	{r7, lr}
 80006fe:	b082      	sub	sp, #8
 8000700:	af00      	add	r7, sp, #0
 8000702:	6078      	str	r0, [r7, #4]
 8000704:	687b      	ldr	r3, [r7, #4]
 8000706:	3b01      	subs	r3, #1
 8000708:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800070c:	d301      	bcc.n	8000712 <SysTick_Config+0x16>
 800070e:	2301      	movs	r3, #1
 8000710:	e00f      	b.n	8000732 <SysTick_Config+0x36>
 8000712:	4a0a      	ldr	r2, [pc, #40]	; (800073c <SysTick_Config+0x40>)
 8000714:	687b      	ldr	r3, [r7, #4]
 8000716:	3b01      	subs	r3, #1
 8000718:	6053      	str	r3, [r2, #4]
 800071a:	210f      	movs	r1, #15
 800071c:	f04f 30ff 	mov.w	r0, #4294967295
 8000720:	f7ff ff90 	bl	8000644 <__NVIC_SetPriority>
 8000724:	4b05      	ldr	r3, [pc, #20]	; (800073c <SysTick_Config+0x40>)
 8000726:	2200      	movs	r2, #0
 8000728:	609a      	str	r2, [r3, #8]
 800072a:	4b04      	ldr	r3, [pc, #16]	; (800073c <SysTick_Config+0x40>)
 800072c:	2207      	movs	r2, #7
 800072e:	601a      	str	r2, [r3, #0]
 8000730:	2300      	movs	r3, #0
 8000732:	4618      	mov	r0, r3
 8000734:	3708      	adds	r7, #8
 8000736:	46bd      	mov	sp, r7
 8000738:	bd80      	pop	{r7, pc}
 800073a:	bf00      	nop
 800073c:	e000e010 	.word	0xe000e010

08000740 <HAL_NVIC_SetPriorityGrouping>:
 8000740:	b580      	push	{r7, lr}
 8000742:	b082      	sub	sp, #8
 8000744:	af00      	add	r7, sp, #0
 8000746:	6078      	str	r0, [r7, #4]
 8000748:	6878      	ldr	r0, [r7, #4]
 800074a:	f7ff ff2d 	bl	80005a8 <__NVIC_SetPriorityGrouping>
 800074e:	bf00      	nop
 8000750:	3708      	adds	r7, #8
 8000752:	46bd      	mov	sp, r7
 8000754:	bd80      	pop	{r7, pc}

08000756 <HAL_NVIC_SetPriority>:
 8000756:	b580      	push	{r7, lr}
 8000758:	b086      	sub	sp, #24
 800075a:	af00      	add	r7, sp, #0
 800075c:	4603      	mov	r3, r0
 800075e:	60b9      	str	r1, [r7, #8]
 8000760:	607a      	str	r2, [r7, #4]
 8000762:	73fb      	strb	r3, [r7, #15]
 8000764:	2300      	movs	r3, #0
 8000766:	617b      	str	r3, [r7, #20]
 8000768:	f7ff ff42 	bl	80005f0 <__NVIC_GetPriorityGrouping>
 800076c:	6178      	str	r0, [r7, #20]
 800076e:	687a      	ldr	r2, [r7, #4]
 8000770:	68b9      	ldr	r1, [r7, #8]
 8000772:	6978      	ldr	r0, [r7, #20]
 8000774:	f7ff ff90 	bl	8000698 <NVIC_EncodePriority>
 8000778:	4602      	mov	r2, r0
 800077a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800077e:	4611      	mov	r1, r2
 8000780:	4618      	mov	r0, r3
 8000782:	f7ff ff5f 	bl	8000644 <__NVIC_SetPriority>
 8000786:	bf00      	nop
 8000788:	3718      	adds	r7, #24
 800078a:	46bd      	mov	sp, r7
 800078c:	bd80      	pop	{r7, pc}

0800078e <HAL_NVIC_EnableIRQ>:
 800078e:	b580      	push	{r7, lr}
 8000790:	b082      	sub	sp, #8
 8000792:	af00      	add	r7, sp, #0
 8000794:	4603      	mov	r3, r0
 8000796:	71fb      	strb	r3, [r7, #7]
 8000798:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800079c:	4618      	mov	r0, r3
 800079e:	f7ff ff35 	bl	800060c <__NVIC_EnableIRQ>
 80007a2:	bf00      	nop
 80007a4:	3708      	adds	r7, #8
 80007a6:	46bd      	mov	sp, r7
 80007a8:	bd80      	pop	{r7, pc}

080007aa <HAL_SYSTICK_Config>:
 80007aa:	b580      	push	{r7, lr}
 80007ac:	b082      	sub	sp, #8
 80007ae:	af00      	add	r7, sp, #0
 80007b0:	6078      	str	r0, [r7, #4]
 80007b2:	6878      	ldr	r0, [r7, #4]
 80007b4:	f7ff ffa2 	bl	80006fc <SysTick_Config>
 80007b8:	4603      	mov	r3, r0
 80007ba:	4618      	mov	r0, r3
 80007bc:	3708      	adds	r7, #8
 80007be:	46bd      	mov	sp, r7
 80007c0:	bd80      	pop	{r7, pc}
	...

080007c4 <HAL_GPIO_Init>:
 80007c4:	b480      	push	{r7}
 80007c6:	b08b      	sub	sp, #44	; 0x2c
 80007c8:	af00      	add	r7, sp, #0
 80007ca:	6078      	str	r0, [r7, #4]
 80007cc:	6039      	str	r1, [r7, #0]
 80007ce:	2300      	movs	r3, #0
 80007d0:	627b      	str	r3, [r7, #36]	; 0x24
 80007d2:	2300      	movs	r3, #0
 80007d4:	623b      	str	r3, [r7, #32]
 80007d6:	e169      	b.n	8000aac <HAL_GPIO_Init+0x2e8>
 80007d8:	2201      	movs	r2, #1
 80007da:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80007dc:	fa02 f303 	lsl.w	r3, r2, r3
 80007e0:	61fb      	str	r3, [r7, #28]
 80007e2:	683b      	ldr	r3, [r7, #0]
 80007e4:	681b      	ldr	r3, [r3, #0]
 80007e6:	69fa      	ldr	r2, [r7, #28]
 80007e8:	4013      	ands	r3, r2
 80007ea:	61bb      	str	r3, [r7, #24]
 80007ec:	69ba      	ldr	r2, [r7, #24]
 80007ee:	69fb      	ldr	r3, [r7, #28]
 80007f0:	429a      	cmp	r2, r3
 80007f2:	f040 8158 	bne.w	8000aa6 <HAL_GPIO_Init+0x2e2>
 80007f6:	683b      	ldr	r3, [r7, #0]
 80007f8:	685b      	ldr	r3, [r3, #4]
 80007fa:	4a9a      	ldr	r2, [pc, #616]	; (8000a64 <HAL_GPIO_Init+0x2a0>)
 80007fc:	4293      	cmp	r3, r2
 80007fe:	d05e      	beq.n	80008be <HAL_GPIO_Init+0xfa>
 8000800:	4a98      	ldr	r2, [pc, #608]	; (8000a64 <HAL_GPIO_Init+0x2a0>)
 8000802:	4293      	cmp	r3, r2
 8000804:	d875      	bhi.n	80008f2 <HAL_GPIO_Init+0x12e>
 8000806:	4a98      	ldr	r2, [pc, #608]	; (8000a68 <HAL_GPIO_Init+0x2a4>)
 8000808:	4293      	cmp	r3, r2
 800080a:	d058      	beq.n	80008be <HAL_GPIO_Init+0xfa>
 800080c:	4a96      	ldr	r2, [pc, #600]	; (8000a68 <HAL_GPIO_Init+0x2a4>)
 800080e:	4293      	cmp	r3, r2
 8000810:	d86f      	bhi.n	80008f2 <HAL_GPIO_Init+0x12e>
 8000812:	4a96      	ldr	r2, [pc, #600]	; (8000a6c <HAL_GPIO_Init+0x2a8>)
 8000814:	4293      	cmp	r3, r2
 8000816:	d052      	beq.n	80008be <HAL_GPIO_Init+0xfa>
 8000818:	4a94      	ldr	r2, [pc, #592]	; (8000a6c <HAL_GPIO_Init+0x2a8>)
 800081a:	4293      	cmp	r3, r2
 800081c:	d869      	bhi.n	80008f2 <HAL_GPIO_Init+0x12e>
 800081e:	4a94      	ldr	r2, [pc, #592]	; (8000a70 <HAL_GPIO_Init+0x2ac>)
 8000820:	4293      	cmp	r3, r2
 8000822:	d04c      	beq.n	80008be <HAL_GPIO_Init+0xfa>
 8000824:	4a92      	ldr	r2, [pc, #584]	; (8000a70 <HAL_GPIO_Init+0x2ac>)
 8000826:	4293      	cmp	r3, r2
 8000828:	d863      	bhi.n	80008f2 <HAL_GPIO_Init+0x12e>
 800082a:	4a92      	ldr	r2, [pc, #584]	; (8000a74 <HAL_GPIO_Init+0x2b0>)
 800082c:	4293      	cmp	r3, r2
 800082e:	d046      	beq.n	80008be <HAL_GPIO_Init+0xfa>
 8000830:	4a90      	ldr	r2, [pc, #576]	; (8000a74 <HAL_GPIO_Init+0x2b0>)
 8000832:	4293      	cmp	r3, r2
 8000834:	d85d      	bhi.n	80008f2 <HAL_GPIO_Init+0x12e>
 8000836:	2b12      	cmp	r3, #18
 8000838:	d82a      	bhi.n	8000890 <HAL_GPIO_Init+0xcc>
 800083a:	2b12      	cmp	r3, #18
 800083c:	d859      	bhi.n	80008f2 <HAL_GPIO_Init+0x12e>
 800083e:	a201      	add	r2, pc, #4	; (adr r2, 8000844 <HAL_GPIO_Init+0x80>)
 8000840:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000844:	080008bf 	.word	0x080008bf
 8000848:	08000899 	.word	0x08000899
 800084c:	080008ab 	.word	0x080008ab
 8000850:	080008ed 	.word	0x080008ed
 8000854:	080008f3 	.word	0x080008f3
 8000858:	080008f3 	.word	0x080008f3
 800085c:	080008f3 	.word	0x080008f3
 8000860:	080008f3 	.word	0x080008f3
 8000864:	080008f3 	.word	0x080008f3
 8000868:	080008f3 	.word	0x080008f3
 800086c:	080008f3 	.word	0x080008f3
 8000870:	080008f3 	.word	0x080008f3
 8000874:	080008f3 	.word	0x080008f3
 8000878:	080008f3 	.word	0x080008f3
 800087c:	080008f3 	.word	0x080008f3
 8000880:	080008f3 	.word	0x080008f3
 8000884:	080008f3 	.word	0x080008f3
 8000888:	080008a1 	.word	0x080008a1
 800088c:	080008b5 	.word	0x080008b5
 8000890:	4a79      	ldr	r2, [pc, #484]	; (8000a78 <HAL_GPIO_Init+0x2b4>)
 8000892:	4293      	cmp	r3, r2
 8000894:	d013      	beq.n	80008be <HAL_GPIO_Init+0xfa>
 8000896:	e02c      	b.n	80008f2 <HAL_GPIO_Init+0x12e>
 8000898:	683b      	ldr	r3, [r7, #0]
 800089a:	68db      	ldr	r3, [r3, #12]
 800089c:	623b      	str	r3, [r7, #32]
 800089e:	e029      	b.n	80008f4 <HAL_GPIO_Init+0x130>
 80008a0:	683b      	ldr	r3, [r7, #0]
 80008a2:	68db      	ldr	r3, [r3, #12]
 80008a4:	3304      	adds	r3, #4
 80008a6:	623b      	str	r3, [r7, #32]
 80008a8:	e024      	b.n	80008f4 <HAL_GPIO_Init+0x130>
 80008aa:	683b      	ldr	r3, [r7, #0]
 80008ac:	68db      	ldr	r3, [r3, #12]
 80008ae:	3308      	adds	r3, #8
 80008b0:	623b      	str	r3, [r7, #32]
 80008b2:	e01f      	b.n	80008f4 <HAL_GPIO_Init+0x130>
 80008b4:	683b      	ldr	r3, [r7, #0]
 80008b6:	68db      	ldr	r3, [r3, #12]
 80008b8:	330c      	adds	r3, #12
 80008ba:	623b      	str	r3, [r7, #32]
 80008bc:	e01a      	b.n	80008f4 <HAL_GPIO_Init+0x130>
 80008be:	683b      	ldr	r3, [r7, #0]
 80008c0:	689b      	ldr	r3, [r3, #8]
 80008c2:	2b00      	cmp	r3, #0
 80008c4:	d102      	bne.n	80008cc <HAL_GPIO_Init+0x108>
 80008c6:	2304      	movs	r3, #4
 80008c8:	623b      	str	r3, [r7, #32]
 80008ca:	e013      	b.n	80008f4 <HAL_GPIO_Init+0x130>
 80008cc:	683b      	ldr	r3, [r7, #0]
 80008ce:	689b      	ldr	r3, [r3, #8]
 80008d0:	2b01      	cmp	r3, #1
 80008d2:	d105      	bne.n	80008e0 <HAL_GPIO_Init+0x11c>
 80008d4:	2308      	movs	r3, #8
 80008d6:	623b      	str	r3, [r7, #32]
 80008d8:	687b      	ldr	r3, [r7, #4]
 80008da:	69fa      	ldr	r2, [r7, #28]
 80008dc:	611a      	str	r2, [r3, #16]
 80008de:	e009      	b.n	80008f4 <HAL_GPIO_Init+0x130>
 80008e0:	2308      	movs	r3, #8
 80008e2:	623b      	str	r3, [r7, #32]
 80008e4:	687b      	ldr	r3, [r7, #4]
 80008e6:	69fa      	ldr	r2, [r7, #28]
 80008e8:	615a      	str	r2, [r3, #20]
 80008ea:	e003      	b.n	80008f4 <HAL_GPIO_Init+0x130>
 80008ec:	2300      	movs	r3, #0
 80008ee:	623b      	str	r3, [r7, #32]
 80008f0:	e000      	b.n	80008f4 <HAL_GPIO_Init+0x130>
 80008f2:	bf00      	nop
 80008f4:	69bb      	ldr	r3, [r7, #24]
 80008f6:	2bff      	cmp	r3, #255	; 0xff
 80008f8:	d801      	bhi.n	80008fe <HAL_GPIO_Init+0x13a>
 80008fa:	687b      	ldr	r3, [r7, #4]
 80008fc:	e001      	b.n	8000902 <HAL_GPIO_Init+0x13e>
 80008fe:	687b      	ldr	r3, [r7, #4]
 8000900:	3304      	adds	r3, #4
 8000902:	617b      	str	r3, [r7, #20]
 8000904:	69bb      	ldr	r3, [r7, #24]
 8000906:	2bff      	cmp	r3, #255	; 0xff
 8000908:	d802      	bhi.n	8000910 <HAL_GPIO_Init+0x14c>
 800090a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800090c:	009b      	lsls	r3, r3, #2
 800090e:	e002      	b.n	8000916 <HAL_GPIO_Init+0x152>
 8000910:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000912:	3b08      	subs	r3, #8
 8000914:	009b      	lsls	r3, r3, #2
 8000916:	613b      	str	r3, [r7, #16]
 8000918:	697b      	ldr	r3, [r7, #20]
 800091a:	681a      	ldr	r2, [r3, #0]
 800091c:	210f      	movs	r1, #15
 800091e:	693b      	ldr	r3, [r7, #16]
 8000920:	fa01 f303 	lsl.w	r3, r1, r3
 8000924:	43db      	mvns	r3, r3
 8000926:	401a      	ands	r2, r3
 8000928:	6a39      	ldr	r1, [r7, #32]
 800092a:	693b      	ldr	r3, [r7, #16]
 800092c:	fa01 f303 	lsl.w	r3, r1, r3
 8000930:	431a      	orrs	r2, r3
 8000932:	697b      	ldr	r3, [r7, #20]
 8000934:	601a      	str	r2, [r3, #0]
 8000936:	683b      	ldr	r3, [r7, #0]
 8000938:	685b      	ldr	r3, [r3, #4]
 800093a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800093e:	2b00      	cmp	r3, #0
 8000940:	f000 80b1 	beq.w	8000aa6 <HAL_GPIO_Init+0x2e2>
 8000944:	4b4d      	ldr	r3, [pc, #308]	; (8000a7c <HAL_GPIO_Init+0x2b8>)
 8000946:	699b      	ldr	r3, [r3, #24]
 8000948:	4a4c      	ldr	r2, [pc, #304]	; (8000a7c <HAL_GPIO_Init+0x2b8>)
 800094a:	f043 0301 	orr.w	r3, r3, #1
 800094e:	6193      	str	r3, [r2, #24]
 8000950:	4b4a      	ldr	r3, [pc, #296]	; (8000a7c <HAL_GPIO_Init+0x2b8>)
 8000952:	699b      	ldr	r3, [r3, #24]
 8000954:	f003 0301 	and.w	r3, r3, #1
 8000958:	60bb      	str	r3, [r7, #8]
 800095a:	68bb      	ldr	r3, [r7, #8]
 800095c:	4a48      	ldr	r2, [pc, #288]	; (8000a80 <HAL_GPIO_Init+0x2bc>)
 800095e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000960:	089b      	lsrs	r3, r3, #2
 8000962:	3302      	adds	r3, #2
 8000964:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000968:	60fb      	str	r3, [r7, #12]
 800096a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800096c:	f003 0303 	and.w	r3, r3, #3
 8000970:	009b      	lsls	r3, r3, #2
 8000972:	220f      	movs	r2, #15
 8000974:	fa02 f303 	lsl.w	r3, r2, r3
 8000978:	43db      	mvns	r3, r3
 800097a:	68fa      	ldr	r2, [r7, #12]
 800097c:	4013      	ands	r3, r2
 800097e:	60fb      	str	r3, [r7, #12]
 8000980:	687b      	ldr	r3, [r7, #4]
 8000982:	4a40      	ldr	r2, [pc, #256]	; (8000a84 <HAL_GPIO_Init+0x2c0>)
 8000984:	4293      	cmp	r3, r2
 8000986:	d013      	beq.n	80009b0 <HAL_GPIO_Init+0x1ec>
 8000988:	687b      	ldr	r3, [r7, #4]
 800098a:	4a3f      	ldr	r2, [pc, #252]	; (8000a88 <HAL_GPIO_Init+0x2c4>)
 800098c:	4293      	cmp	r3, r2
 800098e:	d00d      	beq.n	80009ac <HAL_GPIO_Init+0x1e8>
 8000990:	687b      	ldr	r3, [r7, #4]
 8000992:	4a3e      	ldr	r2, [pc, #248]	; (8000a8c <HAL_GPIO_Init+0x2c8>)
 8000994:	4293      	cmp	r3, r2
 8000996:	d007      	beq.n	80009a8 <HAL_GPIO_Init+0x1e4>
 8000998:	687b      	ldr	r3, [r7, #4]
 800099a:	4a3d      	ldr	r2, [pc, #244]	; (8000a90 <HAL_GPIO_Init+0x2cc>)
 800099c:	4293      	cmp	r3, r2
 800099e:	d101      	bne.n	80009a4 <HAL_GPIO_Init+0x1e0>
 80009a0:	2303      	movs	r3, #3
 80009a2:	e006      	b.n	80009b2 <HAL_GPIO_Init+0x1ee>
 80009a4:	2304      	movs	r3, #4
 80009a6:	e004      	b.n	80009b2 <HAL_GPIO_Init+0x1ee>
 80009a8:	2302      	movs	r3, #2
 80009aa:	e002      	b.n	80009b2 <HAL_GPIO_Init+0x1ee>
 80009ac:	2301      	movs	r3, #1
 80009ae:	e000      	b.n	80009b2 <HAL_GPIO_Init+0x1ee>
 80009b0:	2300      	movs	r3, #0
 80009b2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80009b4:	f002 0203 	and.w	r2, r2, #3
 80009b8:	0092      	lsls	r2, r2, #2
 80009ba:	4093      	lsls	r3, r2
 80009bc:	68fa      	ldr	r2, [r7, #12]
 80009be:	4313      	orrs	r3, r2
 80009c0:	60fb      	str	r3, [r7, #12]
 80009c2:	492f      	ldr	r1, [pc, #188]	; (8000a80 <HAL_GPIO_Init+0x2bc>)
 80009c4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80009c6:	089b      	lsrs	r3, r3, #2
 80009c8:	3302      	adds	r3, #2
 80009ca:	68fa      	ldr	r2, [r7, #12]
 80009cc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80009d0:	683b      	ldr	r3, [r7, #0]
 80009d2:	685b      	ldr	r3, [r3, #4]
 80009d4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80009d8:	2b00      	cmp	r3, #0
 80009da:	d006      	beq.n	80009ea <HAL_GPIO_Init+0x226>
 80009dc:	4b2d      	ldr	r3, [pc, #180]	; (8000a94 <HAL_GPIO_Init+0x2d0>)
 80009de:	681a      	ldr	r2, [r3, #0]
 80009e0:	492c      	ldr	r1, [pc, #176]	; (8000a94 <HAL_GPIO_Init+0x2d0>)
 80009e2:	69bb      	ldr	r3, [r7, #24]
 80009e4:	4313      	orrs	r3, r2
 80009e6:	600b      	str	r3, [r1, #0]
 80009e8:	e006      	b.n	80009f8 <HAL_GPIO_Init+0x234>
 80009ea:	4b2a      	ldr	r3, [pc, #168]	; (8000a94 <HAL_GPIO_Init+0x2d0>)
 80009ec:	681a      	ldr	r2, [r3, #0]
 80009ee:	69bb      	ldr	r3, [r7, #24]
 80009f0:	43db      	mvns	r3, r3
 80009f2:	4928      	ldr	r1, [pc, #160]	; (8000a94 <HAL_GPIO_Init+0x2d0>)
 80009f4:	4013      	ands	r3, r2
 80009f6:	600b      	str	r3, [r1, #0]
 80009f8:	683b      	ldr	r3, [r7, #0]
 80009fa:	685b      	ldr	r3, [r3, #4]
 80009fc:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000a00:	2b00      	cmp	r3, #0
 8000a02:	d006      	beq.n	8000a12 <HAL_GPIO_Init+0x24e>
 8000a04:	4b23      	ldr	r3, [pc, #140]	; (8000a94 <HAL_GPIO_Init+0x2d0>)
 8000a06:	685a      	ldr	r2, [r3, #4]
 8000a08:	4922      	ldr	r1, [pc, #136]	; (8000a94 <HAL_GPIO_Init+0x2d0>)
 8000a0a:	69bb      	ldr	r3, [r7, #24]
 8000a0c:	4313      	orrs	r3, r2
 8000a0e:	604b      	str	r3, [r1, #4]
 8000a10:	e006      	b.n	8000a20 <HAL_GPIO_Init+0x25c>
 8000a12:	4b20      	ldr	r3, [pc, #128]	; (8000a94 <HAL_GPIO_Init+0x2d0>)
 8000a14:	685a      	ldr	r2, [r3, #4]
 8000a16:	69bb      	ldr	r3, [r7, #24]
 8000a18:	43db      	mvns	r3, r3
 8000a1a:	491e      	ldr	r1, [pc, #120]	; (8000a94 <HAL_GPIO_Init+0x2d0>)
 8000a1c:	4013      	ands	r3, r2
 8000a1e:	604b      	str	r3, [r1, #4]
 8000a20:	683b      	ldr	r3, [r7, #0]
 8000a22:	685b      	ldr	r3, [r3, #4]
 8000a24:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8000a28:	2b00      	cmp	r3, #0
 8000a2a:	d006      	beq.n	8000a3a <HAL_GPIO_Init+0x276>
 8000a2c:	4b19      	ldr	r3, [pc, #100]	; (8000a94 <HAL_GPIO_Init+0x2d0>)
 8000a2e:	689a      	ldr	r2, [r3, #8]
 8000a30:	4918      	ldr	r1, [pc, #96]	; (8000a94 <HAL_GPIO_Init+0x2d0>)
 8000a32:	69bb      	ldr	r3, [r7, #24]
 8000a34:	4313      	orrs	r3, r2
 8000a36:	608b      	str	r3, [r1, #8]
 8000a38:	e006      	b.n	8000a48 <HAL_GPIO_Init+0x284>
 8000a3a:	4b16      	ldr	r3, [pc, #88]	; (8000a94 <HAL_GPIO_Init+0x2d0>)
 8000a3c:	689a      	ldr	r2, [r3, #8]
 8000a3e:	69bb      	ldr	r3, [r7, #24]
 8000a40:	43db      	mvns	r3, r3
 8000a42:	4914      	ldr	r1, [pc, #80]	; (8000a94 <HAL_GPIO_Init+0x2d0>)
 8000a44:	4013      	ands	r3, r2
 8000a46:	608b      	str	r3, [r1, #8]
 8000a48:	683b      	ldr	r3, [r7, #0]
 8000a4a:	685b      	ldr	r3, [r3, #4]
 8000a4c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8000a50:	2b00      	cmp	r3, #0
 8000a52:	d021      	beq.n	8000a98 <HAL_GPIO_Init+0x2d4>
 8000a54:	4b0f      	ldr	r3, [pc, #60]	; (8000a94 <HAL_GPIO_Init+0x2d0>)
 8000a56:	68da      	ldr	r2, [r3, #12]
 8000a58:	490e      	ldr	r1, [pc, #56]	; (8000a94 <HAL_GPIO_Init+0x2d0>)
 8000a5a:	69bb      	ldr	r3, [r7, #24]
 8000a5c:	4313      	orrs	r3, r2
 8000a5e:	60cb      	str	r3, [r1, #12]
 8000a60:	e021      	b.n	8000aa6 <HAL_GPIO_Init+0x2e2>
 8000a62:	bf00      	nop
 8000a64:	10320000 	.word	0x10320000
 8000a68:	10310000 	.word	0x10310000
 8000a6c:	10220000 	.word	0x10220000
 8000a70:	10210000 	.word	0x10210000
 8000a74:	10120000 	.word	0x10120000
 8000a78:	10110000 	.word	0x10110000
 8000a7c:	40021000 	.word	0x40021000
 8000a80:	40010000 	.word	0x40010000
 8000a84:	40010800 	.word	0x40010800
 8000a88:	40010c00 	.word	0x40010c00
 8000a8c:	40011000 	.word	0x40011000
 8000a90:	40011400 	.word	0x40011400
 8000a94:	40010400 	.word	0x40010400
 8000a98:	4b0b      	ldr	r3, [pc, #44]	; (8000ac8 <HAL_GPIO_Init+0x304>)
 8000a9a:	68da      	ldr	r2, [r3, #12]
 8000a9c:	69bb      	ldr	r3, [r7, #24]
 8000a9e:	43db      	mvns	r3, r3
 8000aa0:	4909      	ldr	r1, [pc, #36]	; (8000ac8 <HAL_GPIO_Init+0x304>)
 8000aa2:	4013      	ands	r3, r2
 8000aa4:	60cb      	str	r3, [r1, #12]
 8000aa6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000aa8:	3301      	adds	r3, #1
 8000aaa:	627b      	str	r3, [r7, #36]	; 0x24
 8000aac:	683b      	ldr	r3, [r7, #0]
 8000aae:	681a      	ldr	r2, [r3, #0]
 8000ab0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000ab2:	fa22 f303 	lsr.w	r3, r2, r3
 8000ab6:	2b00      	cmp	r3, #0
 8000ab8:	f47f ae8e 	bne.w	80007d8 <HAL_GPIO_Init+0x14>
 8000abc:	bf00      	nop
 8000abe:	bf00      	nop
 8000ac0:	372c      	adds	r7, #44	; 0x2c
 8000ac2:	46bd      	mov	sp, r7
 8000ac4:	bc80      	pop	{r7}
 8000ac6:	4770      	bx	lr
 8000ac8:	40010400 	.word	0x40010400

08000acc <HAL_GPIO_WritePin>:
 8000acc:	b480      	push	{r7}
 8000ace:	b083      	sub	sp, #12
 8000ad0:	af00      	add	r7, sp, #0
 8000ad2:	6078      	str	r0, [r7, #4]
 8000ad4:	460b      	mov	r3, r1
 8000ad6:	807b      	strh	r3, [r7, #2]
 8000ad8:	4613      	mov	r3, r2
 8000ada:	707b      	strb	r3, [r7, #1]
 8000adc:	787b      	ldrb	r3, [r7, #1]
 8000ade:	2b00      	cmp	r3, #0
 8000ae0:	d003      	beq.n	8000aea <HAL_GPIO_WritePin+0x1e>
 8000ae2:	887a      	ldrh	r2, [r7, #2]
 8000ae4:	687b      	ldr	r3, [r7, #4]
 8000ae6:	611a      	str	r2, [r3, #16]
 8000ae8:	e003      	b.n	8000af2 <HAL_GPIO_WritePin+0x26>
 8000aea:	887b      	ldrh	r3, [r7, #2]
 8000aec:	041a      	lsls	r2, r3, #16
 8000aee:	687b      	ldr	r3, [r7, #4]
 8000af0:	611a      	str	r2, [r3, #16]
 8000af2:	bf00      	nop
 8000af4:	370c      	adds	r7, #12
 8000af6:	46bd      	mov	sp, r7
 8000af8:	bc80      	pop	{r7}
 8000afa:	4770      	bx	lr

08000afc <HAL_GPIO_TogglePin>:
 8000afc:	b480      	push	{r7}
 8000afe:	b085      	sub	sp, #20
 8000b00:	af00      	add	r7, sp, #0
 8000b02:	6078      	str	r0, [r7, #4]
 8000b04:	460b      	mov	r3, r1
 8000b06:	807b      	strh	r3, [r7, #2]
 8000b08:	687b      	ldr	r3, [r7, #4]
 8000b0a:	68db      	ldr	r3, [r3, #12]
 8000b0c:	60fb      	str	r3, [r7, #12]
 8000b0e:	887a      	ldrh	r2, [r7, #2]
 8000b10:	68fb      	ldr	r3, [r7, #12]
 8000b12:	4013      	ands	r3, r2
 8000b14:	041a      	lsls	r2, r3, #16
 8000b16:	68fb      	ldr	r3, [r7, #12]
 8000b18:	43d9      	mvns	r1, r3
 8000b1a:	887b      	ldrh	r3, [r7, #2]
 8000b1c:	400b      	ands	r3, r1
 8000b1e:	431a      	orrs	r2, r3
 8000b20:	687b      	ldr	r3, [r7, #4]
 8000b22:	611a      	str	r2, [r3, #16]
 8000b24:	bf00      	nop
 8000b26:	3714      	adds	r7, #20
 8000b28:	46bd      	mov	sp, r7
 8000b2a:	bc80      	pop	{r7}
 8000b2c:	4770      	bx	lr

08000b2e <HAL_PCD_Init>:
 8000b2e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000b30:	b08b      	sub	sp, #44	; 0x2c
 8000b32:	af06      	add	r7, sp, #24
 8000b34:	6078      	str	r0, [r7, #4]
 8000b36:	687b      	ldr	r3, [r7, #4]
 8000b38:	2b00      	cmp	r3, #0
 8000b3a:	d101      	bne.n	8000b40 <HAL_PCD_Init+0x12>
 8000b3c:	2301      	movs	r3, #1
 8000b3e:	e0fd      	b.n	8000d3c <HAL_PCD_Init+0x20e>
 8000b40:	687b      	ldr	r3, [r7, #4]
 8000b42:	f893 32a9 	ldrb.w	r3, [r3, #681]	; 0x2a9
 8000b46:	b2db      	uxtb	r3, r3
 8000b48:	2b00      	cmp	r3, #0
 8000b4a:	d106      	bne.n	8000b5a <HAL_PCD_Init+0x2c>
 8000b4c:	687b      	ldr	r3, [r7, #4]
 8000b4e:	2200      	movs	r2, #0
 8000b50:	f883 22a8 	strb.w	r2, [r3, #680]	; 0x2a8
 8000b54:	6878      	ldr	r0, [r7, #4]
 8000b56:	f006 fb53 	bl	8007200 <HAL_PCD_MspInit>
 8000b5a:	687b      	ldr	r3, [r7, #4]
 8000b5c:	2203      	movs	r2, #3
 8000b5e:	f883 22a9 	strb.w	r2, [r3, #681]	; 0x2a9
 8000b62:	687b      	ldr	r3, [r7, #4]
 8000b64:	681b      	ldr	r3, [r3, #0]
 8000b66:	4618      	mov	r0, r3
 8000b68:	f002 f952 	bl	8002e10 <USB_DisableGlobalInt>
 8000b6c:	687b      	ldr	r3, [r7, #4]
 8000b6e:	681b      	ldr	r3, [r3, #0]
 8000b70:	603b      	str	r3, [r7, #0]
 8000b72:	687e      	ldr	r6, [r7, #4]
 8000b74:	466d      	mov	r5, sp
 8000b76:	f106 0410 	add.w	r4, r6, #16
 8000b7a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000b7c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000b7e:	6823      	ldr	r3, [r4, #0]
 8000b80:	602b      	str	r3, [r5, #0]
 8000b82:	1d33      	adds	r3, r6, #4
 8000b84:	cb0e      	ldmia	r3, {r1, r2, r3}
 8000b86:	6838      	ldr	r0, [r7, #0]
 8000b88:	f002 f91c 	bl	8002dc4 <USB_CoreInit>
 8000b8c:	4603      	mov	r3, r0
 8000b8e:	2b00      	cmp	r3, #0
 8000b90:	d005      	beq.n	8000b9e <HAL_PCD_Init+0x70>
 8000b92:	687b      	ldr	r3, [r7, #4]
 8000b94:	2202      	movs	r2, #2
 8000b96:	f883 22a9 	strb.w	r2, [r3, #681]	; 0x2a9
 8000b9a:	2301      	movs	r3, #1
 8000b9c:	e0ce      	b.n	8000d3c <HAL_PCD_Init+0x20e>
 8000b9e:	687b      	ldr	r3, [r7, #4]
 8000ba0:	681b      	ldr	r3, [r3, #0]
 8000ba2:	2100      	movs	r1, #0
 8000ba4:	4618      	mov	r0, r3
 8000ba6:	f002 f94d 	bl	8002e44 <USB_SetCurrentMode>
 8000baa:	2300      	movs	r3, #0
 8000bac:	73fb      	strb	r3, [r7, #15]
 8000bae:	e04c      	b.n	8000c4a <HAL_PCD_Init+0x11c>
 8000bb0:	7bfb      	ldrb	r3, [r7, #15]
 8000bb2:	6879      	ldr	r1, [r7, #4]
 8000bb4:	1c5a      	adds	r2, r3, #1
 8000bb6:	4613      	mov	r3, r2
 8000bb8:	009b      	lsls	r3, r3, #2
 8000bba:	4413      	add	r3, r2
 8000bbc:	00db      	lsls	r3, r3, #3
 8000bbe:	440b      	add	r3, r1
 8000bc0:	3301      	adds	r3, #1
 8000bc2:	2201      	movs	r2, #1
 8000bc4:	701a      	strb	r2, [r3, #0]
 8000bc6:	7bfb      	ldrb	r3, [r7, #15]
 8000bc8:	6879      	ldr	r1, [r7, #4]
 8000bca:	1c5a      	adds	r2, r3, #1
 8000bcc:	4613      	mov	r3, r2
 8000bce:	009b      	lsls	r3, r3, #2
 8000bd0:	4413      	add	r3, r2
 8000bd2:	00db      	lsls	r3, r3, #3
 8000bd4:	440b      	add	r3, r1
 8000bd6:	7bfa      	ldrb	r2, [r7, #15]
 8000bd8:	701a      	strb	r2, [r3, #0]
 8000bda:	7bfa      	ldrb	r2, [r7, #15]
 8000bdc:	7bfb      	ldrb	r3, [r7, #15]
 8000bde:	b298      	uxth	r0, r3
 8000be0:	6879      	ldr	r1, [r7, #4]
 8000be2:	4613      	mov	r3, r2
 8000be4:	009b      	lsls	r3, r3, #2
 8000be6:	4413      	add	r3, r2
 8000be8:	00db      	lsls	r3, r3, #3
 8000bea:	440b      	add	r3, r1
 8000bec:	3336      	adds	r3, #54	; 0x36
 8000bee:	4602      	mov	r2, r0
 8000bf0:	801a      	strh	r2, [r3, #0]
 8000bf2:	7bfb      	ldrb	r3, [r7, #15]
 8000bf4:	6879      	ldr	r1, [r7, #4]
 8000bf6:	1c5a      	adds	r2, r3, #1
 8000bf8:	4613      	mov	r3, r2
 8000bfa:	009b      	lsls	r3, r3, #2
 8000bfc:	4413      	add	r3, r2
 8000bfe:	00db      	lsls	r3, r3, #3
 8000c00:	440b      	add	r3, r1
 8000c02:	3303      	adds	r3, #3
 8000c04:	2200      	movs	r2, #0
 8000c06:	701a      	strb	r2, [r3, #0]
 8000c08:	7bfa      	ldrb	r2, [r7, #15]
 8000c0a:	6879      	ldr	r1, [r7, #4]
 8000c0c:	4613      	mov	r3, r2
 8000c0e:	009b      	lsls	r3, r3, #2
 8000c10:	4413      	add	r3, r2
 8000c12:	00db      	lsls	r3, r3, #3
 8000c14:	440b      	add	r3, r1
 8000c16:	3338      	adds	r3, #56	; 0x38
 8000c18:	2200      	movs	r2, #0
 8000c1a:	601a      	str	r2, [r3, #0]
 8000c1c:	7bfa      	ldrb	r2, [r7, #15]
 8000c1e:	6879      	ldr	r1, [r7, #4]
 8000c20:	4613      	mov	r3, r2
 8000c22:	009b      	lsls	r3, r3, #2
 8000c24:	4413      	add	r3, r2
 8000c26:	00db      	lsls	r3, r3, #3
 8000c28:	440b      	add	r3, r1
 8000c2a:	333c      	adds	r3, #60	; 0x3c
 8000c2c:	2200      	movs	r2, #0
 8000c2e:	601a      	str	r2, [r3, #0]
 8000c30:	7bfa      	ldrb	r2, [r7, #15]
 8000c32:	6879      	ldr	r1, [r7, #4]
 8000c34:	4613      	mov	r3, r2
 8000c36:	009b      	lsls	r3, r3, #2
 8000c38:	4413      	add	r3, r2
 8000c3a:	00db      	lsls	r3, r3, #3
 8000c3c:	440b      	add	r3, r1
 8000c3e:	3340      	adds	r3, #64	; 0x40
 8000c40:	2200      	movs	r2, #0
 8000c42:	601a      	str	r2, [r3, #0]
 8000c44:	7bfb      	ldrb	r3, [r7, #15]
 8000c46:	3301      	adds	r3, #1
 8000c48:	73fb      	strb	r3, [r7, #15]
 8000c4a:	7bfa      	ldrb	r2, [r7, #15]
 8000c4c:	687b      	ldr	r3, [r7, #4]
 8000c4e:	685b      	ldr	r3, [r3, #4]
 8000c50:	429a      	cmp	r2, r3
 8000c52:	d3ad      	bcc.n	8000bb0 <HAL_PCD_Init+0x82>
 8000c54:	2300      	movs	r3, #0
 8000c56:	73fb      	strb	r3, [r7, #15]
 8000c58:	e044      	b.n	8000ce4 <HAL_PCD_Init+0x1b6>
 8000c5a:	7bfa      	ldrb	r2, [r7, #15]
 8000c5c:	6879      	ldr	r1, [r7, #4]
 8000c5e:	4613      	mov	r3, r2
 8000c60:	009b      	lsls	r3, r3, #2
 8000c62:	4413      	add	r3, r2
 8000c64:	00db      	lsls	r3, r3, #3
 8000c66:	440b      	add	r3, r1
 8000c68:	f203 1369 	addw	r3, r3, #361	; 0x169
 8000c6c:	2200      	movs	r2, #0
 8000c6e:	701a      	strb	r2, [r3, #0]
 8000c70:	7bfa      	ldrb	r2, [r7, #15]
 8000c72:	6879      	ldr	r1, [r7, #4]
 8000c74:	4613      	mov	r3, r2
 8000c76:	009b      	lsls	r3, r3, #2
 8000c78:	4413      	add	r3, r2
 8000c7a:	00db      	lsls	r3, r3, #3
 8000c7c:	440b      	add	r3, r1
 8000c7e:	f503 73b4 	add.w	r3, r3, #360	; 0x168
 8000c82:	7bfa      	ldrb	r2, [r7, #15]
 8000c84:	701a      	strb	r2, [r3, #0]
 8000c86:	7bfa      	ldrb	r2, [r7, #15]
 8000c88:	6879      	ldr	r1, [r7, #4]
 8000c8a:	4613      	mov	r3, r2
 8000c8c:	009b      	lsls	r3, r3, #2
 8000c8e:	4413      	add	r3, r2
 8000c90:	00db      	lsls	r3, r3, #3
 8000c92:	440b      	add	r3, r1
 8000c94:	f203 136b 	addw	r3, r3, #363	; 0x16b
 8000c98:	2200      	movs	r2, #0
 8000c9a:	701a      	strb	r2, [r3, #0]
 8000c9c:	7bfa      	ldrb	r2, [r7, #15]
 8000c9e:	6879      	ldr	r1, [r7, #4]
 8000ca0:	4613      	mov	r3, r2
 8000ca2:	009b      	lsls	r3, r3, #2
 8000ca4:	4413      	add	r3, r2
 8000ca6:	00db      	lsls	r3, r3, #3
 8000ca8:	440b      	add	r3, r1
 8000caa:	f503 73bc 	add.w	r3, r3, #376	; 0x178
 8000cae:	2200      	movs	r2, #0
 8000cb0:	601a      	str	r2, [r3, #0]
 8000cb2:	7bfa      	ldrb	r2, [r7, #15]
 8000cb4:	6879      	ldr	r1, [r7, #4]
 8000cb6:	4613      	mov	r3, r2
 8000cb8:	009b      	lsls	r3, r3, #2
 8000cba:	4413      	add	r3, r2
 8000cbc:	00db      	lsls	r3, r3, #3
 8000cbe:	440b      	add	r3, r1
 8000cc0:	f503 73be 	add.w	r3, r3, #380	; 0x17c
 8000cc4:	2200      	movs	r2, #0
 8000cc6:	601a      	str	r2, [r3, #0]
 8000cc8:	7bfa      	ldrb	r2, [r7, #15]
 8000cca:	6879      	ldr	r1, [r7, #4]
 8000ccc:	4613      	mov	r3, r2
 8000cce:	009b      	lsls	r3, r3, #2
 8000cd0:	4413      	add	r3, r2
 8000cd2:	00db      	lsls	r3, r3, #3
 8000cd4:	440b      	add	r3, r1
 8000cd6:	f503 73c0 	add.w	r3, r3, #384	; 0x180
 8000cda:	2200      	movs	r2, #0
 8000cdc:	601a      	str	r2, [r3, #0]
 8000cde:	7bfb      	ldrb	r3, [r7, #15]
 8000ce0:	3301      	adds	r3, #1
 8000ce2:	73fb      	strb	r3, [r7, #15]
 8000ce4:	7bfa      	ldrb	r2, [r7, #15]
 8000ce6:	687b      	ldr	r3, [r7, #4]
 8000ce8:	685b      	ldr	r3, [r3, #4]
 8000cea:	429a      	cmp	r2, r3
 8000cec:	d3b5      	bcc.n	8000c5a <HAL_PCD_Init+0x12c>
 8000cee:	687b      	ldr	r3, [r7, #4]
 8000cf0:	681b      	ldr	r3, [r3, #0]
 8000cf2:	603b      	str	r3, [r7, #0]
 8000cf4:	687e      	ldr	r6, [r7, #4]
 8000cf6:	466d      	mov	r5, sp
 8000cf8:	f106 0410 	add.w	r4, r6, #16
 8000cfc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000cfe:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000d00:	6823      	ldr	r3, [r4, #0]
 8000d02:	602b      	str	r3, [r5, #0]
 8000d04:	1d33      	adds	r3, r6, #4
 8000d06:	cb0e      	ldmia	r3, {r1, r2, r3}
 8000d08:	6838      	ldr	r0, [r7, #0]
 8000d0a:	f002 f8a7 	bl	8002e5c <USB_DevInit>
 8000d0e:	4603      	mov	r3, r0
 8000d10:	2b00      	cmp	r3, #0
 8000d12:	d005      	beq.n	8000d20 <HAL_PCD_Init+0x1f2>
 8000d14:	687b      	ldr	r3, [r7, #4]
 8000d16:	2202      	movs	r2, #2
 8000d18:	f883 22a9 	strb.w	r2, [r3, #681]	; 0x2a9
 8000d1c:	2301      	movs	r3, #1
 8000d1e:	e00d      	b.n	8000d3c <HAL_PCD_Init+0x20e>
 8000d20:	687b      	ldr	r3, [r7, #4]
 8000d22:	2200      	movs	r2, #0
 8000d24:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8000d28:	687b      	ldr	r3, [r7, #4]
 8000d2a:	2201      	movs	r2, #1
 8000d2c:	f883 22a9 	strb.w	r2, [r3, #681]	; 0x2a9
 8000d30:	687b      	ldr	r3, [r7, #4]
 8000d32:	681b      	ldr	r3, [r3, #0]
 8000d34:	4618      	mov	r0, r3
 8000d36:	f004 fd59 	bl	80057ec <USB_DevDisconnect>
 8000d3a:	2300      	movs	r3, #0
 8000d3c:	4618      	mov	r0, r3
 8000d3e:	3714      	adds	r7, #20
 8000d40:	46bd      	mov	sp, r7
 8000d42:	bdf0      	pop	{r4, r5, r6, r7, pc}

08000d44 <HAL_PCD_Start>:
 8000d44:	b580      	push	{r7, lr}
 8000d46:	b082      	sub	sp, #8
 8000d48:	af00      	add	r7, sp, #0
 8000d4a:	6078      	str	r0, [r7, #4]
 8000d4c:	687b      	ldr	r3, [r7, #4]
 8000d4e:	f893 32a8 	ldrb.w	r3, [r3, #680]	; 0x2a8
 8000d52:	2b01      	cmp	r3, #1
 8000d54:	d101      	bne.n	8000d5a <HAL_PCD_Start+0x16>
 8000d56:	2302      	movs	r3, #2
 8000d58:	e016      	b.n	8000d88 <HAL_PCD_Start+0x44>
 8000d5a:	687b      	ldr	r3, [r7, #4]
 8000d5c:	2201      	movs	r2, #1
 8000d5e:	f883 22a8 	strb.w	r2, [r3, #680]	; 0x2a8
 8000d62:	687b      	ldr	r3, [r7, #4]
 8000d64:	681b      	ldr	r3, [r3, #0]
 8000d66:	4618      	mov	r0, r3
 8000d68:	f002 f83c 	bl	8002de4 <USB_EnableGlobalInt>
 8000d6c:	2101      	movs	r1, #1
 8000d6e:	6878      	ldr	r0, [r7, #4]
 8000d70:	f006 fc9d 	bl	80076ae <HAL_PCDEx_SetConnectionState>
 8000d74:	687b      	ldr	r3, [r7, #4]
 8000d76:	681b      	ldr	r3, [r3, #0]
 8000d78:	4618      	mov	r0, r3
 8000d7a:	f004 fd2d 	bl	80057d8 <USB_DevConnect>
 8000d7e:	687b      	ldr	r3, [r7, #4]
 8000d80:	2200      	movs	r2, #0
 8000d82:	f883 22a8 	strb.w	r2, [r3, #680]	; 0x2a8
 8000d86:	2300      	movs	r3, #0
 8000d88:	4618      	mov	r0, r3
 8000d8a:	3708      	adds	r7, #8
 8000d8c:	46bd      	mov	sp, r7
 8000d8e:	bd80      	pop	{r7, pc}

08000d90 <HAL_PCD_IRQHandler>:
 8000d90:	b580      	push	{r7, lr}
 8000d92:	b088      	sub	sp, #32
 8000d94:	af00      	add	r7, sp, #0
 8000d96:	6078      	str	r0, [r7, #4]
 8000d98:	687b      	ldr	r3, [r7, #4]
 8000d9a:	681b      	ldr	r3, [r3, #0]
 8000d9c:	4618      	mov	r0, r3
 8000d9e:	f004 fd2f 	bl	8005800 <USB_ReadInterrupts>
 8000da2:	4603      	mov	r3, r0
 8000da4:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8000da8:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8000dac:	d102      	bne.n	8000db4 <HAL_PCD_IRQHandler+0x24>
 8000dae:	6878      	ldr	r0, [r7, #4]
 8000db0:	f000 fb48 	bl	8001444 <PCD_EP_ISR_Handler>
 8000db4:	687b      	ldr	r3, [r7, #4]
 8000db6:	681b      	ldr	r3, [r3, #0]
 8000db8:	4618      	mov	r0, r3
 8000dba:	f004 fd21 	bl	8005800 <USB_ReadInterrupts>
 8000dbe:	4603      	mov	r3, r0
 8000dc0:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8000dc4:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8000dc8:	d112      	bne.n	8000df0 <HAL_PCD_IRQHandler+0x60>
 8000dca:	687b      	ldr	r3, [r7, #4]
 8000dcc:	681b      	ldr	r3, [r3, #0]
 8000dce:	f8b3 3044 	ldrh.w	r3, [r3, #68]	; 0x44
 8000dd2:	b29a      	uxth	r2, r3
 8000dd4:	687b      	ldr	r3, [r7, #4]
 8000dd6:	681b      	ldr	r3, [r3, #0]
 8000dd8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8000ddc:	b292      	uxth	r2, r2
 8000dde:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 8000de2:	6878      	ldr	r0, [r7, #4]
 8000de4:	f006 fa87 	bl	80072f6 <HAL_PCD_ResetCallback>
 8000de8:	2100      	movs	r1, #0
 8000dea:	6878      	ldr	r0, [r7, #4]
 8000dec:	f000 f923 	bl	8001036 <HAL_PCD_SetAddress>
 8000df0:	687b      	ldr	r3, [r7, #4]
 8000df2:	681b      	ldr	r3, [r3, #0]
 8000df4:	4618      	mov	r0, r3
 8000df6:	f004 fd03 	bl	8005800 <USB_ReadInterrupts>
 8000dfa:	4603      	mov	r3, r0
 8000dfc:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8000e00:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8000e04:	d10b      	bne.n	8000e1e <HAL_PCD_IRQHandler+0x8e>
 8000e06:	687b      	ldr	r3, [r7, #4]
 8000e08:	681b      	ldr	r3, [r3, #0]
 8000e0a:	f8b3 3044 	ldrh.w	r3, [r3, #68]	; 0x44
 8000e0e:	b29a      	uxth	r2, r3
 8000e10:	687b      	ldr	r3, [r7, #4]
 8000e12:	681b      	ldr	r3, [r3, #0]
 8000e14:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8000e18:	b292      	uxth	r2, r2
 8000e1a:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 8000e1e:	687b      	ldr	r3, [r7, #4]
 8000e20:	681b      	ldr	r3, [r3, #0]
 8000e22:	4618      	mov	r0, r3
 8000e24:	f004 fcec 	bl	8005800 <USB_ReadInterrupts>
 8000e28:	4603      	mov	r3, r0
 8000e2a:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8000e2e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8000e32:	d10b      	bne.n	8000e4c <HAL_PCD_IRQHandler+0xbc>
 8000e34:	687b      	ldr	r3, [r7, #4]
 8000e36:	681b      	ldr	r3, [r3, #0]
 8000e38:	f8b3 3044 	ldrh.w	r3, [r3, #68]	; 0x44
 8000e3c:	b29a      	uxth	r2, r3
 8000e3e:	687b      	ldr	r3, [r7, #4]
 8000e40:	681b      	ldr	r3, [r3, #0]
 8000e42:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8000e46:	b292      	uxth	r2, r2
 8000e48:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 8000e4c:	687b      	ldr	r3, [r7, #4]
 8000e4e:	681b      	ldr	r3, [r3, #0]
 8000e50:	4618      	mov	r0, r3
 8000e52:	f004 fcd5 	bl	8005800 <USB_ReadInterrupts>
 8000e56:	4603      	mov	r3, r0
 8000e58:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8000e5c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8000e60:	d126      	bne.n	8000eb0 <HAL_PCD_IRQHandler+0x120>
 8000e62:	687b      	ldr	r3, [r7, #4]
 8000e64:	681b      	ldr	r3, [r3, #0]
 8000e66:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 8000e6a:	b29a      	uxth	r2, r3
 8000e6c:	687b      	ldr	r3, [r7, #4]
 8000e6e:	681b      	ldr	r3, [r3, #0]
 8000e70:	f022 0204 	bic.w	r2, r2, #4
 8000e74:	b292      	uxth	r2, r2
 8000e76:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 8000e7a:	687b      	ldr	r3, [r7, #4]
 8000e7c:	681b      	ldr	r3, [r3, #0]
 8000e7e:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 8000e82:	b29a      	uxth	r2, r3
 8000e84:	687b      	ldr	r3, [r7, #4]
 8000e86:	681b      	ldr	r3, [r3, #0]
 8000e88:	f022 0208 	bic.w	r2, r2, #8
 8000e8c:	b292      	uxth	r2, r2
 8000e8e:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 8000e92:	6878      	ldr	r0, [r7, #4]
 8000e94:	f006 fa68 	bl	8007368 <HAL_PCD_ResumeCallback>
 8000e98:	687b      	ldr	r3, [r7, #4]
 8000e9a:	681b      	ldr	r3, [r3, #0]
 8000e9c:	f8b3 3044 	ldrh.w	r3, [r3, #68]	; 0x44
 8000ea0:	b29a      	uxth	r2, r3
 8000ea2:	687b      	ldr	r3, [r7, #4]
 8000ea4:	681b      	ldr	r3, [r3, #0]
 8000ea6:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8000eaa:	b292      	uxth	r2, r2
 8000eac:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 8000eb0:	687b      	ldr	r3, [r7, #4]
 8000eb2:	681b      	ldr	r3, [r3, #0]
 8000eb4:	4618      	mov	r0, r3
 8000eb6:	f004 fca3 	bl	8005800 <USB_ReadInterrupts>
 8000eba:	4603      	mov	r3, r0
 8000ebc:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8000ec0:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8000ec4:	f040 8082 	bne.w	8000fcc <HAL_PCD_IRQHandler+0x23c>
 8000ec8:	2300      	movs	r3, #0
 8000eca:	77fb      	strb	r3, [r7, #31]
 8000ecc:	e010      	b.n	8000ef0 <HAL_PCD_IRQHandler+0x160>
 8000ece:	687b      	ldr	r3, [r7, #4]
 8000ed0:	681b      	ldr	r3, [r3, #0]
 8000ed2:	461a      	mov	r2, r3
 8000ed4:	7ffb      	ldrb	r3, [r7, #31]
 8000ed6:	009b      	lsls	r3, r3, #2
 8000ed8:	441a      	add	r2, r3
 8000eda:	7ffb      	ldrb	r3, [r7, #31]
 8000edc:	8812      	ldrh	r2, [r2, #0]
 8000ede:	b292      	uxth	r2, r2
 8000ee0:	005b      	lsls	r3, r3, #1
 8000ee2:	3320      	adds	r3, #32
 8000ee4:	443b      	add	r3, r7
 8000ee6:	f823 2c14 	strh.w	r2, [r3, #-20]
 8000eea:	7ffb      	ldrb	r3, [r7, #31]
 8000eec:	3301      	adds	r3, #1
 8000eee:	77fb      	strb	r3, [r7, #31]
 8000ef0:	7ffb      	ldrb	r3, [r7, #31]
 8000ef2:	2b07      	cmp	r3, #7
 8000ef4:	d9eb      	bls.n	8000ece <HAL_PCD_IRQHandler+0x13e>
 8000ef6:	687b      	ldr	r3, [r7, #4]
 8000ef8:	681b      	ldr	r3, [r3, #0]
 8000efa:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 8000efe:	b29a      	uxth	r2, r3
 8000f00:	687b      	ldr	r3, [r7, #4]
 8000f02:	681b      	ldr	r3, [r3, #0]
 8000f04:	f042 0201 	orr.w	r2, r2, #1
 8000f08:	b292      	uxth	r2, r2
 8000f0a:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 8000f0e:	687b      	ldr	r3, [r7, #4]
 8000f10:	681b      	ldr	r3, [r3, #0]
 8000f12:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 8000f16:	b29a      	uxth	r2, r3
 8000f18:	687b      	ldr	r3, [r7, #4]
 8000f1a:	681b      	ldr	r3, [r3, #0]
 8000f1c:	f022 0201 	bic.w	r2, r2, #1
 8000f20:	b292      	uxth	r2, r2
 8000f22:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 8000f26:	bf00      	nop
 8000f28:	687b      	ldr	r3, [r7, #4]
 8000f2a:	681b      	ldr	r3, [r3, #0]
 8000f2c:	f8b3 3044 	ldrh.w	r3, [r3, #68]	; 0x44
 8000f30:	b29b      	uxth	r3, r3
 8000f32:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8000f36:	2b00      	cmp	r3, #0
 8000f38:	d0f6      	beq.n	8000f28 <HAL_PCD_IRQHandler+0x198>
 8000f3a:	687b      	ldr	r3, [r7, #4]
 8000f3c:	681b      	ldr	r3, [r3, #0]
 8000f3e:	f8b3 3044 	ldrh.w	r3, [r3, #68]	; 0x44
 8000f42:	b29a      	uxth	r2, r3
 8000f44:	687b      	ldr	r3, [r7, #4]
 8000f46:	681b      	ldr	r3, [r3, #0]
 8000f48:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8000f4c:	b292      	uxth	r2, r2
 8000f4e:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 8000f52:	2300      	movs	r3, #0
 8000f54:	77fb      	strb	r3, [r7, #31]
 8000f56:	e00f      	b.n	8000f78 <HAL_PCD_IRQHandler+0x1e8>
 8000f58:	7ffb      	ldrb	r3, [r7, #31]
 8000f5a:	687a      	ldr	r2, [r7, #4]
 8000f5c:	6812      	ldr	r2, [r2, #0]
 8000f5e:	4611      	mov	r1, r2
 8000f60:	7ffa      	ldrb	r2, [r7, #31]
 8000f62:	0092      	lsls	r2, r2, #2
 8000f64:	440a      	add	r2, r1
 8000f66:	005b      	lsls	r3, r3, #1
 8000f68:	3320      	adds	r3, #32
 8000f6a:	443b      	add	r3, r7
 8000f6c:	f833 3c14 	ldrh.w	r3, [r3, #-20]
 8000f70:	8013      	strh	r3, [r2, #0]
 8000f72:	7ffb      	ldrb	r3, [r7, #31]
 8000f74:	3301      	adds	r3, #1
 8000f76:	77fb      	strb	r3, [r7, #31]
 8000f78:	7ffb      	ldrb	r3, [r7, #31]
 8000f7a:	2b07      	cmp	r3, #7
 8000f7c:	d9ec      	bls.n	8000f58 <HAL_PCD_IRQHandler+0x1c8>
 8000f7e:	687b      	ldr	r3, [r7, #4]
 8000f80:	681b      	ldr	r3, [r3, #0]
 8000f82:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 8000f86:	b29a      	uxth	r2, r3
 8000f88:	687b      	ldr	r3, [r7, #4]
 8000f8a:	681b      	ldr	r3, [r3, #0]
 8000f8c:	f042 0208 	orr.w	r2, r2, #8
 8000f90:	b292      	uxth	r2, r2
 8000f92:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 8000f96:	687b      	ldr	r3, [r7, #4]
 8000f98:	681b      	ldr	r3, [r3, #0]
 8000f9a:	f8b3 3044 	ldrh.w	r3, [r3, #68]	; 0x44
 8000f9e:	b29a      	uxth	r2, r3
 8000fa0:	687b      	ldr	r3, [r7, #4]
 8000fa2:	681b      	ldr	r3, [r3, #0]
 8000fa4:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8000fa8:	b292      	uxth	r2, r2
 8000faa:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 8000fae:	687b      	ldr	r3, [r7, #4]
 8000fb0:	681b      	ldr	r3, [r3, #0]
 8000fb2:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 8000fb6:	b29a      	uxth	r2, r3
 8000fb8:	687b      	ldr	r3, [r7, #4]
 8000fba:	681b      	ldr	r3, [r3, #0]
 8000fbc:	f042 0204 	orr.w	r2, r2, #4
 8000fc0:	b292      	uxth	r2, r2
 8000fc2:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 8000fc6:	6878      	ldr	r0, [r7, #4]
 8000fc8:	f006 f9b4 	bl	8007334 <HAL_PCD_SuspendCallback>
 8000fcc:	687b      	ldr	r3, [r7, #4]
 8000fce:	681b      	ldr	r3, [r3, #0]
 8000fd0:	4618      	mov	r0, r3
 8000fd2:	f004 fc15 	bl	8005800 <USB_ReadInterrupts>
 8000fd6:	4603      	mov	r3, r0
 8000fd8:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8000fdc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000fe0:	d10e      	bne.n	8001000 <HAL_PCD_IRQHandler+0x270>
 8000fe2:	687b      	ldr	r3, [r7, #4]
 8000fe4:	681b      	ldr	r3, [r3, #0]
 8000fe6:	f8b3 3044 	ldrh.w	r3, [r3, #68]	; 0x44
 8000fea:	b29a      	uxth	r2, r3
 8000fec:	687b      	ldr	r3, [r7, #4]
 8000fee:	681b      	ldr	r3, [r3, #0]
 8000ff0:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8000ff4:	b292      	uxth	r2, r2
 8000ff6:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 8000ffa:	6878      	ldr	r0, [r7, #4]
 8000ffc:	f006 f96d 	bl	80072da <HAL_PCD_SOFCallback>
 8001000:	687b      	ldr	r3, [r7, #4]
 8001002:	681b      	ldr	r3, [r3, #0]
 8001004:	4618      	mov	r0, r3
 8001006:	f004 fbfb 	bl	8005800 <USB_ReadInterrupts>
 800100a:	4603      	mov	r3, r0
 800100c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001010:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8001014:	d10b      	bne.n	800102e <HAL_PCD_IRQHandler+0x29e>
 8001016:	687b      	ldr	r3, [r7, #4]
 8001018:	681b      	ldr	r3, [r3, #0]
 800101a:	f8b3 3044 	ldrh.w	r3, [r3, #68]	; 0x44
 800101e:	b29a      	uxth	r2, r3
 8001020:	687b      	ldr	r3, [r7, #4]
 8001022:	681b      	ldr	r3, [r3, #0]
 8001024:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8001028:	b292      	uxth	r2, r2
 800102a:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 800102e:	bf00      	nop
 8001030:	3720      	adds	r7, #32
 8001032:	46bd      	mov	sp, r7
 8001034:	bd80      	pop	{r7, pc}

08001036 <HAL_PCD_SetAddress>:
 8001036:	b580      	push	{r7, lr}
 8001038:	b082      	sub	sp, #8
 800103a:	af00      	add	r7, sp, #0
 800103c:	6078      	str	r0, [r7, #4]
 800103e:	460b      	mov	r3, r1
 8001040:	70fb      	strb	r3, [r7, #3]
 8001042:	687b      	ldr	r3, [r7, #4]
 8001044:	f893 32a8 	ldrb.w	r3, [r3, #680]	; 0x2a8
 8001048:	2b01      	cmp	r3, #1
 800104a:	d101      	bne.n	8001050 <HAL_PCD_SetAddress+0x1a>
 800104c:	2302      	movs	r3, #2
 800104e:	e013      	b.n	8001078 <HAL_PCD_SetAddress+0x42>
 8001050:	687b      	ldr	r3, [r7, #4]
 8001052:	2201      	movs	r2, #1
 8001054:	f883 22a8 	strb.w	r2, [r3, #680]	; 0x2a8
 8001058:	687b      	ldr	r3, [r7, #4]
 800105a:	78fa      	ldrb	r2, [r7, #3]
 800105c:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8001060:	687b      	ldr	r3, [r7, #4]
 8001062:	681b      	ldr	r3, [r3, #0]
 8001064:	78fa      	ldrb	r2, [r7, #3]
 8001066:	4611      	mov	r1, r2
 8001068:	4618      	mov	r0, r3
 800106a:	f004 fba2 	bl	80057b2 <USB_SetDevAddress>
 800106e:	687b      	ldr	r3, [r7, #4]
 8001070:	2200      	movs	r2, #0
 8001072:	f883 22a8 	strb.w	r2, [r3, #680]	; 0x2a8
 8001076:	2300      	movs	r3, #0
 8001078:	4618      	mov	r0, r3
 800107a:	3708      	adds	r7, #8
 800107c:	46bd      	mov	sp, r7
 800107e:	bd80      	pop	{r7, pc}

08001080 <HAL_PCD_EP_Open>:
 8001080:	b580      	push	{r7, lr}
 8001082:	b084      	sub	sp, #16
 8001084:	af00      	add	r7, sp, #0
 8001086:	6078      	str	r0, [r7, #4]
 8001088:	4608      	mov	r0, r1
 800108a:	4611      	mov	r1, r2
 800108c:	461a      	mov	r2, r3
 800108e:	4603      	mov	r3, r0
 8001090:	70fb      	strb	r3, [r7, #3]
 8001092:	460b      	mov	r3, r1
 8001094:	803b      	strh	r3, [r7, #0]
 8001096:	4613      	mov	r3, r2
 8001098:	70bb      	strb	r3, [r7, #2]
 800109a:	2300      	movs	r3, #0
 800109c:	72fb      	strb	r3, [r7, #11]
 800109e:	f997 3003 	ldrsb.w	r3, [r7, #3]
 80010a2:	2b00      	cmp	r3, #0
 80010a4:	da0e      	bge.n	80010c4 <HAL_PCD_EP_Open+0x44>
 80010a6:	78fb      	ldrb	r3, [r7, #3]
 80010a8:	f003 0307 	and.w	r3, r3, #7
 80010ac:	1c5a      	adds	r2, r3, #1
 80010ae:	4613      	mov	r3, r2
 80010b0:	009b      	lsls	r3, r3, #2
 80010b2:	4413      	add	r3, r2
 80010b4:	00db      	lsls	r3, r3, #3
 80010b6:	687a      	ldr	r2, [r7, #4]
 80010b8:	4413      	add	r3, r2
 80010ba:	60fb      	str	r3, [r7, #12]
 80010bc:	68fb      	ldr	r3, [r7, #12]
 80010be:	2201      	movs	r2, #1
 80010c0:	705a      	strb	r2, [r3, #1]
 80010c2:	e00e      	b.n	80010e2 <HAL_PCD_EP_Open+0x62>
 80010c4:	78fb      	ldrb	r3, [r7, #3]
 80010c6:	f003 0207 	and.w	r2, r3, #7
 80010ca:	4613      	mov	r3, r2
 80010cc:	009b      	lsls	r3, r3, #2
 80010ce:	4413      	add	r3, r2
 80010d0:	00db      	lsls	r3, r3, #3
 80010d2:	f503 73b4 	add.w	r3, r3, #360	; 0x168
 80010d6:	687a      	ldr	r2, [r7, #4]
 80010d8:	4413      	add	r3, r2
 80010da:	60fb      	str	r3, [r7, #12]
 80010dc:	68fb      	ldr	r3, [r7, #12]
 80010de:	2200      	movs	r2, #0
 80010e0:	705a      	strb	r2, [r3, #1]
 80010e2:	78fb      	ldrb	r3, [r7, #3]
 80010e4:	f003 0307 	and.w	r3, r3, #7
 80010e8:	b2da      	uxtb	r2, r3
 80010ea:	68fb      	ldr	r3, [r7, #12]
 80010ec:	701a      	strb	r2, [r3, #0]
 80010ee:	883a      	ldrh	r2, [r7, #0]
 80010f0:	68fb      	ldr	r3, [r7, #12]
 80010f2:	611a      	str	r2, [r3, #16]
 80010f4:	68fb      	ldr	r3, [r7, #12]
 80010f6:	78ba      	ldrb	r2, [r7, #2]
 80010f8:	70da      	strb	r2, [r3, #3]
 80010fa:	68fb      	ldr	r3, [r7, #12]
 80010fc:	785b      	ldrb	r3, [r3, #1]
 80010fe:	2b00      	cmp	r3, #0
 8001100:	d004      	beq.n	800110c <HAL_PCD_EP_Open+0x8c>
 8001102:	68fb      	ldr	r3, [r7, #12]
 8001104:	781b      	ldrb	r3, [r3, #0]
 8001106:	b29a      	uxth	r2, r3
 8001108:	68fb      	ldr	r3, [r7, #12]
 800110a:	81da      	strh	r2, [r3, #14]
 800110c:	78bb      	ldrb	r3, [r7, #2]
 800110e:	2b02      	cmp	r3, #2
 8001110:	d102      	bne.n	8001118 <HAL_PCD_EP_Open+0x98>
 8001112:	68fb      	ldr	r3, [r7, #12]
 8001114:	2200      	movs	r2, #0
 8001116:	711a      	strb	r2, [r3, #4]
 8001118:	687b      	ldr	r3, [r7, #4]
 800111a:	f893 32a8 	ldrb.w	r3, [r3, #680]	; 0x2a8
 800111e:	2b01      	cmp	r3, #1
 8001120:	d101      	bne.n	8001126 <HAL_PCD_EP_Open+0xa6>
 8001122:	2302      	movs	r3, #2
 8001124:	e00e      	b.n	8001144 <HAL_PCD_EP_Open+0xc4>
 8001126:	687b      	ldr	r3, [r7, #4]
 8001128:	2201      	movs	r2, #1
 800112a:	f883 22a8 	strb.w	r2, [r3, #680]	; 0x2a8
 800112e:	687b      	ldr	r3, [r7, #4]
 8001130:	681b      	ldr	r3, [r3, #0]
 8001132:	68f9      	ldr	r1, [r7, #12]
 8001134:	4618      	mov	r0, r3
 8001136:	f001 feb1 	bl	8002e9c <USB_ActivateEndpoint>
 800113a:	687b      	ldr	r3, [r7, #4]
 800113c:	2200      	movs	r2, #0
 800113e:	f883 22a8 	strb.w	r2, [r3, #680]	; 0x2a8
 8001142:	7afb      	ldrb	r3, [r7, #11]
 8001144:	4618      	mov	r0, r3
 8001146:	3710      	adds	r7, #16
 8001148:	46bd      	mov	sp, r7
 800114a:	bd80      	pop	{r7, pc}

0800114c <HAL_PCD_EP_Close>:
 800114c:	b580      	push	{r7, lr}
 800114e:	b084      	sub	sp, #16
 8001150:	af00      	add	r7, sp, #0
 8001152:	6078      	str	r0, [r7, #4]
 8001154:	460b      	mov	r3, r1
 8001156:	70fb      	strb	r3, [r7, #3]
 8001158:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800115c:	2b00      	cmp	r3, #0
 800115e:	da0e      	bge.n	800117e <HAL_PCD_EP_Close+0x32>
 8001160:	78fb      	ldrb	r3, [r7, #3]
 8001162:	f003 0307 	and.w	r3, r3, #7
 8001166:	1c5a      	adds	r2, r3, #1
 8001168:	4613      	mov	r3, r2
 800116a:	009b      	lsls	r3, r3, #2
 800116c:	4413      	add	r3, r2
 800116e:	00db      	lsls	r3, r3, #3
 8001170:	687a      	ldr	r2, [r7, #4]
 8001172:	4413      	add	r3, r2
 8001174:	60fb      	str	r3, [r7, #12]
 8001176:	68fb      	ldr	r3, [r7, #12]
 8001178:	2201      	movs	r2, #1
 800117a:	705a      	strb	r2, [r3, #1]
 800117c:	e00e      	b.n	800119c <HAL_PCD_EP_Close+0x50>
 800117e:	78fb      	ldrb	r3, [r7, #3]
 8001180:	f003 0207 	and.w	r2, r3, #7
 8001184:	4613      	mov	r3, r2
 8001186:	009b      	lsls	r3, r3, #2
 8001188:	4413      	add	r3, r2
 800118a:	00db      	lsls	r3, r3, #3
 800118c:	f503 73b4 	add.w	r3, r3, #360	; 0x168
 8001190:	687a      	ldr	r2, [r7, #4]
 8001192:	4413      	add	r3, r2
 8001194:	60fb      	str	r3, [r7, #12]
 8001196:	68fb      	ldr	r3, [r7, #12]
 8001198:	2200      	movs	r2, #0
 800119a:	705a      	strb	r2, [r3, #1]
 800119c:	78fb      	ldrb	r3, [r7, #3]
 800119e:	f003 0307 	and.w	r3, r3, #7
 80011a2:	b2da      	uxtb	r2, r3
 80011a4:	68fb      	ldr	r3, [r7, #12]
 80011a6:	701a      	strb	r2, [r3, #0]
 80011a8:	687b      	ldr	r3, [r7, #4]
 80011aa:	f893 32a8 	ldrb.w	r3, [r3, #680]	; 0x2a8
 80011ae:	2b01      	cmp	r3, #1
 80011b0:	d101      	bne.n	80011b6 <HAL_PCD_EP_Close+0x6a>
 80011b2:	2302      	movs	r3, #2
 80011b4:	e00e      	b.n	80011d4 <HAL_PCD_EP_Close+0x88>
 80011b6:	687b      	ldr	r3, [r7, #4]
 80011b8:	2201      	movs	r2, #1
 80011ba:	f883 22a8 	strb.w	r2, [r3, #680]	; 0x2a8
 80011be:	687b      	ldr	r3, [r7, #4]
 80011c0:	681b      	ldr	r3, [r3, #0]
 80011c2:	68f9      	ldr	r1, [r7, #12]
 80011c4:	4618      	mov	r0, r3
 80011c6:	f002 f9d3 	bl	8003570 <USB_DeactivateEndpoint>
 80011ca:	687b      	ldr	r3, [r7, #4]
 80011cc:	2200      	movs	r2, #0
 80011ce:	f883 22a8 	strb.w	r2, [r3, #680]	; 0x2a8
 80011d2:	2300      	movs	r3, #0
 80011d4:	4618      	mov	r0, r3
 80011d6:	3710      	adds	r7, #16
 80011d8:	46bd      	mov	sp, r7
 80011da:	bd80      	pop	{r7, pc}

080011dc <HAL_PCD_EP_Receive>:
 80011dc:	b580      	push	{r7, lr}
 80011de:	b086      	sub	sp, #24
 80011e0:	af00      	add	r7, sp, #0
 80011e2:	60f8      	str	r0, [r7, #12]
 80011e4:	607a      	str	r2, [r7, #4]
 80011e6:	603b      	str	r3, [r7, #0]
 80011e8:	460b      	mov	r3, r1
 80011ea:	72fb      	strb	r3, [r7, #11]
 80011ec:	7afb      	ldrb	r3, [r7, #11]
 80011ee:	f003 0207 	and.w	r2, r3, #7
 80011f2:	4613      	mov	r3, r2
 80011f4:	009b      	lsls	r3, r3, #2
 80011f6:	4413      	add	r3, r2
 80011f8:	00db      	lsls	r3, r3, #3
 80011fa:	f503 73b4 	add.w	r3, r3, #360	; 0x168
 80011fe:	68fa      	ldr	r2, [r7, #12]
 8001200:	4413      	add	r3, r2
 8001202:	617b      	str	r3, [r7, #20]
 8001204:	697b      	ldr	r3, [r7, #20]
 8001206:	687a      	ldr	r2, [r7, #4]
 8001208:	615a      	str	r2, [r3, #20]
 800120a:	697b      	ldr	r3, [r7, #20]
 800120c:	683a      	ldr	r2, [r7, #0]
 800120e:	619a      	str	r2, [r3, #24]
 8001210:	697b      	ldr	r3, [r7, #20]
 8001212:	2200      	movs	r2, #0
 8001214:	61da      	str	r2, [r3, #28]
 8001216:	697b      	ldr	r3, [r7, #20]
 8001218:	2200      	movs	r2, #0
 800121a:	705a      	strb	r2, [r3, #1]
 800121c:	7afb      	ldrb	r3, [r7, #11]
 800121e:	f003 0307 	and.w	r3, r3, #7
 8001222:	b2da      	uxtb	r2, r3
 8001224:	697b      	ldr	r3, [r7, #20]
 8001226:	701a      	strb	r2, [r3, #0]
 8001228:	7afb      	ldrb	r3, [r7, #11]
 800122a:	f003 0307 	and.w	r3, r3, #7
 800122e:	2b00      	cmp	r3, #0
 8001230:	d106      	bne.n	8001240 <HAL_PCD_EP_Receive+0x64>
 8001232:	68fb      	ldr	r3, [r7, #12]
 8001234:	681b      	ldr	r3, [r3, #0]
 8001236:	6979      	ldr	r1, [r7, #20]
 8001238:	4618      	mov	r0, r3
 800123a:	f002 fb85 	bl	8003948 <USB_EPStartXfer>
 800123e:	e005      	b.n	800124c <HAL_PCD_EP_Receive+0x70>
 8001240:	68fb      	ldr	r3, [r7, #12]
 8001242:	681b      	ldr	r3, [r3, #0]
 8001244:	6979      	ldr	r1, [r7, #20]
 8001246:	4618      	mov	r0, r3
 8001248:	f002 fb7e 	bl	8003948 <USB_EPStartXfer>
 800124c:	2300      	movs	r3, #0
 800124e:	4618      	mov	r0, r3
 8001250:	3718      	adds	r7, #24
 8001252:	46bd      	mov	sp, r7
 8001254:	bd80      	pop	{r7, pc}

08001256 <HAL_PCD_EP_Transmit>:
 8001256:	b580      	push	{r7, lr}
 8001258:	b086      	sub	sp, #24
 800125a:	af00      	add	r7, sp, #0
 800125c:	60f8      	str	r0, [r7, #12]
 800125e:	607a      	str	r2, [r7, #4]
 8001260:	603b      	str	r3, [r7, #0]
 8001262:	460b      	mov	r3, r1
 8001264:	72fb      	strb	r3, [r7, #11]
 8001266:	7afb      	ldrb	r3, [r7, #11]
 8001268:	f003 0307 	and.w	r3, r3, #7
 800126c:	1c5a      	adds	r2, r3, #1
 800126e:	4613      	mov	r3, r2
 8001270:	009b      	lsls	r3, r3, #2
 8001272:	4413      	add	r3, r2
 8001274:	00db      	lsls	r3, r3, #3
 8001276:	68fa      	ldr	r2, [r7, #12]
 8001278:	4413      	add	r3, r2
 800127a:	617b      	str	r3, [r7, #20]
 800127c:	697b      	ldr	r3, [r7, #20]
 800127e:	687a      	ldr	r2, [r7, #4]
 8001280:	615a      	str	r2, [r3, #20]
 8001282:	697b      	ldr	r3, [r7, #20]
 8001284:	683a      	ldr	r2, [r7, #0]
 8001286:	619a      	str	r2, [r3, #24]
 8001288:	697b      	ldr	r3, [r7, #20]
 800128a:	2201      	movs	r2, #1
 800128c:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8001290:	697b      	ldr	r3, [r7, #20]
 8001292:	683a      	ldr	r2, [r7, #0]
 8001294:	621a      	str	r2, [r3, #32]
 8001296:	697b      	ldr	r3, [r7, #20]
 8001298:	2200      	movs	r2, #0
 800129a:	61da      	str	r2, [r3, #28]
 800129c:	697b      	ldr	r3, [r7, #20]
 800129e:	2201      	movs	r2, #1
 80012a0:	705a      	strb	r2, [r3, #1]
 80012a2:	7afb      	ldrb	r3, [r7, #11]
 80012a4:	f003 0307 	and.w	r3, r3, #7
 80012a8:	b2da      	uxtb	r2, r3
 80012aa:	697b      	ldr	r3, [r7, #20]
 80012ac:	701a      	strb	r2, [r3, #0]
 80012ae:	7afb      	ldrb	r3, [r7, #11]
 80012b0:	f003 0307 	and.w	r3, r3, #7
 80012b4:	2b00      	cmp	r3, #0
 80012b6:	d106      	bne.n	80012c6 <HAL_PCD_EP_Transmit+0x70>
 80012b8:	68fb      	ldr	r3, [r7, #12]
 80012ba:	681b      	ldr	r3, [r3, #0]
 80012bc:	6979      	ldr	r1, [r7, #20]
 80012be:	4618      	mov	r0, r3
 80012c0:	f002 fb42 	bl	8003948 <USB_EPStartXfer>
 80012c4:	e005      	b.n	80012d2 <HAL_PCD_EP_Transmit+0x7c>
 80012c6:	68fb      	ldr	r3, [r7, #12]
 80012c8:	681b      	ldr	r3, [r3, #0]
 80012ca:	6979      	ldr	r1, [r7, #20]
 80012cc:	4618      	mov	r0, r3
 80012ce:	f002 fb3b 	bl	8003948 <USB_EPStartXfer>
 80012d2:	2300      	movs	r3, #0
 80012d4:	4618      	mov	r0, r3
 80012d6:	3718      	adds	r7, #24
 80012d8:	46bd      	mov	sp, r7
 80012da:	bd80      	pop	{r7, pc}

080012dc <HAL_PCD_EP_SetStall>:
 80012dc:	b580      	push	{r7, lr}
 80012de:	b084      	sub	sp, #16
 80012e0:	af00      	add	r7, sp, #0
 80012e2:	6078      	str	r0, [r7, #4]
 80012e4:	460b      	mov	r3, r1
 80012e6:	70fb      	strb	r3, [r7, #3]
 80012e8:	78fb      	ldrb	r3, [r7, #3]
 80012ea:	f003 0207 	and.w	r2, r3, #7
 80012ee:	687b      	ldr	r3, [r7, #4]
 80012f0:	685b      	ldr	r3, [r3, #4]
 80012f2:	429a      	cmp	r2, r3
 80012f4:	d901      	bls.n	80012fa <HAL_PCD_EP_SetStall+0x1e>
 80012f6:	2301      	movs	r3, #1
 80012f8:	e04c      	b.n	8001394 <HAL_PCD_EP_SetStall+0xb8>
 80012fa:	f997 3003 	ldrsb.w	r3, [r7, #3]
 80012fe:	2b00      	cmp	r3, #0
 8001300:	da0e      	bge.n	8001320 <HAL_PCD_EP_SetStall+0x44>
 8001302:	78fb      	ldrb	r3, [r7, #3]
 8001304:	f003 0307 	and.w	r3, r3, #7
 8001308:	1c5a      	adds	r2, r3, #1
 800130a:	4613      	mov	r3, r2
 800130c:	009b      	lsls	r3, r3, #2
 800130e:	4413      	add	r3, r2
 8001310:	00db      	lsls	r3, r3, #3
 8001312:	687a      	ldr	r2, [r7, #4]
 8001314:	4413      	add	r3, r2
 8001316:	60fb      	str	r3, [r7, #12]
 8001318:	68fb      	ldr	r3, [r7, #12]
 800131a:	2201      	movs	r2, #1
 800131c:	705a      	strb	r2, [r3, #1]
 800131e:	e00c      	b.n	800133a <HAL_PCD_EP_SetStall+0x5e>
 8001320:	78fa      	ldrb	r2, [r7, #3]
 8001322:	4613      	mov	r3, r2
 8001324:	009b      	lsls	r3, r3, #2
 8001326:	4413      	add	r3, r2
 8001328:	00db      	lsls	r3, r3, #3
 800132a:	f503 73b4 	add.w	r3, r3, #360	; 0x168
 800132e:	687a      	ldr	r2, [r7, #4]
 8001330:	4413      	add	r3, r2
 8001332:	60fb      	str	r3, [r7, #12]
 8001334:	68fb      	ldr	r3, [r7, #12]
 8001336:	2200      	movs	r2, #0
 8001338:	705a      	strb	r2, [r3, #1]
 800133a:	68fb      	ldr	r3, [r7, #12]
 800133c:	2201      	movs	r2, #1
 800133e:	709a      	strb	r2, [r3, #2]
 8001340:	78fb      	ldrb	r3, [r7, #3]
 8001342:	f003 0307 	and.w	r3, r3, #7
 8001346:	b2da      	uxtb	r2, r3
 8001348:	68fb      	ldr	r3, [r7, #12]
 800134a:	701a      	strb	r2, [r3, #0]
 800134c:	687b      	ldr	r3, [r7, #4]
 800134e:	f893 32a8 	ldrb.w	r3, [r3, #680]	; 0x2a8
 8001352:	2b01      	cmp	r3, #1
 8001354:	d101      	bne.n	800135a <HAL_PCD_EP_SetStall+0x7e>
 8001356:	2302      	movs	r3, #2
 8001358:	e01c      	b.n	8001394 <HAL_PCD_EP_SetStall+0xb8>
 800135a:	687b      	ldr	r3, [r7, #4]
 800135c:	2201      	movs	r2, #1
 800135e:	f883 22a8 	strb.w	r2, [r3, #680]	; 0x2a8
 8001362:	687b      	ldr	r3, [r7, #4]
 8001364:	681b      	ldr	r3, [r3, #0]
 8001366:	68f9      	ldr	r1, [r7, #12]
 8001368:	4618      	mov	r0, r3
 800136a:	f004 f925 	bl	80055b8 <USB_EPSetStall>
 800136e:	78fb      	ldrb	r3, [r7, #3]
 8001370:	f003 0307 	and.w	r3, r3, #7
 8001374:	2b00      	cmp	r3, #0
 8001376:	d108      	bne.n	800138a <HAL_PCD_EP_SetStall+0xae>
 8001378:	687b      	ldr	r3, [r7, #4]
 800137a:	681a      	ldr	r2, [r3, #0]
 800137c:	687b      	ldr	r3, [r7, #4]
 800137e:	f503 732c 	add.w	r3, r3, #688	; 0x2b0
 8001382:	4619      	mov	r1, r3
 8001384:	4610      	mov	r0, r2
 8001386:	f004 fa4a 	bl	800581e <USB_EP0_OutStart>
 800138a:	687b      	ldr	r3, [r7, #4]
 800138c:	2200      	movs	r2, #0
 800138e:	f883 22a8 	strb.w	r2, [r3, #680]	; 0x2a8
 8001392:	2300      	movs	r3, #0
 8001394:	4618      	mov	r0, r3
 8001396:	3710      	adds	r7, #16
 8001398:	46bd      	mov	sp, r7
 800139a:	bd80      	pop	{r7, pc}

0800139c <HAL_PCD_EP_ClrStall>:
 800139c:	b580      	push	{r7, lr}
 800139e:	b084      	sub	sp, #16
 80013a0:	af00      	add	r7, sp, #0
 80013a2:	6078      	str	r0, [r7, #4]
 80013a4:	460b      	mov	r3, r1
 80013a6:	70fb      	strb	r3, [r7, #3]
 80013a8:	78fb      	ldrb	r3, [r7, #3]
 80013aa:	f003 020f 	and.w	r2, r3, #15
 80013ae:	687b      	ldr	r3, [r7, #4]
 80013b0:	685b      	ldr	r3, [r3, #4]
 80013b2:	429a      	cmp	r2, r3
 80013b4:	d901      	bls.n	80013ba <HAL_PCD_EP_ClrStall+0x1e>
 80013b6:	2301      	movs	r3, #1
 80013b8:	e040      	b.n	800143c <HAL_PCD_EP_ClrStall+0xa0>
 80013ba:	f997 3003 	ldrsb.w	r3, [r7, #3]
 80013be:	2b00      	cmp	r3, #0
 80013c0:	da0e      	bge.n	80013e0 <HAL_PCD_EP_ClrStall+0x44>
 80013c2:	78fb      	ldrb	r3, [r7, #3]
 80013c4:	f003 0307 	and.w	r3, r3, #7
 80013c8:	1c5a      	adds	r2, r3, #1
 80013ca:	4613      	mov	r3, r2
 80013cc:	009b      	lsls	r3, r3, #2
 80013ce:	4413      	add	r3, r2
 80013d0:	00db      	lsls	r3, r3, #3
 80013d2:	687a      	ldr	r2, [r7, #4]
 80013d4:	4413      	add	r3, r2
 80013d6:	60fb      	str	r3, [r7, #12]
 80013d8:	68fb      	ldr	r3, [r7, #12]
 80013da:	2201      	movs	r2, #1
 80013dc:	705a      	strb	r2, [r3, #1]
 80013de:	e00e      	b.n	80013fe <HAL_PCD_EP_ClrStall+0x62>
 80013e0:	78fb      	ldrb	r3, [r7, #3]
 80013e2:	f003 0207 	and.w	r2, r3, #7
 80013e6:	4613      	mov	r3, r2
 80013e8:	009b      	lsls	r3, r3, #2
 80013ea:	4413      	add	r3, r2
 80013ec:	00db      	lsls	r3, r3, #3
 80013ee:	f503 73b4 	add.w	r3, r3, #360	; 0x168
 80013f2:	687a      	ldr	r2, [r7, #4]
 80013f4:	4413      	add	r3, r2
 80013f6:	60fb      	str	r3, [r7, #12]
 80013f8:	68fb      	ldr	r3, [r7, #12]
 80013fa:	2200      	movs	r2, #0
 80013fc:	705a      	strb	r2, [r3, #1]
 80013fe:	68fb      	ldr	r3, [r7, #12]
 8001400:	2200      	movs	r2, #0
 8001402:	709a      	strb	r2, [r3, #2]
 8001404:	78fb      	ldrb	r3, [r7, #3]
 8001406:	f003 0307 	and.w	r3, r3, #7
 800140a:	b2da      	uxtb	r2, r3
 800140c:	68fb      	ldr	r3, [r7, #12]
 800140e:	701a      	strb	r2, [r3, #0]
 8001410:	687b      	ldr	r3, [r7, #4]
 8001412:	f893 32a8 	ldrb.w	r3, [r3, #680]	; 0x2a8
 8001416:	2b01      	cmp	r3, #1
 8001418:	d101      	bne.n	800141e <HAL_PCD_EP_ClrStall+0x82>
 800141a:	2302      	movs	r3, #2
 800141c:	e00e      	b.n	800143c <HAL_PCD_EP_ClrStall+0xa0>
 800141e:	687b      	ldr	r3, [r7, #4]
 8001420:	2201      	movs	r2, #1
 8001422:	f883 22a8 	strb.w	r2, [r3, #680]	; 0x2a8
 8001426:	687b      	ldr	r3, [r7, #4]
 8001428:	681b      	ldr	r3, [r3, #0]
 800142a:	68f9      	ldr	r1, [r7, #12]
 800142c:	4618      	mov	r0, r3
 800142e:	f004 f913 	bl	8005658 <USB_EPClearStall>
 8001432:	687b      	ldr	r3, [r7, #4]
 8001434:	2200      	movs	r2, #0
 8001436:	f883 22a8 	strb.w	r2, [r3, #680]	; 0x2a8
 800143a:	2300      	movs	r3, #0
 800143c:	4618      	mov	r0, r3
 800143e:	3710      	adds	r7, #16
 8001440:	46bd      	mov	sp, r7
 8001442:	bd80      	pop	{r7, pc}

08001444 <PCD_EP_ISR_Handler>:
 8001444:	b580      	push	{r7, lr}
 8001446:	b08e      	sub	sp, #56	; 0x38
 8001448:	af00      	add	r7, sp, #0
 800144a:	6078      	str	r0, [r7, #4]
 800144c:	e2ec      	b.n	8001a28 <PCD_EP_ISR_Handler+0x5e4>
 800144e:	687b      	ldr	r3, [r7, #4]
 8001450:	681b      	ldr	r3, [r3, #0]
 8001452:	f8b3 3044 	ldrh.w	r3, [r3, #68]	; 0x44
 8001456:	85fb      	strh	r3, [r7, #46]	; 0x2e
 8001458:	8dfb      	ldrh	r3, [r7, #46]	; 0x2e
 800145a:	b2db      	uxtb	r3, r3
 800145c:	f003 030f 	and.w	r3, r3, #15
 8001460:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
 8001464:	f897 302d 	ldrb.w	r3, [r7, #45]	; 0x2d
 8001468:	2b00      	cmp	r3, #0
 800146a:	f040 8161 	bne.w	8001730 <PCD_EP_ISR_Handler+0x2ec>
 800146e:	8dfb      	ldrh	r3, [r7, #46]	; 0x2e
 8001470:	f003 0310 	and.w	r3, r3, #16
 8001474:	2b00      	cmp	r3, #0
 8001476:	d152      	bne.n	800151e <PCD_EP_ISR_Handler+0xda>
 8001478:	687b      	ldr	r3, [r7, #4]
 800147a:	681b      	ldr	r3, [r3, #0]
 800147c:	881b      	ldrh	r3, [r3, #0]
 800147e:	b29b      	uxth	r3, r3
 8001480:	f423 43e1 	bic.w	r3, r3, #28800	; 0x7080
 8001484:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8001488:	81fb      	strh	r3, [r7, #14]
 800148a:	687b      	ldr	r3, [r7, #4]
 800148c:	681a      	ldr	r2, [r3, #0]
 800148e:	89fb      	ldrh	r3, [r7, #14]
 8001490:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8001494:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8001498:	b29b      	uxth	r3, r3
 800149a:	8013      	strh	r3, [r2, #0]
 800149c:	687b      	ldr	r3, [r7, #4]
 800149e:	3328      	adds	r3, #40	; 0x28
 80014a0:	627b      	str	r3, [r7, #36]	; 0x24
 80014a2:	687b      	ldr	r3, [r7, #4]
 80014a4:	681b      	ldr	r3, [r3, #0]
 80014a6:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 80014aa:	b29b      	uxth	r3, r3
 80014ac:	461a      	mov	r2, r3
 80014ae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80014b0:	781b      	ldrb	r3, [r3, #0]
 80014b2:	00db      	lsls	r3, r3, #3
 80014b4:	4413      	add	r3, r2
 80014b6:	3302      	adds	r3, #2
 80014b8:	005b      	lsls	r3, r3, #1
 80014ba:	687a      	ldr	r2, [r7, #4]
 80014bc:	6812      	ldr	r2, [r2, #0]
 80014be:	4413      	add	r3, r2
 80014c0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80014c4:	881b      	ldrh	r3, [r3, #0]
 80014c6:	f3c3 0209 	ubfx	r2, r3, #0, #10
 80014ca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80014cc:	61da      	str	r2, [r3, #28]
 80014ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80014d0:	695a      	ldr	r2, [r3, #20]
 80014d2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80014d4:	69db      	ldr	r3, [r3, #28]
 80014d6:	441a      	add	r2, r3
 80014d8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80014da:	615a      	str	r2, [r3, #20]
 80014dc:	2100      	movs	r1, #0
 80014de:	6878      	ldr	r0, [r7, #4]
 80014e0:	f005 fee1 	bl	80072a6 <HAL_PCD_DataInStageCallback>
 80014e4:	687b      	ldr	r3, [r7, #4]
 80014e6:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 80014ea:	b2db      	uxtb	r3, r3
 80014ec:	2b00      	cmp	r3, #0
 80014ee:	f000 829b 	beq.w	8001a28 <PCD_EP_ISR_Handler+0x5e4>
 80014f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80014f4:	699b      	ldr	r3, [r3, #24]
 80014f6:	2b00      	cmp	r3, #0
 80014f8:	f040 8296 	bne.w	8001a28 <PCD_EP_ISR_Handler+0x5e4>
 80014fc:	687b      	ldr	r3, [r7, #4]
 80014fe:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 8001502:	b2db      	uxtb	r3, r3
 8001504:	f063 037f 	orn	r3, r3, #127	; 0x7f
 8001508:	b2da      	uxtb	r2, r3
 800150a:	687b      	ldr	r3, [r7, #4]
 800150c:	681b      	ldr	r3, [r3, #0]
 800150e:	b292      	uxth	r2, r2
 8001510:	f8a3 204c 	strh.w	r2, [r3, #76]	; 0x4c
 8001514:	687b      	ldr	r3, [r7, #4]
 8001516:	2200      	movs	r2, #0
 8001518:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 800151c:	e284      	b.n	8001a28 <PCD_EP_ISR_Handler+0x5e4>
 800151e:	687b      	ldr	r3, [r7, #4]
 8001520:	f503 73b4 	add.w	r3, r3, #360	; 0x168
 8001524:	627b      	str	r3, [r7, #36]	; 0x24
 8001526:	687b      	ldr	r3, [r7, #4]
 8001528:	681b      	ldr	r3, [r3, #0]
 800152a:	881b      	ldrh	r3, [r3, #0]
 800152c:	857b      	strh	r3, [r7, #42]	; 0x2a
 800152e:	8d7b      	ldrh	r3, [r7, #42]	; 0x2a
 8001530:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8001534:	2b00      	cmp	r3, #0
 8001536:	d034      	beq.n	80015a2 <PCD_EP_ISR_Handler+0x15e>
 8001538:	687b      	ldr	r3, [r7, #4]
 800153a:	681b      	ldr	r3, [r3, #0]
 800153c:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8001540:	b29b      	uxth	r3, r3
 8001542:	461a      	mov	r2, r3
 8001544:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001546:	781b      	ldrb	r3, [r3, #0]
 8001548:	00db      	lsls	r3, r3, #3
 800154a:	4413      	add	r3, r2
 800154c:	3306      	adds	r3, #6
 800154e:	005b      	lsls	r3, r3, #1
 8001550:	687a      	ldr	r2, [r7, #4]
 8001552:	6812      	ldr	r2, [r2, #0]
 8001554:	4413      	add	r3, r2
 8001556:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800155a:	881b      	ldrh	r3, [r3, #0]
 800155c:	f3c3 0209 	ubfx	r2, r3, #0, #10
 8001560:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001562:	61da      	str	r2, [r3, #28]
 8001564:	687b      	ldr	r3, [r7, #4]
 8001566:	6818      	ldr	r0, [r3, #0]
 8001568:	687b      	ldr	r3, [r7, #4]
 800156a:	f503 712c 	add.w	r1, r3, #688	; 0x2b0
 800156e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001570:	88da      	ldrh	r2, [r3, #6]
 8001572:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001574:	69db      	ldr	r3, [r3, #28]
 8001576:	b29b      	uxth	r3, r3
 8001578:	f004 f9a1 	bl	80058be <USB_ReadPMA>
 800157c:	687b      	ldr	r3, [r7, #4]
 800157e:	681b      	ldr	r3, [r3, #0]
 8001580:	881b      	ldrh	r3, [r3, #0]
 8001582:	b29a      	uxth	r2, r3
 8001584:	f640 738f 	movw	r3, #3983	; 0xf8f
 8001588:	4013      	ands	r3, r2
 800158a:	823b      	strh	r3, [r7, #16]
 800158c:	687b      	ldr	r3, [r7, #4]
 800158e:	681b      	ldr	r3, [r3, #0]
 8001590:	8a3a      	ldrh	r2, [r7, #16]
 8001592:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001596:	b292      	uxth	r2, r2
 8001598:	801a      	strh	r2, [r3, #0]
 800159a:	6878      	ldr	r0, [r7, #4]
 800159c:	f005 fe56 	bl	800724c <HAL_PCD_SetupStageCallback>
 80015a0:	e242      	b.n	8001a28 <PCD_EP_ISR_Handler+0x5e4>
 80015a2:	f9b7 302a 	ldrsh.w	r3, [r7, #42]	; 0x2a
 80015a6:	2b00      	cmp	r3, #0
 80015a8:	f280 823e 	bge.w	8001a28 <PCD_EP_ISR_Handler+0x5e4>
 80015ac:	687b      	ldr	r3, [r7, #4]
 80015ae:	681b      	ldr	r3, [r3, #0]
 80015b0:	881b      	ldrh	r3, [r3, #0]
 80015b2:	b29a      	uxth	r2, r3
 80015b4:	f640 738f 	movw	r3, #3983	; 0xf8f
 80015b8:	4013      	ands	r3, r2
 80015ba:	83bb      	strh	r3, [r7, #28]
 80015bc:	687b      	ldr	r3, [r7, #4]
 80015be:	681b      	ldr	r3, [r3, #0]
 80015c0:	8bba      	ldrh	r2, [r7, #28]
 80015c2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80015c6:	b292      	uxth	r2, r2
 80015c8:	801a      	strh	r2, [r3, #0]
 80015ca:	687b      	ldr	r3, [r7, #4]
 80015cc:	681b      	ldr	r3, [r3, #0]
 80015ce:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 80015d2:	b29b      	uxth	r3, r3
 80015d4:	461a      	mov	r2, r3
 80015d6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80015d8:	781b      	ldrb	r3, [r3, #0]
 80015da:	00db      	lsls	r3, r3, #3
 80015dc:	4413      	add	r3, r2
 80015de:	3306      	adds	r3, #6
 80015e0:	005b      	lsls	r3, r3, #1
 80015e2:	687a      	ldr	r2, [r7, #4]
 80015e4:	6812      	ldr	r2, [r2, #0]
 80015e6:	4413      	add	r3, r2
 80015e8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80015ec:	881b      	ldrh	r3, [r3, #0]
 80015ee:	f3c3 0209 	ubfx	r2, r3, #0, #10
 80015f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80015f4:	61da      	str	r2, [r3, #28]
 80015f6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80015f8:	69db      	ldr	r3, [r3, #28]
 80015fa:	2b00      	cmp	r3, #0
 80015fc:	d019      	beq.n	8001632 <PCD_EP_ISR_Handler+0x1ee>
 80015fe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001600:	695b      	ldr	r3, [r3, #20]
 8001602:	2b00      	cmp	r3, #0
 8001604:	d015      	beq.n	8001632 <PCD_EP_ISR_Handler+0x1ee>
 8001606:	687b      	ldr	r3, [r7, #4]
 8001608:	6818      	ldr	r0, [r3, #0]
 800160a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800160c:	6959      	ldr	r1, [r3, #20]
 800160e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001610:	88da      	ldrh	r2, [r3, #6]
 8001612:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001614:	69db      	ldr	r3, [r3, #28]
 8001616:	b29b      	uxth	r3, r3
 8001618:	f004 f951 	bl	80058be <USB_ReadPMA>
 800161c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800161e:	695a      	ldr	r2, [r3, #20]
 8001620:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001622:	69db      	ldr	r3, [r3, #28]
 8001624:	441a      	add	r2, r3
 8001626:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001628:	615a      	str	r2, [r3, #20]
 800162a:	2100      	movs	r1, #0
 800162c:	6878      	ldr	r0, [r7, #4]
 800162e:	f005 fe1f 	bl	8007270 <HAL_PCD_DataOutStageCallback>
 8001632:	687b      	ldr	r3, [r7, #4]
 8001634:	681b      	ldr	r3, [r3, #0]
 8001636:	881b      	ldrh	r3, [r3, #0]
 8001638:	b29b      	uxth	r3, r3
 800163a:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800163e:	2b00      	cmp	r3, #0
 8001640:	f040 81f2 	bne.w	8001a28 <PCD_EP_ISR_Handler+0x5e4>
 8001644:	687b      	ldr	r3, [r7, #4]
 8001646:	681b      	ldr	r3, [r3, #0]
 8001648:	61bb      	str	r3, [r7, #24]
 800164a:	687b      	ldr	r3, [r7, #4]
 800164c:	681b      	ldr	r3, [r3, #0]
 800164e:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8001652:	b29b      	uxth	r3, r3
 8001654:	461a      	mov	r2, r3
 8001656:	69bb      	ldr	r3, [r7, #24]
 8001658:	4413      	add	r3, r2
 800165a:	61bb      	str	r3, [r7, #24]
 800165c:	69bb      	ldr	r3, [r7, #24]
 800165e:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 8001662:	617b      	str	r3, [r7, #20]
 8001664:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001666:	691b      	ldr	r3, [r3, #16]
 8001668:	2b00      	cmp	r3, #0
 800166a:	d112      	bne.n	8001692 <PCD_EP_ISR_Handler+0x24e>
 800166c:	697b      	ldr	r3, [r7, #20]
 800166e:	881b      	ldrh	r3, [r3, #0]
 8001670:	b29b      	uxth	r3, r3
 8001672:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 8001676:	b29a      	uxth	r2, r3
 8001678:	697b      	ldr	r3, [r7, #20]
 800167a:	801a      	strh	r2, [r3, #0]
 800167c:	697b      	ldr	r3, [r7, #20]
 800167e:	881b      	ldrh	r3, [r3, #0]
 8001680:	b29b      	uxth	r3, r3
 8001682:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8001686:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800168a:	b29a      	uxth	r2, r3
 800168c:	697b      	ldr	r3, [r7, #20]
 800168e:	801a      	strh	r2, [r3, #0]
 8001690:	e02f      	b.n	80016f2 <PCD_EP_ISR_Handler+0x2ae>
 8001692:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001694:	691b      	ldr	r3, [r3, #16]
 8001696:	2b3e      	cmp	r3, #62	; 0x3e
 8001698:	d813      	bhi.n	80016c2 <PCD_EP_ISR_Handler+0x27e>
 800169a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800169c:	691b      	ldr	r3, [r3, #16]
 800169e:	085b      	lsrs	r3, r3, #1
 80016a0:	633b      	str	r3, [r7, #48]	; 0x30
 80016a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80016a4:	691b      	ldr	r3, [r3, #16]
 80016a6:	f003 0301 	and.w	r3, r3, #1
 80016aa:	2b00      	cmp	r3, #0
 80016ac:	d002      	beq.n	80016b4 <PCD_EP_ISR_Handler+0x270>
 80016ae:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80016b0:	3301      	adds	r3, #1
 80016b2:	633b      	str	r3, [r7, #48]	; 0x30
 80016b4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80016b6:	b29b      	uxth	r3, r3
 80016b8:	029b      	lsls	r3, r3, #10
 80016ba:	b29a      	uxth	r2, r3
 80016bc:	697b      	ldr	r3, [r7, #20]
 80016be:	801a      	strh	r2, [r3, #0]
 80016c0:	e017      	b.n	80016f2 <PCD_EP_ISR_Handler+0x2ae>
 80016c2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80016c4:	691b      	ldr	r3, [r3, #16]
 80016c6:	095b      	lsrs	r3, r3, #5
 80016c8:	633b      	str	r3, [r7, #48]	; 0x30
 80016ca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80016cc:	691b      	ldr	r3, [r3, #16]
 80016ce:	f003 031f 	and.w	r3, r3, #31
 80016d2:	2b00      	cmp	r3, #0
 80016d4:	d102      	bne.n	80016dc <PCD_EP_ISR_Handler+0x298>
 80016d6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80016d8:	3b01      	subs	r3, #1
 80016da:	633b      	str	r3, [r7, #48]	; 0x30
 80016dc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80016de:	b29b      	uxth	r3, r3
 80016e0:	029b      	lsls	r3, r3, #10
 80016e2:	b29b      	uxth	r3, r3
 80016e4:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 80016e8:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 80016ec:	b29a      	uxth	r2, r3
 80016ee:	697b      	ldr	r3, [r7, #20]
 80016f0:	801a      	strh	r2, [r3, #0]
 80016f2:	687b      	ldr	r3, [r7, #4]
 80016f4:	681b      	ldr	r3, [r3, #0]
 80016f6:	881b      	ldrh	r3, [r3, #0]
 80016f8:	b29b      	uxth	r3, r3
 80016fa:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80016fe:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8001702:	827b      	strh	r3, [r7, #18]
 8001704:	8a7b      	ldrh	r3, [r7, #18]
 8001706:	f483 5380 	eor.w	r3, r3, #4096	; 0x1000
 800170a:	827b      	strh	r3, [r7, #18]
 800170c:	8a7b      	ldrh	r3, [r7, #18]
 800170e:	f483 5300 	eor.w	r3, r3, #8192	; 0x2000
 8001712:	827b      	strh	r3, [r7, #18]
 8001714:	687b      	ldr	r3, [r7, #4]
 8001716:	681a      	ldr	r2, [r3, #0]
 8001718:	8a7b      	ldrh	r3, [r7, #18]
 800171a:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 800171e:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 8001722:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001726:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800172a:	b29b      	uxth	r3, r3
 800172c:	8013      	strh	r3, [r2, #0]
 800172e:	e17b      	b.n	8001a28 <PCD_EP_ISR_Handler+0x5e4>
 8001730:	687b      	ldr	r3, [r7, #4]
 8001732:	681b      	ldr	r3, [r3, #0]
 8001734:	461a      	mov	r2, r3
 8001736:	f897 302d 	ldrb.w	r3, [r7, #45]	; 0x2d
 800173a:	009b      	lsls	r3, r3, #2
 800173c:	4413      	add	r3, r2
 800173e:	881b      	ldrh	r3, [r3, #0]
 8001740:	857b      	strh	r3, [r7, #42]	; 0x2a
 8001742:	f9b7 302a 	ldrsh.w	r3, [r7, #42]	; 0x2a
 8001746:	2b00      	cmp	r3, #0
 8001748:	f280 80ea 	bge.w	8001920 <PCD_EP_ISR_Handler+0x4dc>
 800174c:	687b      	ldr	r3, [r7, #4]
 800174e:	681b      	ldr	r3, [r3, #0]
 8001750:	461a      	mov	r2, r3
 8001752:	f897 302d 	ldrb.w	r3, [r7, #45]	; 0x2d
 8001756:	009b      	lsls	r3, r3, #2
 8001758:	4413      	add	r3, r2
 800175a:	881b      	ldrh	r3, [r3, #0]
 800175c:	b29a      	uxth	r2, r3
 800175e:	f640 738f 	movw	r3, #3983	; 0xf8f
 8001762:	4013      	ands	r3, r2
 8001764:	853b      	strh	r3, [r7, #40]	; 0x28
 8001766:	687b      	ldr	r3, [r7, #4]
 8001768:	681b      	ldr	r3, [r3, #0]
 800176a:	461a      	mov	r2, r3
 800176c:	f897 302d 	ldrb.w	r3, [r7, #45]	; 0x2d
 8001770:	009b      	lsls	r3, r3, #2
 8001772:	4413      	add	r3, r2
 8001774:	8d3a      	ldrh	r2, [r7, #40]	; 0x28
 8001776:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800177a:	b292      	uxth	r2, r2
 800177c:	801a      	strh	r2, [r3, #0]
 800177e:	f897 202d 	ldrb.w	r2, [r7, #45]	; 0x2d
 8001782:	4613      	mov	r3, r2
 8001784:	009b      	lsls	r3, r3, #2
 8001786:	4413      	add	r3, r2
 8001788:	00db      	lsls	r3, r3, #3
 800178a:	f503 73b4 	add.w	r3, r3, #360	; 0x168
 800178e:	687a      	ldr	r2, [r7, #4]
 8001790:	4413      	add	r3, r2
 8001792:	627b      	str	r3, [r7, #36]	; 0x24
 8001794:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001796:	7b1b      	ldrb	r3, [r3, #12]
 8001798:	2b00      	cmp	r3, #0
 800179a:	d122      	bne.n	80017e2 <PCD_EP_ISR_Handler+0x39e>
 800179c:	687b      	ldr	r3, [r7, #4]
 800179e:	681b      	ldr	r3, [r3, #0]
 80017a0:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 80017a4:	b29b      	uxth	r3, r3
 80017a6:	461a      	mov	r2, r3
 80017a8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80017aa:	781b      	ldrb	r3, [r3, #0]
 80017ac:	00db      	lsls	r3, r3, #3
 80017ae:	4413      	add	r3, r2
 80017b0:	3306      	adds	r3, #6
 80017b2:	005b      	lsls	r3, r3, #1
 80017b4:	687a      	ldr	r2, [r7, #4]
 80017b6:	6812      	ldr	r2, [r2, #0]
 80017b8:	4413      	add	r3, r2
 80017ba:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80017be:	881b      	ldrh	r3, [r3, #0]
 80017c0:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80017c4:	86fb      	strh	r3, [r7, #54]	; 0x36
 80017c6:	8efb      	ldrh	r3, [r7, #54]	; 0x36
 80017c8:	2b00      	cmp	r3, #0
 80017ca:	f000 8087 	beq.w	80018dc <PCD_EP_ISR_Handler+0x498>
 80017ce:	687b      	ldr	r3, [r7, #4]
 80017d0:	6818      	ldr	r0, [r3, #0]
 80017d2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80017d4:	6959      	ldr	r1, [r3, #20]
 80017d6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80017d8:	88da      	ldrh	r2, [r3, #6]
 80017da:	8efb      	ldrh	r3, [r7, #54]	; 0x36
 80017dc:	f004 f86f 	bl	80058be <USB_ReadPMA>
 80017e0:	e07c      	b.n	80018dc <PCD_EP_ISR_Handler+0x498>
 80017e2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80017e4:	78db      	ldrb	r3, [r3, #3]
 80017e6:	2b02      	cmp	r3, #2
 80017e8:	d108      	bne.n	80017fc <PCD_EP_ISR_Handler+0x3b8>
 80017ea:	8d7b      	ldrh	r3, [r7, #42]	; 0x2a
 80017ec:	461a      	mov	r2, r3
 80017ee:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80017f0:	6878      	ldr	r0, [r7, #4]
 80017f2:	f000 f927 	bl	8001a44 <HAL_PCD_EP_DB_Receive>
 80017f6:	4603      	mov	r3, r0
 80017f8:	86fb      	strh	r3, [r7, #54]	; 0x36
 80017fa:	e06f      	b.n	80018dc <PCD_EP_ISR_Handler+0x498>
 80017fc:	687b      	ldr	r3, [r7, #4]
 80017fe:	681b      	ldr	r3, [r3, #0]
 8001800:	461a      	mov	r2, r3
 8001802:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001804:	781b      	ldrb	r3, [r3, #0]
 8001806:	009b      	lsls	r3, r3, #2
 8001808:	4413      	add	r3, r2
 800180a:	881b      	ldrh	r3, [r3, #0]
 800180c:	b29b      	uxth	r3, r3
 800180e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8001812:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8001816:	847b      	strh	r3, [r7, #34]	; 0x22
 8001818:	687b      	ldr	r3, [r7, #4]
 800181a:	681b      	ldr	r3, [r3, #0]
 800181c:	461a      	mov	r2, r3
 800181e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001820:	781b      	ldrb	r3, [r3, #0]
 8001822:	009b      	lsls	r3, r3, #2
 8001824:	441a      	add	r2, r3
 8001826:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 8001828:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 800182c:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 8001830:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001834:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8001838:	b29b      	uxth	r3, r3
 800183a:	8013      	strh	r3, [r2, #0]
 800183c:	687b      	ldr	r3, [r7, #4]
 800183e:	681b      	ldr	r3, [r3, #0]
 8001840:	461a      	mov	r2, r3
 8001842:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001844:	781b      	ldrb	r3, [r3, #0]
 8001846:	009b      	lsls	r3, r3, #2
 8001848:	4413      	add	r3, r2
 800184a:	881b      	ldrh	r3, [r3, #0]
 800184c:	b29b      	uxth	r3, r3
 800184e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001852:	2b00      	cmp	r3, #0
 8001854:	d021      	beq.n	800189a <PCD_EP_ISR_Handler+0x456>
 8001856:	687b      	ldr	r3, [r7, #4]
 8001858:	681b      	ldr	r3, [r3, #0]
 800185a:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 800185e:	b29b      	uxth	r3, r3
 8001860:	461a      	mov	r2, r3
 8001862:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001864:	781b      	ldrb	r3, [r3, #0]
 8001866:	00db      	lsls	r3, r3, #3
 8001868:	4413      	add	r3, r2
 800186a:	3302      	adds	r3, #2
 800186c:	005b      	lsls	r3, r3, #1
 800186e:	687a      	ldr	r2, [r7, #4]
 8001870:	6812      	ldr	r2, [r2, #0]
 8001872:	4413      	add	r3, r2
 8001874:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001878:	881b      	ldrh	r3, [r3, #0]
 800187a:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800187e:	86fb      	strh	r3, [r7, #54]	; 0x36
 8001880:	8efb      	ldrh	r3, [r7, #54]	; 0x36
 8001882:	2b00      	cmp	r3, #0
 8001884:	d02a      	beq.n	80018dc <PCD_EP_ISR_Handler+0x498>
 8001886:	687b      	ldr	r3, [r7, #4]
 8001888:	6818      	ldr	r0, [r3, #0]
 800188a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800188c:	6959      	ldr	r1, [r3, #20]
 800188e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001890:	891a      	ldrh	r2, [r3, #8]
 8001892:	8efb      	ldrh	r3, [r7, #54]	; 0x36
 8001894:	f004 f813 	bl	80058be <USB_ReadPMA>
 8001898:	e020      	b.n	80018dc <PCD_EP_ISR_Handler+0x498>
 800189a:	687b      	ldr	r3, [r7, #4]
 800189c:	681b      	ldr	r3, [r3, #0]
 800189e:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 80018a2:	b29b      	uxth	r3, r3
 80018a4:	461a      	mov	r2, r3
 80018a6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018a8:	781b      	ldrb	r3, [r3, #0]
 80018aa:	00db      	lsls	r3, r3, #3
 80018ac:	4413      	add	r3, r2
 80018ae:	3306      	adds	r3, #6
 80018b0:	005b      	lsls	r3, r3, #1
 80018b2:	687a      	ldr	r2, [r7, #4]
 80018b4:	6812      	ldr	r2, [r2, #0]
 80018b6:	4413      	add	r3, r2
 80018b8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80018bc:	881b      	ldrh	r3, [r3, #0]
 80018be:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80018c2:	86fb      	strh	r3, [r7, #54]	; 0x36
 80018c4:	8efb      	ldrh	r3, [r7, #54]	; 0x36
 80018c6:	2b00      	cmp	r3, #0
 80018c8:	d008      	beq.n	80018dc <PCD_EP_ISR_Handler+0x498>
 80018ca:	687b      	ldr	r3, [r7, #4]
 80018cc:	6818      	ldr	r0, [r3, #0]
 80018ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018d0:	6959      	ldr	r1, [r3, #20]
 80018d2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018d4:	895a      	ldrh	r2, [r3, #10]
 80018d6:	8efb      	ldrh	r3, [r7, #54]	; 0x36
 80018d8:	f003 fff1 	bl	80058be <USB_ReadPMA>
 80018dc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018de:	69da      	ldr	r2, [r3, #28]
 80018e0:	8efb      	ldrh	r3, [r7, #54]	; 0x36
 80018e2:	441a      	add	r2, r3
 80018e4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018e6:	61da      	str	r2, [r3, #28]
 80018e8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018ea:	695a      	ldr	r2, [r3, #20]
 80018ec:	8efb      	ldrh	r3, [r7, #54]	; 0x36
 80018ee:	441a      	add	r2, r3
 80018f0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018f2:	615a      	str	r2, [r3, #20]
 80018f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018f6:	699b      	ldr	r3, [r3, #24]
 80018f8:	2b00      	cmp	r3, #0
 80018fa:	d004      	beq.n	8001906 <PCD_EP_ISR_Handler+0x4c2>
 80018fc:	8efa      	ldrh	r2, [r7, #54]	; 0x36
 80018fe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001900:	691b      	ldr	r3, [r3, #16]
 8001902:	429a      	cmp	r2, r3
 8001904:	d206      	bcs.n	8001914 <PCD_EP_ISR_Handler+0x4d0>
 8001906:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001908:	781b      	ldrb	r3, [r3, #0]
 800190a:	4619      	mov	r1, r3
 800190c:	6878      	ldr	r0, [r7, #4]
 800190e:	f005 fcaf 	bl	8007270 <HAL_PCD_DataOutStageCallback>
 8001912:	e005      	b.n	8001920 <PCD_EP_ISR_Handler+0x4dc>
 8001914:	687b      	ldr	r3, [r7, #4]
 8001916:	681b      	ldr	r3, [r3, #0]
 8001918:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800191a:	4618      	mov	r0, r3
 800191c:	f002 f814 	bl	8003948 <USB_EPStartXfer>
 8001920:	8d7b      	ldrh	r3, [r7, #42]	; 0x2a
 8001922:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001926:	2b00      	cmp	r3, #0
 8001928:	d07e      	beq.n	8001a28 <PCD_EP_ISR_Handler+0x5e4>
 800192a:	f897 302d 	ldrb.w	r3, [r7, #45]	; 0x2d
 800192e:	1c5a      	adds	r2, r3, #1
 8001930:	4613      	mov	r3, r2
 8001932:	009b      	lsls	r3, r3, #2
 8001934:	4413      	add	r3, r2
 8001936:	00db      	lsls	r3, r3, #3
 8001938:	687a      	ldr	r2, [r7, #4]
 800193a:	4413      	add	r3, r2
 800193c:	627b      	str	r3, [r7, #36]	; 0x24
 800193e:	687b      	ldr	r3, [r7, #4]
 8001940:	681b      	ldr	r3, [r3, #0]
 8001942:	461a      	mov	r2, r3
 8001944:	f897 302d 	ldrb.w	r3, [r7, #45]	; 0x2d
 8001948:	009b      	lsls	r3, r3, #2
 800194a:	4413      	add	r3, r2
 800194c:	881b      	ldrh	r3, [r3, #0]
 800194e:	b29b      	uxth	r3, r3
 8001950:	f423 43e1 	bic.w	r3, r3, #28800	; 0x7080
 8001954:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8001958:	843b      	strh	r3, [r7, #32]
 800195a:	687b      	ldr	r3, [r7, #4]
 800195c:	681b      	ldr	r3, [r3, #0]
 800195e:	461a      	mov	r2, r3
 8001960:	f897 302d 	ldrb.w	r3, [r7, #45]	; 0x2d
 8001964:	009b      	lsls	r3, r3, #2
 8001966:	441a      	add	r2, r3
 8001968:	8c3b      	ldrh	r3, [r7, #32]
 800196a:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 800196e:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8001972:	b29b      	uxth	r3, r3
 8001974:	8013      	strh	r3, [r2, #0]
 8001976:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001978:	78db      	ldrb	r3, [r3, #3]
 800197a:	2b03      	cmp	r3, #3
 800197c:	d00c      	beq.n	8001998 <PCD_EP_ISR_Handler+0x554>
 800197e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001980:	78db      	ldrb	r3, [r3, #3]
 8001982:	2b00      	cmp	r3, #0
 8001984:	d008      	beq.n	8001998 <PCD_EP_ISR_Handler+0x554>
 8001986:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001988:	78db      	ldrb	r3, [r3, #3]
 800198a:	2b02      	cmp	r3, #2
 800198c:	d146      	bne.n	8001a1c <PCD_EP_ISR_Handler+0x5d8>
 800198e:	8d7b      	ldrh	r3, [r7, #42]	; 0x2a
 8001990:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001994:	2b00      	cmp	r3, #0
 8001996:	d141      	bne.n	8001a1c <PCD_EP_ISR_Handler+0x5d8>
 8001998:	687b      	ldr	r3, [r7, #4]
 800199a:	681b      	ldr	r3, [r3, #0]
 800199c:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 80019a0:	b29b      	uxth	r3, r3
 80019a2:	461a      	mov	r2, r3
 80019a4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80019a6:	781b      	ldrb	r3, [r3, #0]
 80019a8:	00db      	lsls	r3, r3, #3
 80019aa:	4413      	add	r3, r2
 80019ac:	3302      	adds	r3, #2
 80019ae:	005b      	lsls	r3, r3, #1
 80019b0:	687a      	ldr	r2, [r7, #4]
 80019b2:	6812      	ldr	r2, [r2, #0]
 80019b4:	4413      	add	r3, r2
 80019b6:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80019ba:	881b      	ldrh	r3, [r3, #0]
 80019bc:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80019c0:	83fb      	strh	r3, [r7, #30]
 80019c2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80019c4:	699a      	ldr	r2, [r3, #24]
 80019c6:	8bfb      	ldrh	r3, [r7, #30]
 80019c8:	429a      	cmp	r2, r3
 80019ca:	d906      	bls.n	80019da <PCD_EP_ISR_Handler+0x596>
 80019cc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80019ce:	699a      	ldr	r2, [r3, #24]
 80019d0:	8bfb      	ldrh	r3, [r7, #30]
 80019d2:	1ad2      	subs	r2, r2, r3
 80019d4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80019d6:	619a      	str	r2, [r3, #24]
 80019d8:	e002      	b.n	80019e0 <PCD_EP_ISR_Handler+0x59c>
 80019da:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80019dc:	2200      	movs	r2, #0
 80019de:	619a      	str	r2, [r3, #24]
 80019e0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80019e2:	699b      	ldr	r3, [r3, #24]
 80019e4:	2b00      	cmp	r3, #0
 80019e6:	d106      	bne.n	80019f6 <PCD_EP_ISR_Handler+0x5b2>
 80019e8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80019ea:	781b      	ldrb	r3, [r3, #0]
 80019ec:	4619      	mov	r1, r3
 80019ee:	6878      	ldr	r0, [r7, #4]
 80019f0:	f005 fc59 	bl	80072a6 <HAL_PCD_DataInStageCallback>
 80019f4:	e018      	b.n	8001a28 <PCD_EP_ISR_Handler+0x5e4>
 80019f6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80019f8:	695a      	ldr	r2, [r3, #20]
 80019fa:	8bfb      	ldrh	r3, [r7, #30]
 80019fc:	441a      	add	r2, r3
 80019fe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a00:	615a      	str	r2, [r3, #20]
 8001a02:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a04:	69da      	ldr	r2, [r3, #28]
 8001a06:	8bfb      	ldrh	r3, [r7, #30]
 8001a08:	441a      	add	r2, r3
 8001a0a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a0c:	61da      	str	r2, [r3, #28]
 8001a0e:	687b      	ldr	r3, [r7, #4]
 8001a10:	681b      	ldr	r3, [r3, #0]
 8001a12:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8001a14:	4618      	mov	r0, r3
 8001a16:	f001 ff97 	bl	8003948 <USB_EPStartXfer>
 8001a1a:	e005      	b.n	8001a28 <PCD_EP_ISR_Handler+0x5e4>
 8001a1c:	8d7b      	ldrh	r3, [r7, #42]	; 0x2a
 8001a1e:	461a      	mov	r2, r3
 8001a20:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8001a22:	6878      	ldr	r0, [r7, #4]
 8001a24:	f000 f91b 	bl	8001c5e <HAL_PCD_EP_DB_Transmit>
 8001a28:	687b      	ldr	r3, [r7, #4]
 8001a2a:	681b      	ldr	r3, [r3, #0]
 8001a2c:	f8b3 3044 	ldrh.w	r3, [r3, #68]	; 0x44
 8001a30:	b29b      	uxth	r3, r3
 8001a32:	b21b      	sxth	r3, r3
 8001a34:	2b00      	cmp	r3, #0
 8001a36:	f6ff ad0a 	blt.w	800144e <PCD_EP_ISR_Handler+0xa>
 8001a3a:	2300      	movs	r3, #0
 8001a3c:	4618      	mov	r0, r3
 8001a3e:	3738      	adds	r7, #56	; 0x38
 8001a40:	46bd      	mov	sp, r7
 8001a42:	bd80      	pop	{r7, pc}

08001a44 <HAL_PCD_EP_DB_Receive>:
 8001a44:	b580      	push	{r7, lr}
 8001a46:	b088      	sub	sp, #32
 8001a48:	af00      	add	r7, sp, #0
 8001a4a:	60f8      	str	r0, [r7, #12]
 8001a4c:	60b9      	str	r1, [r7, #8]
 8001a4e:	4613      	mov	r3, r2
 8001a50:	80fb      	strh	r3, [r7, #6]
 8001a52:	88fb      	ldrh	r3, [r7, #6]
 8001a54:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001a58:	2b00      	cmp	r3, #0
 8001a5a:	d07e      	beq.n	8001b5a <HAL_PCD_EP_DB_Receive+0x116>
 8001a5c:	68fb      	ldr	r3, [r7, #12]
 8001a5e:	681b      	ldr	r3, [r3, #0]
 8001a60:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8001a64:	b29b      	uxth	r3, r3
 8001a66:	461a      	mov	r2, r3
 8001a68:	68bb      	ldr	r3, [r7, #8]
 8001a6a:	781b      	ldrb	r3, [r3, #0]
 8001a6c:	00db      	lsls	r3, r3, #3
 8001a6e:	4413      	add	r3, r2
 8001a70:	3302      	adds	r3, #2
 8001a72:	005b      	lsls	r3, r3, #1
 8001a74:	68fa      	ldr	r2, [r7, #12]
 8001a76:	6812      	ldr	r2, [r2, #0]
 8001a78:	4413      	add	r3, r2
 8001a7a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001a7e:	881b      	ldrh	r3, [r3, #0]
 8001a80:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8001a84:	837b      	strh	r3, [r7, #26]
 8001a86:	68bb      	ldr	r3, [r7, #8]
 8001a88:	699a      	ldr	r2, [r3, #24]
 8001a8a:	8b7b      	ldrh	r3, [r7, #26]
 8001a8c:	429a      	cmp	r2, r3
 8001a8e:	d306      	bcc.n	8001a9e <HAL_PCD_EP_DB_Receive+0x5a>
 8001a90:	68bb      	ldr	r3, [r7, #8]
 8001a92:	699a      	ldr	r2, [r3, #24]
 8001a94:	8b7b      	ldrh	r3, [r7, #26]
 8001a96:	1ad2      	subs	r2, r2, r3
 8001a98:	68bb      	ldr	r3, [r7, #8]
 8001a9a:	619a      	str	r2, [r3, #24]
 8001a9c:	e002      	b.n	8001aa4 <HAL_PCD_EP_DB_Receive+0x60>
 8001a9e:	68bb      	ldr	r3, [r7, #8]
 8001aa0:	2200      	movs	r2, #0
 8001aa2:	619a      	str	r2, [r3, #24]
 8001aa4:	68bb      	ldr	r3, [r7, #8]
 8001aa6:	699b      	ldr	r3, [r3, #24]
 8001aa8:	2b00      	cmp	r3, #0
 8001aaa:	d123      	bne.n	8001af4 <HAL_PCD_EP_DB_Receive+0xb0>
 8001aac:	68fb      	ldr	r3, [r7, #12]
 8001aae:	681b      	ldr	r3, [r3, #0]
 8001ab0:	461a      	mov	r2, r3
 8001ab2:	68bb      	ldr	r3, [r7, #8]
 8001ab4:	781b      	ldrb	r3, [r3, #0]
 8001ab6:	009b      	lsls	r3, r3, #2
 8001ab8:	4413      	add	r3, r2
 8001aba:	881b      	ldrh	r3, [r3, #0]
 8001abc:	b29b      	uxth	r3, r3
 8001abe:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8001ac2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8001ac6:	833b      	strh	r3, [r7, #24]
 8001ac8:	8b3b      	ldrh	r3, [r7, #24]
 8001aca:	f483 5300 	eor.w	r3, r3, #8192	; 0x2000
 8001ace:	833b      	strh	r3, [r7, #24]
 8001ad0:	68fb      	ldr	r3, [r7, #12]
 8001ad2:	681b      	ldr	r3, [r3, #0]
 8001ad4:	461a      	mov	r2, r3
 8001ad6:	68bb      	ldr	r3, [r7, #8]
 8001ad8:	781b      	ldrb	r3, [r3, #0]
 8001ada:	009b      	lsls	r3, r3, #2
 8001adc:	441a      	add	r2, r3
 8001ade:	8b3b      	ldrh	r3, [r7, #24]
 8001ae0:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8001ae4:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 8001ae8:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001aec:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001af0:	b29b      	uxth	r3, r3
 8001af2:	8013      	strh	r3, [r2, #0]
 8001af4:	88fb      	ldrh	r3, [r7, #6]
 8001af6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001afa:	2b00      	cmp	r3, #0
 8001afc:	d01f      	beq.n	8001b3e <HAL_PCD_EP_DB_Receive+0xfa>
 8001afe:	68fb      	ldr	r3, [r7, #12]
 8001b00:	681b      	ldr	r3, [r3, #0]
 8001b02:	461a      	mov	r2, r3
 8001b04:	68bb      	ldr	r3, [r7, #8]
 8001b06:	781b      	ldrb	r3, [r3, #0]
 8001b08:	009b      	lsls	r3, r3, #2
 8001b0a:	4413      	add	r3, r2
 8001b0c:	881b      	ldrh	r3, [r3, #0]
 8001b0e:	b29b      	uxth	r3, r3
 8001b10:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8001b14:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8001b18:	82fb      	strh	r3, [r7, #22]
 8001b1a:	68fb      	ldr	r3, [r7, #12]
 8001b1c:	681b      	ldr	r3, [r3, #0]
 8001b1e:	461a      	mov	r2, r3
 8001b20:	68bb      	ldr	r3, [r7, #8]
 8001b22:	781b      	ldrb	r3, [r3, #0]
 8001b24:	009b      	lsls	r3, r3, #2
 8001b26:	441a      	add	r2, r3
 8001b28:	8afb      	ldrh	r3, [r7, #22]
 8001b2a:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8001b2e:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 8001b32:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001b36:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8001b3a:	b29b      	uxth	r3, r3
 8001b3c:	8013      	strh	r3, [r2, #0]
 8001b3e:	8b7b      	ldrh	r3, [r7, #26]
 8001b40:	2b00      	cmp	r3, #0
 8001b42:	f000 8087 	beq.w	8001c54 <HAL_PCD_EP_DB_Receive+0x210>
 8001b46:	68fb      	ldr	r3, [r7, #12]
 8001b48:	6818      	ldr	r0, [r3, #0]
 8001b4a:	68bb      	ldr	r3, [r7, #8]
 8001b4c:	6959      	ldr	r1, [r3, #20]
 8001b4e:	68bb      	ldr	r3, [r7, #8]
 8001b50:	891a      	ldrh	r2, [r3, #8]
 8001b52:	8b7b      	ldrh	r3, [r7, #26]
 8001b54:	f003 feb3 	bl	80058be <USB_ReadPMA>
 8001b58:	e07c      	b.n	8001c54 <HAL_PCD_EP_DB_Receive+0x210>
 8001b5a:	68fb      	ldr	r3, [r7, #12]
 8001b5c:	681b      	ldr	r3, [r3, #0]
 8001b5e:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8001b62:	b29b      	uxth	r3, r3
 8001b64:	461a      	mov	r2, r3
 8001b66:	68bb      	ldr	r3, [r7, #8]
 8001b68:	781b      	ldrb	r3, [r3, #0]
 8001b6a:	00db      	lsls	r3, r3, #3
 8001b6c:	4413      	add	r3, r2
 8001b6e:	3306      	adds	r3, #6
 8001b70:	005b      	lsls	r3, r3, #1
 8001b72:	68fa      	ldr	r2, [r7, #12]
 8001b74:	6812      	ldr	r2, [r2, #0]
 8001b76:	4413      	add	r3, r2
 8001b78:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001b7c:	881b      	ldrh	r3, [r3, #0]
 8001b7e:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8001b82:	837b      	strh	r3, [r7, #26]
 8001b84:	68bb      	ldr	r3, [r7, #8]
 8001b86:	699a      	ldr	r2, [r3, #24]
 8001b88:	8b7b      	ldrh	r3, [r7, #26]
 8001b8a:	429a      	cmp	r2, r3
 8001b8c:	d306      	bcc.n	8001b9c <HAL_PCD_EP_DB_Receive+0x158>
 8001b8e:	68bb      	ldr	r3, [r7, #8]
 8001b90:	699a      	ldr	r2, [r3, #24]
 8001b92:	8b7b      	ldrh	r3, [r7, #26]
 8001b94:	1ad2      	subs	r2, r2, r3
 8001b96:	68bb      	ldr	r3, [r7, #8]
 8001b98:	619a      	str	r2, [r3, #24]
 8001b9a:	e002      	b.n	8001ba2 <HAL_PCD_EP_DB_Receive+0x15e>
 8001b9c:	68bb      	ldr	r3, [r7, #8]
 8001b9e:	2200      	movs	r2, #0
 8001ba0:	619a      	str	r2, [r3, #24]
 8001ba2:	68bb      	ldr	r3, [r7, #8]
 8001ba4:	699b      	ldr	r3, [r3, #24]
 8001ba6:	2b00      	cmp	r3, #0
 8001ba8:	d123      	bne.n	8001bf2 <HAL_PCD_EP_DB_Receive+0x1ae>
 8001baa:	68fb      	ldr	r3, [r7, #12]
 8001bac:	681b      	ldr	r3, [r3, #0]
 8001bae:	461a      	mov	r2, r3
 8001bb0:	68bb      	ldr	r3, [r7, #8]
 8001bb2:	781b      	ldrb	r3, [r3, #0]
 8001bb4:	009b      	lsls	r3, r3, #2
 8001bb6:	4413      	add	r3, r2
 8001bb8:	881b      	ldrh	r3, [r3, #0]
 8001bba:	b29b      	uxth	r3, r3
 8001bbc:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8001bc0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8001bc4:	83fb      	strh	r3, [r7, #30]
 8001bc6:	8bfb      	ldrh	r3, [r7, #30]
 8001bc8:	f483 5300 	eor.w	r3, r3, #8192	; 0x2000
 8001bcc:	83fb      	strh	r3, [r7, #30]
 8001bce:	68fb      	ldr	r3, [r7, #12]
 8001bd0:	681b      	ldr	r3, [r3, #0]
 8001bd2:	461a      	mov	r2, r3
 8001bd4:	68bb      	ldr	r3, [r7, #8]
 8001bd6:	781b      	ldrb	r3, [r3, #0]
 8001bd8:	009b      	lsls	r3, r3, #2
 8001bda:	441a      	add	r2, r3
 8001bdc:	8bfb      	ldrh	r3, [r7, #30]
 8001bde:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8001be2:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 8001be6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001bea:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001bee:	b29b      	uxth	r3, r3
 8001bf0:	8013      	strh	r3, [r2, #0]
 8001bf2:	88fb      	ldrh	r3, [r7, #6]
 8001bf4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001bf8:	2b00      	cmp	r3, #0
 8001bfa:	d11f      	bne.n	8001c3c <HAL_PCD_EP_DB_Receive+0x1f8>
 8001bfc:	68fb      	ldr	r3, [r7, #12]
 8001bfe:	681b      	ldr	r3, [r3, #0]
 8001c00:	461a      	mov	r2, r3
 8001c02:	68bb      	ldr	r3, [r7, #8]
 8001c04:	781b      	ldrb	r3, [r3, #0]
 8001c06:	009b      	lsls	r3, r3, #2
 8001c08:	4413      	add	r3, r2
 8001c0a:	881b      	ldrh	r3, [r3, #0]
 8001c0c:	b29b      	uxth	r3, r3
 8001c0e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8001c12:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8001c16:	83bb      	strh	r3, [r7, #28]
 8001c18:	68fb      	ldr	r3, [r7, #12]
 8001c1a:	681b      	ldr	r3, [r3, #0]
 8001c1c:	461a      	mov	r2, r3
 8001c1e:	68bb      	ldr	r3, [r7, #8]
 8001c20:	781b      	ldrb	r3, [r3, #0]
 8001c22:	009b      	lsls	r3, r3, #2
 8001c24:	441a      	add	r2, r3
 8001c26:	8bbb      	ldrh	r3, [r7, #28]
 8001c28:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8001c2c:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 8001c30:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001c34:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8001c38:	b29b      	uxth	r3, r3
 8001c3a:	8013      	strh	r3, [r2, #0]
 8001c3c:	8b7b      	ldrh	r3, [r7, #26]
 8001c3e:	2b00      	cmp	r3, #0
 8001c40:	d008      	beq.n	8001c54 <HAL_PCD_EP_DB_Receive+0x210>
 8001c42:	68fb      	ldr	r3, [r7, #12]
 8001c44:	6818      	ldr	r0, [r3, #0]
 8001c46:	68bb      	ldr	r3, [r7, #8]
 8001c48:	6959      	ldr	r1, [r3, #20]
 8001c4a:	68bb      	ldr	r3, [r7, #8]
 8001c4c:	895a      	ldrh	r2, [r3, #10]
 8001c4e:	8b7b      	ldrh	r3, [r7, #26]
 8001c50:	f003 fe35 	bl	80058be <USB_ReadPMA>
 8001c54:	8b7b      	ldrh	r3, [r7, #26]
 8001c56:	4618      	mov	r0, r3
 8001c58:	3720      	adds	r7, #32
 8001c5a:	46bd      	mov	sp, r7
 8001c5c:	bd80      	pop	{r7, pc}

08001c5e <HAL_PCD_EP_DB_Transmit>:
 8001c5e:	b580      	push	{r7, lr}
 8001c60:	b0a2      	sub	sp, #136	; 0x88
 8001c62:	af00      	add	r7, sp, #0
 8001c64:	60f8      	str	r0, [r7, #12]
 8001c66:	60b9      	str	r1, [r7, #8]
 8001c68:	4613      	mov	r3, r2
 8001c6a:	80fb      	strh	r3, [r7, #6]
 8001c6c:	88fb      	ldrh	r3, [r7, #6]
 8001c6e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001c72:	2b00      	cmp	r3, #0
 8001c74:	f000 81c7 	beq.w	8002006 <HAL_PCD_EP_DB_Transmit+0x3a8>
 8001c78:	68fb      	ldr	r3, [r7, #12]
 8001c7a:	681b      	ldr	r3, [r3, #0]
 8001c7c:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8001c80:	b29b      	uxth	r3, r3
 8001c82:	461a      	mov	r2, r3
 8001c84:	68bb      	ldr	r3, [r7, #8]
 8001c86:	781b      	ldrb	r3, [r3, #0]
 8001c88:	00db      	lsls	r3, r3, #3
 8001c8a:	4413      	add	r3, r2
 8001c8c:	3302      	adds	r3, #2
 8001c8e:	005b      	lsls	r3, r3, #1
 8001c90:	68fa      	ldr	r2, [r7, #12]
 8001c92:	6812      	ldr	r2, [r2, #0]
 8001c94:	4413      	add	r3, r2
 8001c96:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001c9a:	881b      	ldrh	r3, [r3, #0]
 8001c9c:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8001ca0:	f8a7 304e 	strh.w	r3, [r7, #78]	; 0x4e
 8001ca4:	68bb      	ldr	r3, [r7, #8]
 8001ca6:	699a      	ldr	r2, [r3, #24]
 8001ca8:	f8b7 304e 	ldrh.w	r3, [r7, #78]	; 0x4e
 8001cac:	429a      	cmp	r2, r3
 8001cae:	d907      	bls.n	8001cc0 <HAL_PCD_EP_DB_Transmit+0x62>
 8001cb0:	68bb      	ldr	r3, [r7, #8]
 8001cb2:	699a      	ldr	r2, [r3, #24]
 8001cb4:	f8b7 304e 	ldrh.w	r3, [r7, #78]	; 0x4e
 8001cb8:	1ad2      	subs	r2, r2, r3
 8001cba:	68bb      	ldr	r3, [r7, #8]
 8001cbc:	619a      	str	r2, [r3, #24]
 8001cbe:	e002      	b.n	8001cc6 <HAL_PCD_EP_DB_Transmit+0x68>
 8001cc0:	68bb      	ldr	r3, [r7, #8]
 8001cc2:	2200      	movs	r2, #0
 8001cc4:	619a      	str	r2, [r3, #24]
 8001cc6:	68bb      	ldr	r3, [r7, #8]
 8001cc8:	699b      	ldr	r3, [r3, #24]
 8001cca:	2b00      	cmp	r3, #0
 8001ccc:	f040 80b9 	bne.w	8001e42 <HAL_PCD_EP_DB_Transmit+0x1e4>
 8001cd0:	68bb      	ldr	r3, [r7, #8]
 8001cd2:	785b      	ldrb	r3, [r3, #1]
 8001cd4:	2b00      	cmp	r3, #0
 8001cd6:	d126      	bne.n	8001d26 <HAL_PCD_EP_DB_Transmit+0xc8>
 8001cd8:	68fb      	ldr	r3, [r7, #12]
 8001cda:	681b      	ldr	r3, [r3, #0]
 8001cdc:	62bb      	str	r3, [r7, #40]	; 0x28
 8001cde:	68fb      	ldr	r3, [r7, #12]
 8001ce0:	681b      	ldr	r3, [r3, #0]
 8001ce2:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8001ce6:	b29b      	uxth	r3, r3
 8001ce8:	461a      	mov	r2, r3
 8001cea:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001cec:	4413      	add	r3, r2
 8001cee:	62bb      	str	r3, [r7, #40]	; 0x28
 8001cf0:	68bb      	ldr	r3, [r7, #8]
 8001cf2:	781b      	ldrb	r3, [r3, #0]
 8001cf4:	011a      	lsls	r2, r3, #4
 8001cf6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001cf8:	4413      	add	r3, r2
 8001cfa:	f203 4304 	addw	r3, r3, #1028	; 0x404
 8001cfe:	627b      	str	r3, [r7, #36]	; 0x24
 8001d00:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001d02:	881b      	ldrh	r3, [r3, #0]
 8001d04:	b29b      	uxth	r3, r3
 8001d06:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 8001d0a:	b29a      	uxth	r2, r3
 8001d0c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001d0e:	801a      	strh	r2, [r3, #0]
 8001d10:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001d12:	881b      	ldrh	r3, [r3, #0]
 8001d14:	b29b      	uxth	r3, r3
 8001d16:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8001d1a:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8001d1e:	b29a      	uxth	r2, r3
 8001d20:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001d22:	801a      	strh	r2, [r3, #0]
 8001d24:	e01a      	b.n	8001d5c <HAL_PCD_EP_DB_Transmit+0xfe>
 8001d26:	68bb      	ldr	r3, [r7, #8]
 8001d28:	785b      	ldrb	r3, [r3, #1]
 8001d2a:	2b01      	cmp	r3, #1
 8001d2c:	d116      	bne.n	8001d5c <HAL_PCD_EP_DB_Transmit+0xfe>
 8001d2e:	68fb      	ldr	r3, [r7, #12]
 8001d30:	681b      	ldr	r3, [r3, #0]
 8001d32:	633b      	str	r3, [r7, #48]	; 0x30
 8001d34:	68fb      	ldr	r3, [r7, #12]
 8001d36:	681b      	ldr	r3, [r3, #0]
 8001d38:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8001d3c:	b29b      	uxth	r3, r3
 8001d3e:	461a      	mov	r2, r3
 8001d40:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8001d42:	4413      	add	r3, r2
 8001d44:	633b      	str	r3, [r7, #48]	; 0x30
 8001d46:	68bb      	ldr	r3, [r7, #8]
 8001d48:	781b      	ldrb	r3, [r3, #0]
 8001d4a:	011a      	lsls	r2, r3, #4
 8001d4c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8001d4e:	4413      	add	r3, r2
 8001d50:	f203 4304 	addw	r3, r3, #1028	; 0x404
 8001d54:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001d56:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001d58:	2200      	movs	r2, #0
 8001d5a:	801a      	strh	r2, [r3, #0]
 8001d5c:	68fb      	ldr	r3, [r7, #12]
 8001d5e:	681b      	ldr	r3, [r3, #0]
 8001d60:	623b      	str	r3, [r7, #32]
 8001d62:	68bb      	ldr	r3, [r7, #8]
 8001d64:	785b      	ldrb	r3, [r3, #1]
 8001d66:	2b00      	cmp	r3, #0
 8001d68:	d126      	bne.n	8001db8 <HAL_PCD_EP_DB_Transmit+0x15a>
 8001d6a:	68fb      	ldr	r3, [r7, #12]
 8001d6c:	681b      	ldr	r3, [r3, #0]
 8001d6e:	61bb      	str	r3, [r7, #24]
 8001d70:	68fb      	ldr	r3, [r7, #12]
 8001d72:	681b      	ldr	r3, [r3, #0]
 8001d74:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8001d78:	b29b      	uxth	r3, r3
 8001d7a:	461a      	mov	r2, r3
 8001d7c:	69bb      	ldr	r3, [r7, #24]
 8001d7e:	4413      	add	r3, r2
 8001d80:	61bb      	str	r3, [r7, #24]
 8001d82:	68bb      	ldr	r3, [r7, #8]
 8001d84:	781b      	ldrb	r3, [r3, #0]
 8001d86:	011a      	lsls	r2, r3, #4
 8001d88:	69bb      	ldr	r3, [r7, #24]
 8001d8a:	4413      	add	r3, r2
 8001d8c:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 8001d90:	617b      	str	r3, [r7, #20]
 8001d92:	697b      	ldr	r3, [r7, #20]
 8001d94:	881b      	ldrh	r3, [r3, #0]
 8001d96:	b29b      	uxth	r3, r3
 8001d98:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 8001d9c:	b29a      	uxth	r2, r3
 8001d9e:	697b      	ldr	r3, [r7, #20]
 8001da0:	801a      	strh	r2, [r3, #0]
 8001da2:	697b      	ldr	r3, [r7, #20]
 8001da4:	881b      	ldrh	r3, [r3, #0]
 8001da6:	b29b      	uxth	r3, r3
 8001da8:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8001dac:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8001db0:	b29a      	uxth	r2, r3
 8001db2:	697b      	ldr	r3, [r7, #20]
 8001db4:	801a      	strh	r2, [r3, #0]
 8001db6:	e017      	b.n	8001de8 <HAL_PCD_EP_DB_Transmit+0x18a>
 8001db8:	68bb      	ldr	r3, [r7, #8]
 8001dba:	785b      	ldrb	r3, [r3, #1]
 8001dbc:	2b01      	cmp	r3, #1
 8001dbe:	d113      	bne.n	8001de8 <HAL_PCD_EP_DB_Transmit+0x18a>
 8001dc0:	68fb      	ldr	r3, [r7, #12]
 8001dc2:	681b      	ldr	r3, [r3, #0]
 8001dc4:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8001dc8:	b29b      	uxth	r3, r3
 8001dca:	461a      	mov	r2, r3
 8001dcc:	6a3b      	ldr	r3, [r7, #32]
 8001dce:	4413      	add	r3, r2
 8001dd0:	623b      	str	r3, [r7, #32]
 8001dd2:	68bb      	ldr	r3, [r7, #8]
 8001dd4:	781b      	ldrb	r3, [r3, #0]
 8001dd6:	011a      	lsls	r2, r3, #4
 8001dd8:	6a3b      	ldr	r3, [r7, #32]
 8001dda:	4413      	add	r3, r2
 8001ddc:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 8001de0:	61fb      	str	r3, [r7, #28]
 8001de2:	69fb      	ldr	r3, [r7, #28]
 8001de4:	2200      	movs	r2, #0
 8001de6:	801a      	strh	r2, [r3, #0]
 8001de8:	68bb      	ldr	r3, [r7, #8]
 8001dea:	781b      	ldrb	r3, [r3, #0]
 8001dec:	4619      	mov	r1, r3
 8001dee:	68f8      	ldr	r0, [r7, #12]
 8001df0:	f005 fa59 	bl	80072a6 <HAL_PCD_DataInStageCallback>
 8001df4:	88fb      	ldrh	r3, [r7, #6]
 8001df6:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001dfa:	2b00      	cmp	r3, #0
 8001dfc:	f000 82d4 	beq.w	80023a8 <HAL_PCD_EP_DB_Transmit+0x74a>
 8001e00:	68fb      	ldr	r3, [r7, #12]
 8001e02:	681b      	ldr	r3, [r3, #0]
 8001e04:	461a      	mov	r2, r3
 8001e06:	68bb      	ldr	r3, [r7, #8]
 8001e08:	781b      	ldrb	r3, [r3, #0]
 8001e0a:	009b      	lsls	r3, r3, #2
 8001e0c:	4413      	add	r3, r2
 8001e0e:	881b      	ldrh	r3, [r3, #0]
 8001e10:	b29b      	uxth	r3, r3
 8001e12:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8001e16:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8001e1a:	827b      	strh	r3, [r7, #18]
 8001e1c:	68fb      	ldr	r3, [r7, #12]
 8001e1e:	681b      	ldr	r3, [r3, #0]
 8001e20:	461a      	mov	r2, r3
 8001e22:	68bb      	ldr	r3, [r7, #8]
 8001e24:	781b      	ldrb	r3, [r3, #0]
 8001e26:	009b      	lsls	r3, r3, #2
 8001e28:	441a      	add	r2, r3
 8001e2a:	8a7b      	ldrh	r3, [r7, #18]
 8001e2c:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8001e30:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 8001e34:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8001e38:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001e3c:	b29b      	uxth	r3, r3
 8001e3e:	8013      	strh	r3, [r2, #0]
 8001e40:	e2b2      	b.n	80023a8 <HAL_PCD_EP_DB_Transmit+0x74a>
 8001e42:	88fb      	ldrh	r3, [r7, #6]
 8001e44:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001e48:	2b00      	cmp	r3, #0
 8001e4a:	d021      	beq.n	8001e90 <HAL_PCD_EP_DB_Transmit+0x232>
 8001e4c:	68fb      	ldr	r3, [r7, #12]
 8001e4e:	681b      	ldr	r3, [r3, #0]
 8001e50:	461a      	mov	r2, r3
 8001e52:	68bb      	ldr	r3, [r7, #8]
 8001e54:	781b      	ldrb	r3, [r3, #0]
 8001e56:	009b      	lsls	r3, r3, #2
 8001e58:	4413      	add	r3, r2
 8001e5a:	881b      	ldrh	r3, [r3, #0]
 8001e5c:	b29b      	uxth	r3, r3
 8001e5e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8001e62:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8001e66:	f8a7 3044 	strh.w	r3, [r7, #68]	; 0x44
 8001e6a:	68fb      	ldr	r3, [r7, #12]
 8001e6c:	681b      	ldr	r3, [r3, #0]
 8001e6e:	461a      	mov	r2, r3
 8001e70:	68bb      	ldr	r3, [r7, #8]
 8001e72:	781b      	ldrb	r3, [r3, #0]
 8001e74:	009b      	lsls	r3, r3, #2
 8001e76:	441a      	add	r2, r3
 8001e78:	f8b7 3044 	ldrh.w	r3, [r7, #68]	; 0x44
 8001e7c:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8001e80:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 8001e84:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8001e88:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001e8c:	b29b      	uxth	r3, r3
 8001e8e:	8013      	strh	r3, [r2, #0]
 8001e90:	68bb      	ldr	r3, [r7, #8]
 8001e92:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 8001e96:	2b01      	cmp	r3, #1
 8001e98:	f040 8286 	bne.w	80023a8 <HAL_PCD_EP_DB_Transmit+0x74a>
 8001e9c:	68bb      	ldr	r3, [r7, #8]
 8001e9e:	695a      	ldr	r2, [r3, #20]
 8001ea0:	f8b7 304e 	ldrh.w	r3, [r7, #78]	; 0x4e
 8001ea4:	441a      	add	r2, r3
 8001ea6:	68bb      	ldr	r3, [r7, #8]
 8001ea8:	615a      	str	r2, [r3, #20]
 8001eaa:	68bb      	ldr	r3, [r7, #8]
 8001eac:	69da      	ldr	r2, [r3, #28]
 8001eae:	f8b7 304e 	ldrh.w	r3, [r7, #78]	; 0x4e
 8001eb2:	441a      	add	r2, r3
 8001eb4:	68bb      	ldr	r3, [r7, #8]
 8001eb6:	61da      	str	r2, [r3, #28]
 8001eb8:	68bb      	ldr	r3, [r7, #8]
 8001eba:	6a1a      	ldr	r2, [r3, #32]
 8001ebc:	68bb      	ldr	r3, [r7, #8]
 8001ebe:	691b      	ldr	r3, [r3, #16]
 8001ec0:	429a      	cmp	r2, r3
 8001ec2:	d309      	bcc.n	8001ed8 <HAL_PCD_EP_DB_Transmit+0x27a>
 8001ec4:	68bb      	ldr	r3, [r7, #8]
 8001ec6:	691b      	ldr	r3, [r3, #16]
 8001ec8:	653b      	str	r3, [r7, #80]	; 0x50
 8001eca:	68bb      	ldr	r3, [r7, #8]
 8001ecc:	6a1a      	ldr	r2, [r3, #32]
 8001ece:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8001ed0:	1ad2      	subs	r2, r2, r3
 8001ed2:	68bb      	ldr	r3, [r7, #8]
 8001ed4:	621a      	str	r2, [r3, #32]
 8001ed6:	e015      	b.n	8001f04 <HAL_PCD_EP_DB_Transmit+0x2a6>
 8001ed8:	68bb      	ldr	r3, [r7, #8]
 8001eda:	6a1b      	ldr	r3, [r3, #32]
 8001edc:	2b00      	cmp	r3, #0
 8001ede:	d107      	bne.n	8001ef0 <HAL_PCD_EP_DB_Transmit+0x292>
 8001ee0:	f8b7 304e 	ldrh.w	r3, [r7, #78]	; 0x4e
 8001ee4:	653b      	str	r3, [r7, #80]	; 0x50
 8001ee6:	68bb      	ldr	r3, [r7, #8]
 8001ee8:	2200      	movs	r2, #0
 8001eea:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8001eee:	e009      	b.n	8001f04 <HAL_PCD_EP_DB_Transmit+0x2a6>
 8001ef0:	68bb      	ldr	r3, [r7, #8]
 8001ef2:	2200      	movs	r2, #0
 8001ef4:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8001ef8:	68bb      	ldr	r3, [r7, #8]
 8001efa:	6a1b      	ldr	r3, [r3, #32]
 8001efc:	653b      	str	r3, [r7, #80]	; 0x50
 8001efe:	68bb      	ldr	r3, [r7, #8]
 8001f00:	2200      	movs	r2, #0
 8001f02:	621a      	str	r2, [r3, #32]
 8001f04:	68bb      	ldr	r3, [r7, #8]
 8001f06:	785b      	ldrb	r3, [r3, #1]
 8001f08:	2b00      	cmp	r3, #0
 8001f0a:	d155      	bne.n	8001fb8 <HAL_PCD_EP_DB_Transmit+0x35a>
 8001f0c:	68fb      	ldr	r3, [r7, #12]
 8001f0e:	681b      	ldr	r3, [r3, #0]
 8001f10:	63bb      	str	r3, [r7, #56]	; 0x38
 8001f12:	68fb      	ldr	r3, [r7, #12]
 8001f14:	681b      	ldr	r3, [r3, #0]
 8001f16:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8001f1a:	b29b      	uxth	r3, r3
 8001f1c:	461a      	mov	r2, r3
 8001f1e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8001f20:	4413      	add	r3, r2
 8001f22:	63bb      	str	r3, [r7, #56]	; 0x38
 8001f24:	68bb      	ldr	r3, [r7, #8]
 8001f26:	781b      	ldrb	r3, [r3, #0]
 8001f28:	011a      	lsls	r2, r3, #4
 8001f2a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8001f2c:	4413      	add	r3, r2
 8001f2e:	f203 4304 	addw	r3, r3, #1028	; 0x404
 8001f32:	637b      	str	r3, [r7, #52]	; 0x34
 8001f34:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8001f36:	2b00      	cmp	r3, #0
 8001f38:	d112      	bne.n	8001f60 <HAL_PCD_EP_DB_Transmit+0x302>
 8001f3a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001f3c:	881b      	ldrh	r3, [r3, #0]
 8001f3e:	b29b      	uxth	r3, r3
 8001f40:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 8001f44:	b29a      	uxth	r2, r3
 8001f46:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001f48:	801a      	strh	r2, [r3, #0]
 8001f4a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001f4c:	881b      	ldrh	r3, [r3, #0]
 8001f4e:	b29b      	uxth	r3, r3
 8001f50:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8001f54:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8001f58:	b29a      	uxth	r2, r3
 8001f5a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001f5c:	801a      	strh	r2, [r3, #0]
 8001f5e:	e047      	b.n	8001ff0 <HAL_PCD_EP_DB_Transmit+0x392>
 8001f60:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8001f62:	2b3e      	cmp	r3, #62	; 0x3e
 8001f64:	d811      	bhi.n	8001f8a <HAL_PCD_EP_DB_Transmit+0x32c>
 8001f66:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8001f68:	085b      	lsrs	r3, r3, #1
 8001f6a:	64bb      	str	r3, [r7, #72]	; 0x48
 8001f6c:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8001f6e:	f003 0301 	and.w	r3, r3, #1
 8001f72:	2b00      	cmp	r3, #0
 8001f74:	d002      	beq.n	8001f7c <HAL_PCD_EP_DB_Transmit+0x31e>
 8001f76:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8001f78:	3301      	adds	r3, #1
 8001f7a:	64bb      	str	r3, [r7, #72]	; 0x48
 8001f7c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8001f7e:	b29b      	uxth	r3, r3
 8001f80:	029b      	lsls	r3, r3, #10
 8001f82:	b29a      	uxth	r2, r3
 8001f84:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001f86:	801a      	strh	r2, [r3, #0]
 8001f88:	e032      	b.n	8001ff0 <HAL_PCD_EP_DB_Transmit+0x392>
 8001f8a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8001f8c:	095b      	lsrs	r3, r3, #5
 8001f8e:	64bb      	str	r3, [r7, #72]	; 0x48
 8001f90:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8001f92:	f003 031f 	and.w	r3, r3, #31
 8001f96:	2b00      	cmp	r3, #0
 8001f98:	d102      	bne.n	8001fa0 <HAL_PCD_EP_DB_Transmit+0x342>
 8001f9a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8001f9c:	3b01      	subs	r3, #1
 8001f9e:	64bb      	str	r3, [r7, #72]	; 0x48
 8001fa0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8001fa2:	b29b      	uxth	r3, r3
 8001fa4:	029b      	lsls	r3, r3, #10
 8001fa6:	b29b      	uxth	r3, r3
 8001fa8:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8001fac:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8001fb0:	b29a      	uxth	r2, r3
 8001fb2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001fb4:	801a      	strh	r2, [r3, #0]
 8001fb6:	e01b      	b.n	8001ff0 <HAL_PCD_EP_DB_Transmit+0x392>
 8001fb8:	68bb      	ldr	r3, [r7, #8]
 8001fba:	785b      	ldrb	r3, [r3, #1]
 8001fbc:	2b01      	cmp	r3, #1
 8001fbe:	d117      	bne.n	8001ff0 <HAL_PCD_EP_DB_Transmit+0x392>
 8001fc0:	68fb      	ldr	r3, [r7, #12]
 8001fc2:	681b      	ldr	r3, [r3, #0]
 8001fc4:	643b      	str	r3, [r7, #64]	; 0x40
 8001fc6:	68fb      	ldr	r3, [r7, #12]
 8001fc8:	681b      	ldr	r3, [r3, #0]
 8001fca:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8001fce:	b29b      	uxth	r3, r3
 8001fd0:	461a      	mov	r2, r3
 8001fd2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8001fd4:	4413      	add	r3, r2
 8001fd6:	643b      	str	r3, [r7, #64]	; 0x40
 8001fd8:	68bb      	ldr	r3, [r7, #8]
 8001fda:	781b      	ldrb	r3, [r3, #0]
 8001fdc:	011a      	lsls	r2, r3, #4
 8001fde:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8001fe0:	4413      	add	r3, r2
 8001fe2:	f203 4304 	addw	r3, r3, #1028	; 0x404
 8001fe6:	63fb      	str	r3, [r7, #60]	; 0x3c
 8001fe8:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8001fea:	b29a      	uxth	r2, r3
 8001fec:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8001fee:	801a      	strh	r2, [r3, #0]
 8001ff0:	68fb      	ldr	r3, [r7, #12]
 8001ff2:	6818      	ldr	r0, [r3, #0]
 8001ff4:	68bb      	ldr	r3, [r7, #8]
 8001ff6:	6959      	ldr	r1, [r3, #20]
 8001ff8:	68bb      	ldr	r3, [r7, #8]
 8001ffa:	891a      	ldrh	r2, [r3, #8]
 8001ffc:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8001ffe:	b29b      	uxth	r3, r3
 8002000:	f003 fc18 	bl	8005834 <USB_WritePMA>
 8002004:	e1d0      	b.n	80023a8 <HAL_PCD_EP_DB_Transmit+0x74a>
 8002006:	68fb      	ldr	r3, [r7, #12]
 8002008:	681b      	ldr	r3, [r3, #0]
 800200a:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 800200e:	b29b      	uxth	r3, r3
 8002010:	461a      	mov	r2, r3
 8002012:	68bb      	ldr	r3, [r7, #8]
 8002014:	781b      	ldrb	r3, [r3, #0]
 8002016:	00db      	lsls	r3, r3, #3
 8002018:	4413      	add	r3, r2
 800201a:	3306      	adds	r3, #6
 800201c:	005b      	lsls	r3, r3, #1
 800201e:	68fa      	ldr	r2, [r7, #12]
 8002020:	6812      	ldr	r2, [r2, #0]
 8002022:	4413      	add	r3, r2
 8002024:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8002028:	881b      	ldrh	r3, [r3, #0]
 800202a:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800202e:	f8a7 304e 	strh.w	r3, [r7, #78]	; 0x4e
 8002032:	68bb      	ldr	r3, [r7, #8]
 8002034:	699a      	ldr	r2, [r3, #24]
 8002036:	f8b7 304e 	ldrh.w	r3, [r7, #78]	; 0x4e
 800203a:	429a      	cmp	r2, r3
 800203c:	d307      	bcc.n	800204e <HAL_PCD_EP_DB_Transmit+0x3f0>
 800203e:	68bb      	ldr	r3, [r7, #8]
 8002040:	699a      	ldr	r2, [r3, #24]
 8002042:	f8b7 304e 	ldrh.w	r3, [r7, #78]	; 0x4e
 8002046:	1ad2      	subs	r2, r2, r3
 8002048:	68bb      	ldr	r3, [r7, #8]
 800204a:	619a      	str	r2, [r3, #24]
 800204c:	e002      	b.n	8002054 <HAL_PCD_EP_DB_Transmit+0x3f6>
 800204e:	68bb      	ldr	r3, [r7, #8]
 8002050:	2200      	movs	r2, #0
 8002052:	619a      	str	r2, [r3, #24]
 8002054:	68bb      	ldr	r3, [r7, #8]
 8002056:	699b      	ldr	r3, [r3, #24]
 8002058:	2b00      	cmp	r3, #0
 800205a:	f040 80c4 	bne.w	80021e6 <HAL_PCD_EP_DB_Transmit+0x588>
 800205e:	68bb      	ldr	r3, [r7, #8]
 8002060:	785b      	ldrb	r3, [r3, #1]
 8002062:	2b00      	cmp	r3, #0
 8002064:	d126      	bne.n	80020b4 <HAL_PCD_EP_DB_Transmit+0x456>
 8002066:	68fb      	ldr	r3, [r7, #12]
 8002068:	681b      	ldr	r3, [r3, #0]
 800206a:	66fb      	str	r3, [r7, #108]	; 0x6c
 800206c:	68fb      	ldr	r3, [r7, #12]
 800206e:	681b      	ldr	r3, [r3, #0]
 8002070:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8002074:	b29b      	uxth	r3, r3
 8002076:	461a      	mov	r2, r3
 8002078:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800207a:	4413      	add	r3, r2
 800207c:	66fb      	str	r3, [r7, #108]	; 0x6c
 800207e:	68bb      	ldr	r3, [r7, #8]
 8002080:	781b      	ldrb	r3, [r3, #0]
 8002082:	011a      	lsls	r2, r3, #4
 8002084:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8002086:	4413      	add	r3, r2
 8002088:	f203 4304 	addw	r3, r3, #1028	; 0x404
 800208c:	66bb      	str	r3, [r7, #104]	; 0x68
 800208e:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8002090:	881b      	ldrh	r3, [r3, #0]
 8002092:	b29b      	uxth	r3, r3
 8002094:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 8002098:	b29a      	uxth	r2, r3
 800209a:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800209c:	801a      	strh	r2, [r3, #0]
 800209e:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 80020a0:	881b      	ldrh	r3, [r3, #0]
 80020a2:	b29b      	uxth	r3, r3
 80020a4:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 80020a8:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 80020ac:	b29a      	uxth	r2, r3
 80020ae:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 80020b0:	801a      	strh	r2, [r3, #0]
 80020b2:	e01a      	b.n	80020ea <HAL_PCD_EP_DB_Transmit+0x48c>
 80020b4:	68bb      	ldr	r3, [r7, #8]
 80020b6:	785b      	ldrb	r3, [r3, #1]
 80020b8:	2b01      	cmp	r3, #1
 80020ba:	d116      	bne.n	80020ea <HAL_PCD_EP_DB_Transmit+0x48c>
 80020bc:	68fb      	ldr	r3, [r7, #12]
 80020be:	681b      	ldr	r3, [r3, #0]
 80020c0:	677b      	str	r3, [r7, #116]	; 0x74
 80020c2:	68fb      	ldr	r3, [r7, #12]
 80020c4:	681b      	ldr	r3, [r3, #0]
 80020c6:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 80020ca:	b29b      	uxth	r3, r3
 80020cc:	461a      	mov	r2, r3
 80020ce:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80020d0:	4413      	add	r3, r2
 80020d2:	677b      	str	r3, [r7, #116]	; 0x74
 80020d4:	68bb      	ldr	r3, [r7, #8]
 80020d6:	781b      	ldrb	r3, [r3, #0]
 80020d8:	011a      	lsls	r2, r3, #4
 80020da:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80020dc:	4413      	add	r3, r2
 80020de:	f203 4304 	addw	r3, r3, #1028	; 0x404
 80020e2:	673b      	str	r3, [r7, #112]	; 0x70
 80020e4:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80020e6:	2200      	movs	r2, #0
 80020e8:	801a      	strh	r2, [r3, #0]
 80020ea:	68fb      	ldr	r3, [r7, #12]
 80020ec:	681b      	ldr	r3, [r3, #0]
 80020ee:	67bb      	str	r3, [r7, #120]	; 0x78
 80020f0:	68bb      	ldr	r3, [r7, #8]
 80020f2:	785b      	ldrb	r3, [r3, #1]
 80020f4:	2b00      	cmp	r3, #0
 80020f6:	d12f      	bne.n	8002158 <HAL_PCD_EP_DB_Transmit+0x4fa>
 80020f8:	68fb      	ldr	r3, [r7, #12]
 80020fa:	681b      	ldr	r3, [r3, #0]
 80020fc:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8002100:	68fb      	ldr	r3, [r7, #12]
 8002102:	681b      	ldr	r3, [r3, #0]
 8002104:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8002108:	b29b      	uxth	r3, r3
 800210a:	461a      	mov	r2, r3
 800210c:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8002110:	4413      	add	r3, r2
 8002112:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8002116:	68bb      	ldr	r3, [r7, #8]
 8002118:	781b      	ldrb	r3, [r3, #0]
 800211a:	011a      	lsls	r2, r3, #4
 800211c:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8002120:	4413      	add	r3, r2
 8002122:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 8002126:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800212a:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800212e:	881b      	ldrh	r3, [r3, #0]
 8002130:	b29b      	uxth	r3, r3
 8002132:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 8002136:	b29a      	uxth	r2, r3
 8002138:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800213c:	801a      	strh	r2, [r3, #0]
 800213e:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8002142:	881b      	ldrh	r3, [r3, #0]
 8002144:	b29b      	uxth	r3, r3
 8002146:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 800214a:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800214e:	b29a      	uxth	r2, r3
 8002150:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8002154:	801a      	strh	r2, [r3, #0]
 8002156:	e017      	b.n	8002188 <HAL_PCD_EP_DB_Transmit+0x52a>
 8002158:	68bb      	ldr	r3, [r7, #8]
 800215a:	785b      	ldrb	r3, [r3, #1]
 800215c:	2b01      	cmp	r3, #1
 800215e:	d113      	bne.n	8002188 <HAL_PCD_EP_DB_Transmit+0x52a>
 8002160:	68fb      	ldr	r3, [r7, #12]
 8002162:	681b      	ldr	r3, [r3, #0]
 8002164:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8002168:	b29b      	uxth	r3, r3
 800216a:	461a      	mov	r2, r3
 800216c:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800216e:	4413      	add	r3, r2
 8002170:	67bb      	str	r3, [r7, #120]	; 0x78
 8002172:	68bb      	ldr	r3, [r7, #8]
 8002174:	781b      	ldrb	r3, [r3, #0]
 8002176:	011a      	lsls	r2, r3, #4
 8002178:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800217a:	4413      	add	r3, r2
 800217c:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 8002180:	67fb      	str	r3, [r7, #124]	; 0x7c
 8002182:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 8002184:	2200      	movs	r2, #0
 8002186:	801a      	strh	r2, [r3, #0]
 8002188:	68bb      	ldr	r3, [r7, #8]
 800218a:	781b      	ldrb	r3, [r3, #0]
 800218c:	4619      	mov	r1, r3
 800218e:	68f8      	ldr	r0, [r7, #12]
 8002190:	f005 f889 	bl	80072a6 <HAL_PCD_DataInStageCallback>
 8002194:	88fb      	ldrh	r3, [r7, #6]
 8002196:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800219a:	2b00      	cmp	r3, #0
 800219c:	f040 8104 	bne.w	80023a8 <HAL_PCD_EP_DB_Transmit+0x74a>
 80021a0:	68fb      	ldr	r3, [r7, #12]
 80021a2:	681b      	ldr	r3, [r3, #0]
 80021a4:	461a      	mov	r2, r3
 80021a6:	68bb      	ldr	r3, [r7, #8]
 80021a8:	781b      	ldrb	r3, [r3, #0]
 80021aa:	009b      	lsls	r3, r3, #2
 80021ac:	4413      	add	r3, r2
 80021ae:	881b      	ldrh	r3, [r3, #0]
 80021b0:	b29b      	uxth	r3, r3
 80021b2:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80021b6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80021ba:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46
 80021be:	68fb      	ldr	r3, [r7, #12]
 80021c0:	681b      	ldr	r3, [r3, #0]
 80021c2:	461a      	mov	r2, r3
 80021c4:	68bb      	ldr	r3, [r7, #8]
 80021c6:	781b      	ldrb	r3, [r3, #0]
 80021c8:	009b      	lsls	r3, r3, #2
 80021ca:	441a      	add	r2, r3
 80021cc:	f8b7 3046 	ldrh.w	r3, [r7, #70]	; 0x46
 80021d0:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 80021d4:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 80021d8:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80021dc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80021e0:	b29b      	uxth	r3, r3
 80021e2:	8013      	strh	r3, [r2, #0]
 80021e4:	e0e0      	b.n	80023a8 <HAL_PCD_EP_DB_Transmit+0x74a>
 80021e6:	88fb      	ldrh	r3, [r7, #6]
 80021e8:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80021ec:	2b00      	cmp	r3, #0
 80021ee:	d121      	bne.n	8002234 <HAL_PCD_EP_DB_Transmit+0x5d6>
 80021f0:	68fb      	ldr	r3, [r7, #12]
 80021f2:	681b      	ldr	r3, [r3, #0]
 80021f4:	461a      	mov	r2, r3
 80021f6:	68bb      	ldr	r3, [r7, #8]
 80021f8:	781b      	ldrb	r3, [r3, #0]
 80021fa:	009b      	lsls	r3, r3, #2
 80021fc:	4413      	add	r3, r2
 80021fe:	881b      	ldrh	r3, [r3, #0]
 8002200:	b29b      	uxth	r3, r3
 8002202:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8002206:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800220a:	f8a7 304c 	strh.w	r3, [r7, #76]	; 0x4c
 800220e:	68fb      	ldr	r3, [r7, #12]
 8002210:	681b      	ldr	r3, [r3, #0]
 8002212:	461a      	mov	r2, r3
 8002214:	68bb      	ldr	r3, [r7, #8]
 8002216:	781b      	ldrb	r3, [r3, #0]
 8002218:	009b      	lsls	r3, r3, #2
 800221a:	441a      	add	r2, r3
 800221c:	f8b7 304c 	ldrh.w	r3, [r7, #76]	; 0x4c
 8002220:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8002224:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 8002228:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800222c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002230:	b29b      	uxth	r3, r3
 8002232:	8013      	strh	r3, [r2, #0]
 8002234:	68bb      	ldr	r3, [r7, #8]
 8002236:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 800223a:	2b01      	cmp	r3, #1
 800223c:	f040 80b4 	bne.w	80023a8 <HAL_PCD_EP_DB_Transmit+0x74a>
 8002240:	68bb      	ldr	r3, [r7, #8]
 8002242:	695a      	ldr	r2, [r3, #20]
 8002244:	f8b7 304e 	ldrh.w	r3, [r7, #78]	; 0x4e
 8002248:	441a      	add	r2, r3
 800224a:	68bb      	ldr	r3, [r7, #8]
 800224c:	615a      	str	r2, [r3, #20]
 800224e:	68bb      	ldr	r3, [r7, #8]
 8002250:	69da      	ldr	r2, [r3, #28]
 8002252:	f8b7 304e 	ldrh.w	r3, [r7, #78]	; 0x4e
 8002256:	441a      	add	r2, r3
 8002258:	68bb      	ldr	r3, [r7, #8]
 800225a:	61da      	str	r2, [r3, #28]
 800225c:	68bb      	ldr	r3, [r7, #8]
 800225e:	6a1a      	ldr	r2, [r3, #32]
 8002260:	68bb      	ldr	r3, [r7, #8]
 8002262:	691b      	ldr	r3, [r3, #16]
 8002264:	429a      	cmp	r2, r3
 8002266:	d309      	bcc.n	800227c <HAL_PCD_EP_DB_Transmit+0x61e>
 8002268:	68bb      	ldr	r3, [r7, #8]
 800226a:	691b      	ldr	r3, [r3, #16]
 800226c:	653b      	str	r3, [r7, #80]	; 0x50
 800226e:	68bb      	ldr	r3, [r7, #8]
 8002270:	6a1a      	ldr	r2, [r3, #32]
 8002272:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8002274:	1ad2      	subs	r2, r2, r3
 8002276:	68bb      	ldr	r3, [r7, #8]
 8002278:	621a      	str	r2, [r3, #32]
 800227a:	e015      	b.n	80022a8 <HAL_PCD_EP_DB_Transmit+0x64a>
 800227c:	68bb      	ldr	r3, [r7, #8]
 800227e:	6a1b      	ldr	r3, [r3, #32]
 8002280:	2b00      	cmp	r3, #0
 8002282:	d107      	bne.n	8002294 <HAL_PCD_EP_DB_Transmit+0x636>
 8002284:	f8b7 304e 	ldrh.w	r3, [r7, #78]	; 0x4e
 8002288:	653b      	str	r3, [r7, #80]	; 0x50
 800228a:	68bb      	ldr	r3, [r7, #8]
 800228c:	2200      	movs	r2, #0
 800228e:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8002292:	e009      	b.n	80022a8 <HAL_PCD_EP_DB_Transmit+0x64a>
 8002294:	68bb      	ldr	r3, [r7, #8]
 8002296:	6a1b      	ldr	r3, [r3, #32]
 8002298:	653b      	str	r3, [r7, #80]	; 0x50
 800229a:	68bb      	ldr	r3, [r7, #8]
 800229c:	2200      	movs	r2, #0
 800229e:	621a      	str	r2, [r3, #32]
 80022a0:	68bb      	ldr	r3, [r7, #8]
 80022a2:	2200      	movs	r2, #0
 80022a4:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 80022a8:	68fb      	ldr	r3, [r7, #12]
 80022aa:	681b      	ldr	r3, [r3, #0]
 80022ac:	667b      	str	r3, [r7, #100]	; 0x64
 80022ae:	68bb      	ldr	r3, [r7, #8]
 80022b0:	785b      	ldrb	r3, [r3, #1]
 80022b2:	2b00      	cmp	r3, #0
 80022b4:	d155      	bne.n	8002362 <HAL_PCD_EP_DB_Transmit+0x704>
 80022b6:	68fb      	ldr	r3, [r7, #12]
 80022b8:	681b      	ldr	r3, [r3, #0]
 80022ba:	65fb      	str	r3, [r7, #92]	; 0x5c
 80022bc:	68fb      	ldr	r3, [r7, #12]
 80022be:	681b      	ldr	r3, [r3, #0]
 80022c0:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 80022c4:	b29b      	uxth	r3, r3
 80022c6:	461a      	mov	r2, r3
 80022c8:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80022ca:	4413      	add	r3, r2
 80022cc:	65fb      	str	r3, [r7, #92]	; 0x5c
 80022ce:	68bb      	ldr	r3, [r7, #8]
 80022d0:	781b      	ldrb	r3, [r3, #0]
 80022d2:	011a      	lsls	r2, r3, #4
 80022d4:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80022d6:	4413      	add	r3, r2
 80022d8:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 80022dc:	65bb      	str	r3, [r7, #88]	; 0x58
 80022de:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80022e0:	2b00      	cmp	r3, #0
 80022e2:	d112      	bne.n	800230a <HAL_PCD_EP_DB_Transmit+0x6ac>
 80022e4:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80022e6:	881b      	ldrh	r3, [r3, #0]
 80022e8:	b29b      	uxth	r3, r3
 80022ea:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 80022ee:	b29a      	uxth	r2, r3
 80022f0:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80022f2:	801a      	strh	r2, [r3, #0]
 80022f4:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80022f6:	881b      	ldrh	r3, [r3, #0]
 80022f8:	b29b      	uxth	r3, r3
 80022fa:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 80022fe:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8002302:	b29a      	uxth	r2, r3
 8002304:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8002306:	801a      	strh	r2, [r3, #0]
 8002308:	e044      	b.n	8002394 <HAL_PCD_EP_DB_Transmit+0x736>
 800230a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800230c:	2b3e      	cmp	r3, #62	; 0x3e
 800230e:	d811      	bhi.n	8002334 <HAL_PCD_EP_DB_Transmit+0x6d6>
 8002310:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8002312:	085b      	lsrs	r3, r3, #1
 8002314:	657b      	str	r3, [r7, #84]	; 0x54
 8002316:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8002318:	f003 0301 	and.w	r3, r3, #1
 800231c:	2b00      	cmp	r3, #0
 800231e:	d002      	beq.n	8002326 <HAL_PCD_EP_DB_Transmit+0x6c8>
 8002320:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002322:	3301      	adds	r3, #1
 8002324:	657b      	str	r3, [r7, #84]	; 0x54
 8002326:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002328:	b29b      	uxth	r3, r3
 800232a:	029b      	lsls	r3, r3, #10
 800232c:	b29a      	uxth	r2, r3
 800232e:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8002330:	801a      	strh	r2, [r3, #0]
 8002332:	e02f      	b.n	8002394 <HAL_PCD_EP_DB_Transmit+0x736>
 8002334:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8002336:	095b      	lsrs	r3, r3, #5
 8002338:	657b      	str	r3, [r7, #84]	; 0x54
 800233a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800233c:	f003 031f 	and.w	r3, r3, #31
 8002340:	2b00      	cmp	r3, #0
 8002342:	d102      	bne.n	800234a <HAL_PCD_EP_DB_Transmit+0x6ec>
 8002344:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002346:	3b01      	subs	r3, #1
 8002348:	657b      	str	r3, [r7, #84]	; 0x54
 800234a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800234c:	b29b      	uxth	r3, r3
 800234e:	029b      	lsls	r3, r3, #10
 8002350:	b29b      	uxth	r3, r3
 8002352:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8002356:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800235a:	b29a      	uxth	r2, r3
 800235c:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 800235e:	801a      	strh	r2, [r3, #0]
 8002360:	e018      	b.n	8002394 <HAL_PCD_EP_DB_Transmit+0x736>
 8002362:	68bb      	ldr	r3, [r7, #8]
 8002364:	785b      	ldrb	r3, [r3, #1]
 8002366:	2b01      	cmp	r3, #1
 8002368:	d114      	bne.n	8002394 <HAL_PCD_EP_DB_Transmit+0x736>
 800236a:	68fb      	ldr	r3, [r7, #12]
 800236c:	681b      	ldr	r3, [r3, #0]
 800236e:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8002372:	b29b      	uxth	r3, r3
 8002374:	461a      	mov	r2, r3
 8002376:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002378:	4413      	add	r3, r2
 800237a:	667b      	str	r3, [r7, #100]	; 0x64
 800237c:	68bb      	ldr	r3, [r7, #8]
 800237e:	781b      	ldrb	r3, [r3, #0]
 8002380:	011a      	lsls	r2, r3, #4
 8002382:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8002384:	4413      	add	r3, r2
 8002386:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 800238a:	663b      	str	r3, [r7, #96]	; 0x60
 800238c:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800238e:	b29a      	uxth	r2, r3
 8002390:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8002392:	801a      	strh	r2, [r3, #0]
 8002394:	68fb      	ldr	r3, [r7, #12]
 8002396:	6818      	ldr	r0, [r3, #0]
 8002398:	68bb      	ldr	r3, [r7, #8]
 800239a:	6959      	ldr	r1, [r3, #20]
 800239c:	68bb      	ldr	r3, [r7, #8]
 800239e:	895a      	ldrh	r2, [r3, #10]
 80023a0:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80023a2:	b29b      	uxth	r3, r3
 80023a4:	f003 fa46 	bl	8005834 <USB_WritePMA>
 80023a8:	68fb      	ldr	r3, [r7, #12]
 80023aa:	681b      	ldr	r3, [r3, #0]
 80023ac:	461a      	mov	r2, r3
 80023ae:	68bb      	ldr	r3, [r7, #8]
 80023b0:	781b      	ldrb	r3, [r3, #0]
 80023b2:	009b      	lsls	r3, r3, #2
 80023b4:	4413      	add	r3, r2
 80023b6:	881b      	ldrh	r3, [r3, #0]
 80023b8:	b29b      	uxth	r3, r3
 80023ba:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80023be:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80023c2:	823b      	strh	r3, [r7, #16]
 80023c4:	8a3b      	ldrh	r3, [r7, #16]
 80023c6:	f083 0310 	eor.w	r3, r3, #16
 80023ca:	823b      	strh	r3, [r7, #16]
 80023cc:	8a3b      	ldrh	r3, [r7, #16]
 80023ce:	f083 0320 	eor.w	r3, r3, #32
 80023d2:	823b      	strh	r3, [r7, #16]
 80023d4:	68fb      	ldr	r3, [r7, #12]
 80023d6:	681b      	ldr	r3, [r3, #0]
 80023d8:	461a      	mov	r2, r3
 80023da:	68bb      	ldr	r3, [r7, #8]
 80023dc:	781b      	ldrb	r3, [r3, #0]
 80023de:	009b      	lsls	r3, r3, #2
 80023e0:	441a      	add	r2, r3
 80023e2:	8a3b      	ldrh	r3, [r7, #16]
 80023e4:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 80023e8:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 80023ec:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80023f0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80023f4:	b29b      	uxth	r3, r3
 80023f6:	8013      	strh	r3, [r2, #0]
 80023f8:	2300      	movs	r3, #0
 80023fa:	4618      	mov	r0, r3
 80023fc:	3788      	adds	r7, #136	; 0x88
 80023fe:	46bd      	mov	sp, r7
 8002400:	bd80      	pop	{r7, pc}

08002402 <HAL_PCDEx_PMAConfig>:
 8002402:	b480      	push	{r7}
 8002404:	b087      	sub	sp, #28
 8002406:	af00      	add	r7, sp, #0
 8002408:	60f8      	str	r0, [r7, #12]
 800240a:	607b      	str	r3, [r7, #4]
 800240c:	460b      	mov	r3, r1
 800240e:	817b      	strh	r3, [r7, #10]
 8002410:	4613      	mov	r3, r2
 8002412:	813b      	strh	r3, [r7, #8]
 8002414:	897b      	ldrh	r3, [r7, #10]
 8002416:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800241a:	b29b      	uxth	r3, r3
 800241c:	2b00      	cmp	r3, #0
 800241e:	d00b      	beq.n	8002438 <HAL_PCDEx_PMAConfig+0x36>
 8002420:	897b      	ldrh	r3, [r7, #10]
 8002422:	f003 0307 	and.w	r3, r3, #7
 8002426:	1c5a      	adds	r2, r3, #1
 8002428:	4613      	mov	r3, r2
 800242a:	009b      	lsls	r3, r3, #2
 800242c:	4413      	add	r3, r2
 800242e:	00db      	lsls	r3, r3, #3
 8002430:	68fa      	ldr	r2, [r7, #12]
 8002432:	4413      	add	r3, r2
 8002434:	617b      	str	r3, [r7, #20]
 8002436:	e009      	b.n	800244c <HAL_PCDEx_PMAConfig+0x4a>
 8002438:	897a      	ldrh	r2, [r7, #10]
 800243a:	4613      	mov	r3, r2
 800243c:	009b      	lsls	r3, r3, #2
 800243e:	4413      	add	r3, r2
 8002440:	00db      	lsls	r3, r3, #3
 8002442:	f503 73b4 	add.w	r3, r3, #360	; 0x168
 8002446:	68fa      	ldr	r2, [r7, #12]
 8002448:	4413      	add	r3, r2
 800244a:	617b      	str	r3, [r7, #20]
 800244c:	893b      	ldrh	r3, [r7, #8]
 800244e:	2b00      	cmp	r3, #0
 8002450:	d107      	bne.n	8002462 <HAL_PCDEx_PMAConfig+0x60>
 8002452:	697b      	ldr	r3, [r7, #20]
 8002454:	2200      	movs	r2, #0
 8002456:	731a      	strb	r2, [r3, #12]
 8002458:	687b      	ldr	r3, [r7, #4]
 800245a:	b29a      	uxth	r2, r3
 800245c:	697b      	ldr	r3, [r7, #20]
 800245e:	80da      	strh	r2, [r3, #6]
 8002460:	e00b      	b.n	800247a <HAL_PCDEx_PMAConfig+0x78>
 8002462:	697b      	ldr	r3, [r7, #20]
 8002464:	2201      	movs	r2, #1
 8002466:	731a      	strb	r2, [r3, #12]
 8002468:	687b      	ldr	r3, [r7, #4]
 800246a:	b29a      	uxth	r2, r3
 800246c:	697b      	ldr	r3, [r7, #20]
 800246e:	811a      	strh	r2, [r3, #8]
 8002470:	687b      	ldr	r3, [r7, #4]
 8002472:	0c1b      	lsrs	r3, r3, #16
 8002474:	b29a      	uxth	r2, r3
 8002476:	697b      	ldr	r3, [r7, #20]
 8002478:	815a      	strh	r2, [r3, #10]
 800247a:	2300      	movs	r3, #0
 800247c:	4618      	mov	r0, r3
 800247e:	371c      	adds	r7, #28
 8002480:	46bd      	mov	sp, r7
 8002482:	bc80      	pop	{r7}
 8002484:	4770      	bx	lr
	...

08002488 <HAL_RCC_OscConfig>:
 8002488:	b580      	push	{r7, lr}
 800248a:	b086      	sub	sp, #24
 800248c:	af00      	add	r7, sp, #0
 800248e:	6078      	str	r0, [r7, #4]
 8002490:	687b      	ldr	r3, [r7, #4]
 8002492:	2b00      	cmp	r3, #0
 8002494:	d101      	bne.n	800249a <HAL_RCC_OscConfig+0x12>
 8002496:	2301      	movs	r3, #1
 8002498:	e272      	b.n	8002980 <HAL_RCC_OscConfig+0x4f8>
 800249a:	687b      	ldr	r3, [r7, #4]
 800249c:	681b      	ldr	r3, [r3, #0]
 800249e:	f003 0301 	and.w	r3, r3, #1
 80024a2:	2b00      	cmp	r3, #0
 80024a4:	f000 8087 	beq.w	80025b6 <HAL_RCC_OscConfig+0x12e>
 80024a8:	4b92      	ldr	r3, [pc, #584]	; (80026f4 <HAL_RCC_OscConfig+0x26c>)
 80024aa:	685b      	ldr	r3, [r3, #4]
 80024ac:	f003 030c 	and.w	r3, r3, #12
 80024b0:	2b04      	cmp	r3, #4
 80024b2:	d00c      	beq.n	80024ce <HAL_RCC_OscConfig+0x46>
 80024b4:	4b8f      	ldr	r3, [pc, #572]	; (80026f4 <HAL_RCC_OscConfig+0x26c>)
 80024b6:	685b      	ldr	r3, [r3, #4]
 80024b8:	f003 030c 	and.w	r3, r3, #12
 80024bc:	2b08      	cmp	r3, #8
 80024be:	d112      	bne.n	80024e6 <HAL_RCC_OscConfig+0x5e>
 80024c0:	4b8c      	ldr	r3, [pc, #560]	; (80026f4 <HAL_RCC_OscConfig+0x26c>)
 80024c2:	685b      	ldr	r3, [r3, #4]
 80024c4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80024c8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80024cc:	d10b      	bne.n	80024e6 <HAL_RCC_OscConfig+0x5e>
 80024ce:	4b89      	ldr	r3, [pc, #548]	; (80026f4 <HAL_RCC_OscConfig+0x26c>)
 80024d0:	681b      	ldr	r3, [r3, #0]
 80024d2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80024d6:	2b00      	cmp	r3, #0
 80024d8:	d06c      	beq.n	80025b4 <HAL_RCC_OscConfig+0x12c>
 80024da:	687b      	ldr	r3, [r7, #4]
 80024dc:	685b      	ldr	r3, [r3, #4]
 80024de:	2b00      	cmp	r3, #0
 80024e0:	d168      	bne.n	80025b4 <HAL_RCC_OscConfig+0x12c>
 80024e2:	2301      	movs	r3, #1
 80024e4:	e24c      	b.n	8002980 <HAL_RCC_OscConfig+0x4f8>
 80024e6:	687b      	ldr	r3, [r7, #4]
 80024e8:	685b      	ldr	r3, [r3, #4]
 80024ea:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80024ee:	d106      	bne.n	80024fe <HAL_RCC_OscConfig+0x76>
 80024f0:	4b80      	ldr	r3, [pc, #512]	; (80026f4 <HAL_RCC_OscConfig+0x26c>)
 80024f2:	681b      	ldr	r3, [r3, #0]
 80024f4:	4a7f      	ldr	r2, [pc, #508]	; (80026f4 <HAL_RCC_OscConfig+0x26c>)
 80024f6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80024fa:	6013      	str	r3, [r2, #0]
 80024fc:	e02e      	b.n	800255c <HAL_RCC_OscConfig+0xd4>
 80024fe:	687b      	ldr	r3, [r7, #4]
 8002500:	685b      	ldr	r3, [r3, #4]
 8002502:	2b00      	cmp	r3, #0
 8002504:	d10c      	bne.n	8002520 <HAL_RCC_OscConfig+0x98>
 8002506:	4b7b      	ldr	r3, [pc, #492]	; (80026f4 <HAL_RCC_OscConfig+0x26c>)
 8002508:	681b      	ldr	r3, [r3, #0]
 800250a:	4a7a      	ldr	r2, [pc, #488]	; (80026f4 <HAL_RCC_OscConfig+0x26c>)
 800250c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002510:	6013      	str	r3, [r2, #0]
 8002512:	4b78      	ldr	r3, [pc, #480]	; (80026f4 <HAL_RCC_OscConfig+0x26c>)
 8002514:	681b      	ldr	r3, [r3, #0]
 8002516:	4a77      	ldr	r2, [pc, #476]	; (80026f4 <HAL_RCC_OscConfig+0x26c>)
 8002518:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800251c:	6013      	str	r3, [r2, #0]
 800251e:	e01d      	b.n	800255c <HAL_RCC_OscConfig+0xd4>
 8002520:	687b      	ldr	r3, [r7, #4]
 8002522:	685b      	ldr	r3, [r3, #4]
 8002524:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8002528:	d10c      	bne.n	8002544 <HAL_RCC_OscConfig+0xbc>
 800252a:	4b72      	ldr	r3, [pc, #456]	; (80026f4 <HAL_RCC_OscConfig+0x26c>)
 800252c:	681b      	ldr	r3, [r3, #0]
 800252e:	4a71      	ldr	r2, [pc, #452]	; (80026f4 <HAL_RCC_OscConfig+0x26c>)
 8002530:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8002534:	6013      	str	r3, [r2, #0]
 8002536:	4b6f      	ldr	r3, [pc, #444]	; (80026f4 <HAL_RCC_OscConfig+0x26c>)
 8002538:	681b      	ldr	r3, [r3, #0]
 800253a:	4a6e      	ldr	r2, [pc, #440]	; (80026f4 <HAL_RCC_OscConfig+0x26c>)
 800253c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002540:	6013      	str	r3, [r2, #0]
 8002542:	e00b      	b.n	800255c <HAL_RCC_OscConfig+0xd4>
 8002544:	4b6b      	ldr	r3, [pc, #428]	; (80026f4 <HAL_RCC_OscConfig+0x26c>)
 8002546:	681b      	ldr	r3, [r3, #0]
 8002548:	4a6a      	ldr	r2, [pc, #424]	; (80026f4 <HAL_RCC_OscConfig+0x26c>)
 800254a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800254e:	6013      	str	r3, [r2, #0]
 8002550:	4b68      	ldr	r3, [pc, #416]	; (80026f4 <HAL_RCC_OscConfig+0x26c>)
 8002552:	681b      	ldr	r3, [r3, #0]
 8002554:	4a67      	ldr	r2, [pc, #412]	; (80026f4 <HAL_RCC_OscConfig+0x26c>)
 8002556:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800255a:	6013      	str	r3, [r2, #0]
 800255c:	687b      	ldr	r3, [r7, #4]
 800255e:	685b      	ldr	r3, [r3, #4]
 8002560:	2b00      	cmp	r3, #0
 8002562:	d013      	beq.n	800258c <HAL_RCC_OscConfig+0x104>
 8002564:	f7fd fff2 	bl	800054c <HAL_GetTick>
 8002568:	6138      	str	r0, [r7, #16]
 800256a:	e008      	b.n	800257e <HAL_RCC_OscConfig+0xf6>
 800256c:	f7fd ffee 	bl	800054c <HAL_GetTick>
 8002570:	4602      	mov	r2, r0
 8002572:	693b      	ldr	r3, [r7, #16]
 8002574:	1ad3      	subs	r3, r2, r3
 8002576:	2b64      	cmp	r3, #100	; 0x64
 8002578:	d901      	bls.n	800257e <HAL_RCC_OscConfig+0xf6>
 800257a:	2303      	movs	r3, #3
 800257c:	e200      	b.n	8002980 <HAL_RCC_OscConfig+0x4f8>
 800257e:	4b5d      	ldr	r3, [pc, #372]	; (80026f4 <HAL_RCC_OscConfig+0x26c>)
 8002580:	681b      	ldr	r3, [r3, #0]
 8002582:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002586:	2b00      	cmp	r3, #0
 8002588:	d0f0      	beq.n	800256c <HAL_RCC_OscConfig+0xe4>
 800258a:	e014      	b.n	80025b6 <HAL_RCC_OscConfig+0x12e>
 800258c:	f7fd ffde 	bl	800054c <HAL_GetTick>
 8002590:	6138      	str	r0, [r7, #16]
 8002592:	e008      	b.n	80025a6 <HAL_RCC_OscConfig+0x11e>
 8002594:	f7fd ffda 	bl	800054c <HAL_GetTick>
 8002598:	4602      	mov	r2, r0
 800259a:	693b      	ldr	r3, [r7, #16]
 800259c:	1ad3      	subs	r3, r2, r3
 800259e:	2b64      	cmp	r3, #100	; 0x64
 80025a0:	d901      	bls.n	80025a6 <HAL_RCC_OscConfig+0x11e>
 80025a2:	2303      	movs	r3, #3
 80025a4:	e1ec      	b.n	8002980 <HAL_RCC_OscConfig+0x4f8>
 80025a6:	4b53      	ldr	r3, [pc, #332]	; (80026f4 <HAL_RCC_OscConfig+0x26c>)
 80025a8:	681b      	ldr	r3, [r3, #0]
 80025aa:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80025ae:	2b00      	cmp	r3, #0
 80025b0:	d1f0      	bne.n	8002594 <HAL_RCC_OscConfig+0x10c>
 80025b2:	e000      	b.n	80025b6 <HAL_RCC_OscConfig+0x12e>
 80025b4:	bf00      	nop
 80025b6:	687b      	ldr	r3, [r7, #4]
 80025b8:	681b      	ldr	r3, [r3, #0]
 80025ba:	f003 0302 	and.w	r3, r3, #2
 80025be:	2b00      	cmp	r3, #0
 80025c0:	d063      	beq.n	800268a <HAL_RCC_OscConfig+0x202>
 80025c2:	4b4c      	ldr	r3, [pc, #304]	; (80026f4 <HAL_RCC_OscConfig+0x26c>)
 80025c4:	685b      	ldr	r3, [r3, #4]
 80025c6:	f003 030c 	and.w	r3, r3, #12
 80025ca:	2b00      	cmp	r3, #0
 80025cc:	d00b      	beq.n	80025e6 <HAL_RCC_OscConfig+0x15e>
 80025ce:	4b49      	ldr	r3, [pc, #292]	; (80026f4 <HAL_RCC_OscConfig+0x26c>)
 80025d0:	685b      	ldr	r3, [r3, #4]
 80025d2:	f003 030c 	and.w	r3, r3, #12
 80025d6:	2b08      	cmp	r3, #8
 80025d8:	d11c      	bne.n	8002614 <HAL_RCC_OscConfig+0x18c>
 80025da:	4b46      	ldr	r3, [pc, #280]	; (80026f4 <HAL_RCC_OscConfig+0x26c>)
 80025dc:	685b      	ldr	r3, [r3, #4]
 80025de:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80025e2:	2b00      	cmp	r3, #0
 80025e4:	d116      	bne.n	8002614 <HAL_RCC_OscConfig+0x18c>
 80025e6:	4b43      	ldr	r3, [pc, #268]	; (80026f4 <HAL_RCC_OscConfig+0x26c>)
 80025e8:	681b      	ldr	r3, [r3, #0]
 80025ea:	f003 0302 	and.w	r3, r3, #2
 80025ee:	2b00      	cmp	r3, #0
 80025f0:	d005      	beq.n	80025fe <HAL_RCC_OscConfig+0x176>
 80025f2:	687b      	ldr	r3, [r7, #4]
 80025f4:	691b      	ldr	r3, [r3, #16]
 80025f6:	2b01      	cmp	r3, #1
 80025f8:	d001      	beq.n	80025fe <HAL_RCC_OscConfig+0x176>
 80025fa:	2301      	movs	r3, #1
 80025fc:	e1c0      	b.n	8002980 <HAL_RCC_OscConfig+0x4f8>
 80025fe:	4b3d      	ldr	r3, [pc, #244]	; (80026f4 <HAL_RCC_OscConfig+0x26c>)
 8002600:	681b      	ldr	r3, [r3, #0]
 8002602:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002606:	687b      	ldr	r3, [r7, #4]
 8002608:	695b      	ldr	r3, [r3, #20]
 800260a:	00db      	lsls	r3, r3, #3
 800260c:	4939      	ldr	r1, [pc, #228]	; (80026f4 <HAL_RCC_OscConfig+0x26c>)
 800260e:	4313      	orrs	r3, r2
 8002610:	600b      	str	r3, [r1, #0]
 8002612:	e03a      	b.n	800268a <HAL_RCC_OscConfig+0x202>
 8002614:	687b      	ldr	r3, [r7, #4]
 8002616:	691b      	ldr	r3, [r3, #16]
 8002618:	2b00      	cmp	r3, #0
 800261a:	d020      	beq.n	800265e <HAL_RCC_OscConfig+0x1d6>
 800261c:	4b36      	ldr	r3, [pc, #216]	; (80026f8 <HAL_RCC_OscConfig+0x270>)
 800261e:	2201      	movs	r2, #1
 8002620:	601a      	str	r2, [r3, #0]
 8002622:	f7fd ff93 	bl	800054c <HAL_GetTick>
 8002626:	6138      	str	r0, [r7, #16]
 8002628:	e008      	b.n	800263c <HAL_RCC_OscConfig+0x1b4>
 800262a:	f7fd ff8f 	bl	800054c <HAL_GetTick>
 800262e:	4602      	mov	r2, r0
 8002630:	693b      	ldr	r3, [r7, #16]
 8002632:	1ad3      	subs	r3, r2, r3
 8002634:	2b02      	cmp	r3, #2
 8002636:	d901      	bls.n	800263c <HAL_RCC_OscConfig+0x1b4>
 8002638:	2303      	movs	r3, #3
 800263a:	e1a1      	b.n	8002980 <HAL_RCC_OscConfig+0x4f8>
 800263c:	4b2d      	ldr	r3, [pc, #180]	; (80026f4 <HAL_RCC_OscConfig+0x26c>)
 800263e:	681b      	ldr	r3, [r3, #0]
 8002640:	f003 0302 	and.w	r3, r3, #2
 8002644:	2b00      	cmp	r3, #0
 8002646:	d0f0      	beq.n	800262a <HAL_RCC_OscConfig+0x1a2>
 8002648:	4b2a      	ldr	r3, [pc, #168]	; (80026f4 <HAL_RCC_OscConfig+0x26c>)
 800264a:	681b      	ldr	r3, [r3, #0]
 800264c:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002650:	687b      	ldr	r3, [r7, #4]
 8002652:	695b      	ldr	r3, [r3, #20]
 8002654:	00db      	lsls	r3, r3, #3
 8002656:	4927      	ldr	r1, [pc, #156]	; (80026f4 <HAL_RCC_OscConfig+0x26c>)
 8002658:	4313      	orrs	r3, r2
 800265a:	600b      	str	r3, [r1, #0]
 800265c:	e015      	b.n	800268a <HAL_RCC_OscConfig+0x202>
 800265e:	4b26      	ldr	r3, [pc, #152]	; (80026f8 <HAL_RCC_OscConfig+0x270>)
 8002660:	2200      	movs	r2, #0
 8002662:	601a      	str	r2, [r3, #0]
 8002664:	f7fd ff72 	bl	800054c <HAL_GetTick>
 8002668:	6138      	str	r0, [r7, #16]
 800266a:	e008      	b.n	800267e <HAL_RCC_OscConfig+0x1f6>
 800266c:	f7fd ff6e 	bl	800054c <HAL_GetTick>
 8002670:	4602      	mov	r2, r0
 8002672:	693b      	ldr	r3, [r7, #16]
 8002674:	1ad3      	subs	r3, r2, r3
 8002676:	2b02      	cmp	r3, #2
 8002678:	d901      	bls.n	800267e <HAL_RCC_OscConfig+0x1f6>
 800267a:	2303      	movs	r3, #3
 800267c:	e180      	b.n	8002980 <HAL_RCC_OscConfig+0x4f8>
 800267e:	4b1d      	ldr	r3, [pc, #116]	; (80026f4 <HAL_RCC_OscConfig+0x26c>)
 8002680:	681b      	ldr	r3, [r3, #0]
 8002682:	f003 0302 	and.w	r3, r3, #2
 8002686:	2b00      	cmp	r3, #0
 8002688:	d1f0      	bne.n	800266c <HAL_RCC_OscConfig+0x1e4>
 800268a:	687b      	ldr	r3, [r7, #4]
 800268c:	681b      	ldr	r3, [r3, #0]
 800268e:	f003 0308 	and.w	r3, r3, #8
 8002692:	2b00      	cmp	r3, #0
 8002694:	d03a      	beq.n	800270c <HAL_RCC_OscConfig+0x284>
 8002696:	687b      	ldr	r3, [r7, #4]
 8002698:	699b      	ldr	r3, [r3, #24]
 800269a:	2b00      	cmp	r3, #0
 800269c:	d019      	beq.n	80026d2 <HAL_RCC_OscConfig+0x24a>
 800269e:	4b17      	ldr	r3, [pc, #92]	; (80026fc <HAL_RCC_OscConfig+0x274>)
 80026a0:	2201      	movs	r2, #1
 80026a2:	601a      	str	r2, [r3, #0]
 80026a4:	f7fd ff52 	bl	800054c <HAL_GetTick>
 80026a8:	6138      	str	r0, [r7, #16]
 80026aa:	e008      	b.n	80026be <HAL_RCC_OscConfig+0x236>
 80026ac:	f7fd ff4e 	bl	800054c <HAL_GetTick>
 80026b0:	4602      	mov	r2, r0
 80026b2:	693b      	ldr	r3, [r7, #16]
 80026b4:	1ad3      	subs	r3, r2, r3
 80026b6:	2b02      	cmp	r3, #2
 80026b8:	d901      	bls.n	80026be <HAL_RCC_OscConfig+0x236>
 80026ba:	2303      	movs	r3, #3
 80026bc:	e160      	b.n	8002980 <HAL_RCC_OscConfig+0x4f8>
 80026be:	4b0d      	ldr	r3, [pc, #52]	; (80026f4 <HAL_RCC_OscConfig+0x26c>)
 80026c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80026c2:	f003 0302 	and.w	r3, r3, #2
 80026c6:	2b00      	cmp	r3, #0
 80026c8:	d0f0      	beq.n	80026ac <HAL_RCC_OscConfig+0x224>
 80026ca:	2001      	movs	r0, #1
 80026cc:	f000 faa6 	bl	8002c1c <RCC_Delay>
 80026d0:	e01c      	b.n	800270c <HAL_RCC_OscConfig+0x284>
 80026d2:	4b0a      	ldr	r3, [pc, #40]	; (80026fc <HAL_RCC_OscConfig+0x274>)
 80026d4:	2200      	movs	r2, #0
 80026d6:	601a      	str	r2, [r3, #0]
 80026d8:	f7fd ff38 	bl	800054c <HAL_GetTick>
 80026dc:	6138      	str	r0, [r7, #16]
 80026de:	e00f      	b.n	8002700 <HAL_RCC_OscConfig+0x278>
 80026e0:	f7fd ff34 	bl	800054c <HAL_GetTick>
 80026e4:	4602      	mov	r2, r0
 80026e6:	693b      	ldr	r3, [r7, #16]
 80026e8:	1ad3      	subs	r3, r2, r3
 80026ea:	2b02      	cmp	r3, #2
 80026ec:	d908      	bls.n	8002700 <HAL_RCC_OscConfig+0x278>
 80026ee:	2303      	movs	r3, #3
 80026f0:	e146      	b.n	8002980 <HAL_RCC_OscConfig+0x4f8>
 80026f2:	bf00      	nop
 80026f4:	40021000 	.word	0x40021000
 80026f8:	42420000 	.word	0x42420000
 80026fc:	42420480 	.word	0x42420480
 8002700:	4b92      	ldr	r3, [pc, #584]	; (800294c <HAL_RCC_OscConfig+0x4c4>)
 8002702:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002704:	f003 0302 	and.w	r3, r3, #2
 8002708:	2b00      	cmp	r3, #0
 800270a:	d1e9      	bne.n	80026e0 <HAL_RCC_OscConfig+0x258>
 800270c:	687b      	ldr	r3, [r7, #4]
 800270e:	681b      	ldr	r3, [r3, #0]
 8002710:	f003 0304 	and.w	r3, r3, #4
 8002714:	2b00      	cmp	r3, #0
 8002716:	f000 80a6 	beq.w	8002866 <HAL_RCC_OscConfig+0x3de>
 800271a:	2300      	movs	r3, #0
 800271c:	75fb      	strb	r3, [r7, #23]
 800271e:	4b8b      	ldr	r3, [pc, #556]	; (800294c <HAL_RCC_OscConfig+0x4c4>)
 8002720:	69db      	ldr	r3, [r3, #28]
 8002722:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002726:	2b00      	cmp	r3, #0
 8002728:	d10d      	bne.n	8002746 <HAL_RCC_OscConfig+0x2be>
 800272a:	4b88      	ldr	r3, [pc, #544]	; (800294c <HAL_RCC_OscConfig+0x4c4>)
 800272c:	69db      	ldr	r3, [r3, #28]
 800272e:	4a87      	ldr	r2, [pc, #540]	; (800294c <HAL_RCC_OscConfig+0x4c4>)
 8002730:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002734:	61d3      	str	r3, [r2, #28]
 8002736:	4b85      	ldr	r3, [pc, #532]	; (800294c <HAL_RCC_OscConfig+0x4c4>)
 8002738:	69db      	ldr	r3, [r3, #28]
 800273a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800273e:	60bb      	str	r3, [r7, #8]
 8002740:	68bb      	ldr	r3, [r7, #8]
 8002742:	2301      	movs	r3, #1
 8002744:	75fb      	strb	r3, [r7, #23]
 8002746:	4b82      	ldr	r3, [pc, #520]	; (8002950 <HAL_RCC_OscConfig+0x4c8>)
 8002748:	681b      	ldr	r3, [r3, #0]
 800274a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800274e:	2b00      	cmp	r3, #0
 8002750:	d118      	bne.n	8002784 <HAL_RCC_OscConfig+0x2fc>
 8002752:	4b7f      	ldr	r3, [pc, #508]	; (8002950 <HAL_RCC_OscConfig+0x4c8>)
 8002754:	681b      	ldr	r3, [r3, #0]
 8002756:	4a7e      	ldr	r2, [pc, #504]	; (8002950 <HAL_RCC_OscConfig+0x4c8>)
 8002758:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800275c:	6013      	str	r3, [r2, #0]
 800275e:	f7fd fef5 	bl	800054c <HAL_GetTick>
 8002762:	6138      	str	r0, [r7, #16]
 8002764:	e008      	b.n	8002778 <HAL_RCC_OscConfig+0x2f0>
 8002766:	f7fd fef1 	bl	800054c <HAL_GetTick>
 800276a:	4602      	mov	r2, r0
 800276c:	693b      	ldr	r3, [r7, #16]
 800276e:	1ad3      	subs	r3, r2, r3
 8002770:	2b64      	cmp	r3, #100	; 0x64
 8002772:	d901      	bls.n	8002778 <HAL_RCC_OscConfig+0x2f0>
 8002774:	2303      	movs	r3, #3
 8002776:	e103      	b.n	8002980 <HAL_RCC_OscConfig+0x4f8>
 8002778:	4b75      	ldr	r3, [pc, #468]	; (8002950 <HAL_RCC_OscConfig+0x4c8>)
 800277a:	681b      	ldr	r3, [r3, #0]
 800277c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002780:	2b00      	cmp	r3, #0
 8002782:	d0f0      	beq.n	8002766 <HAL_RCC_OscConfig+0x2de>
 8002784:	687b      	ldr	r3, [r7, #4]
 8002786:	68db      	ldr	r3, [r3, #12]
 8002788:	2b01      	cmp	r3, #1
 800278a:	d106      	bne.n	800279a <HAL_RCC_OscConfig+0x312>
 800278c:	4b6f      	ldr	r3, [pc, #444]	; (800294c <HAL_RCC_OscConfig+0x4c4>)
 800278e:	6a1b      	ldr	r3, [r3, #32]
 8002790:	4a6e      	ldr	r2, [pc, #440]	; (800294c <HAL_RCC_OscConfig+0x4c4>)
 8002792:	f043 0301 	orr.w	r3, r3, #1
 8002796:	6213      	str	r3, [r2, #32]
 8002798:	e02d      	b.n	80027f6 <HAL_RCC_OscConfig+0x36e>
 800279a:	687b      	ldr	r3, [r7, #4]
 800279c:	68db      	ldr	r3, [r3, #12]
 800279e:	2b00      	cmp	r3, #0
 80027a0:	d10c      	bne.n	80027bc <HAL_RCC_OscConfig+0x334>
 80027a2:	4b6a      	ldr	r3, [pc, #424]	; (800294c <HAL_RCC_OscConfig+0x4c4>)
 80027a4:	6a1b      	ldr	r3, [r3, #32]
 80027a6:	4a69      	ldr	r2, [pc, #420]	; (800294c <HAL_RCC_OscConfig+0x4c4>)
 80027a8:	f023 0301 	bic.w	r3, r3, #1
 80027ac:	6213      	str	r3, [r2, #32]
 80027ae:	4b67      	ldr	r3, [pc, #412]	; (800294c <HAL_RCC_OscConfig+0x4c4>)
 80027b0:	6a1b      	ldr	r3, [r3, #32]
 80027b2:	4a66      	ldr	r2, [pc, #408]	; (800294c <HAL_RCC_OscConfig+0x4c4>)
 80027b4:	f023 0304 	bic.w	r3, r3, #4
 80027b8:	6213      	str	r3, [r2, #32]
 80027ba:	e01c      	b.n	80027f6 <HAL_RCC_OscConfig+0x36e>
 80027bc:	687b      	ldr	r3, [r7, #4]
 80027be:	68db      	ldr	r3, [r3, #12]
 80027c0:	2b05      	cmp	r3, #5
 80027c2:	d10c      	bne.n	80027de <HAL_RCC_OscConfig+0x356>
 80027c4:	4b61      	ldr	r3, [pc, #388]	; (800294c <HAL_RCC_OscConfig+0x4c4>)
 80027c6:	6a1b      	ldr	r3, [r3, #32]
 80027c8:	4a60      	ldr	r2, [pc, #384]	; (800294c <HAL_RCC_OscConfig+0x4c4>)
 80027ca:	f043 0304 	orr.w	r3, r3, #4
 80027ce:	6213      	str	r3, [r2, #32]
 80027d0:	4b5e      	ldr	r3, [pc, #376]	; (800294c <HAL_RCC_OscConfig+0x4c4>)
 80027d2:	6a1b      	ldr	r3, [r3, #32]
 80027d4:	4a5d      	ldr	r2, [pc, #372]	; (800294c <HAL_RCC_OscConfig+0x4c4>)
 80027d6:	f043 0301 	orr.w	r3, r3, #1
 80027da:	6213      	str	r3, [r2, #32]
 80027dc:	e00b      	b.n	80027f6 <HAL_RCC_OscConfig+0x36e>
 80027de:	4b5b      	ldr	r3, [pc, #364]	; (800294c <HAL_RCC_OscConfig+0x4c4>)
 80027e0:	6a1b      	ldr	r3, [r3, #32]
 80027e2:	4a5a      	ldr	r2, [pc, #360]	; (800294c <HAL_RCC_OscConfig+0x4c4>)
 80027e4:	f023 0301 	bic.w	r3, r3, #1
 80027e8:	6213      	str	r3, [r2, #32]
 80027ea:	4b58      	ldr	r3, [pc, #352]	; (800294c <HAL_RCC_OscConfig+0x4c4>)
 80027ec:	6a1b      	ldr	r3, [r3, #32]
 80027ee:	4a57      	ldr	r2, [pc, #348]	; (800294c <HAL_RCC_OscConfig+0x4c4>)
 80027f0:	f023 0304 	bic.w	r3, r3, #4
 80027f4:	6213      	str	r3, [r2, #32]
 80027f6:	687b      	ldr	r3, [r7, #4]
 80027f8:	68db      	ldr	r3, [r3, #12]
 80027fa:	2b00      	cmp	r3, #0
 80027fc:	d015      	beq.n	800282a <HAL_RCC_OscConfig+0x3a2>
 80027fe:	f7fd fea5 	bl	800054c <HAL_GetTick>
 8002802:	6138      	str	r0, [r7, #16]
 8002804:	e00a      	b.n	800281c <HAL_RCC_OscConfig+0x394>
 8002806:	f7fd fea1 	bl	800054c <HAL_GetTick>
 800280a:	4602      	mov	r2, r0
 800280c:	693b      	ldr	r3, [r7, #16]
 800280e:	1ad3      	subs	r3, r2, r3
 8002810:	f241 3288 	movw	r2, #5000	; 0x1388
 8002814:	4293      	cmp	r3, r2
 8002816:	d901      	bls.n	800281c <HAL_RCC_OscConfig+0x394>
 8002818:	2303      	movs	r3, #3
 800281a:	e0b1      	b.n	8002980 <HAL_RCC_OscConfig+0x4f8>
 800281c:	4b4b      	ldr	r3, [pc, #300]	; (800294c <HAL_RCC_OscConfig+0x4c4>)
 800281e:	6a1b      	ldr	r3, [r3, #32]
 8002820:	f003 0302 	and.w	r3, r3, #2
 8002824:	2b00      	cmp	r3, #0
 8002826:	d0ee      	beq.n	8002806 <HAL_RCC_OscConfig+0x37e>
 8002828:	e014      	b.n	8002854 <HAL_RCC_OscConfig+0x3cc>
 800282a:	f7fd fe8f 	bl	800054c <HAL_GetTick>
 800282e:	6138      	str	r0, [r7, #16]
 8002830:	e00a      	b.n	8002848 <HAL_RCC_OscConfig+0x3c0>
 8002832:	f7fd fe8b 	bl	800054c <HAL_GetTick>
 8002836:	4602      	mov	r2, r0
 8002838:	693b      	ldr	r3, [r7, #16]
 800283a:	1ad3      	subs	r3, r2, r3
 800283c:	f241 3288 	movw	r2, #5000	; 0x1388
 8002840:	4293      	cmp	r3, r2
 8002842:	d901      	bls.n	8002848 <HAL_RCC_OscConfig+0x3c0>
 8002844:	2303      	movs	r3, #3
 8002846:	e09b      	b.n	8002980 <HAL_RCC_OscConfig+0x4f8>
 8002848:	4b40      	ldr	r3, [pc, #256]	; (800294c <HAL_RCC_OscConfig+0x4c4>)
 800284a:	6a1b      	ldr	r3, [r3, #32]
 800284c:	f003 0302 	and.w	r3, r3, #2
 8002850:	2b00      	cmp	r3, #0
 8002852:	d1ee      	bne.n	8002832 <HAL_RCC_OscConfig+0x3aa>
 8002854:	7dfb      	ldrb	r3, [r7, #23]
 8002856:	2b01      	cmp	r3, #1
 8002858:	d105      	bne.n	8002866 <HAL_RCC_OscConfig+0x3de>
 800285a:	4b3c      	ldr	r3, [pc, #240]	; (800294c <HAL_RCC_OscConfig+0x4c4>)
 800285c:	69db      	ldr	r3, [r3, #28]
 800285e:	4a3b      	ldr	r2, [pc, #236]	; (800294c <HAL_RCC_OscConfig+0x4c4>)
 8002860:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8002864:	61d3      	str	r3, [r2, #28]
 8002866:	687b      	ldr	r3, [r7, #4]
 8002868:	69db      	ldr	r3, [r3, #28]
 800286a:	2b00      	cmp	r3, #0
 800286c:	f000 8087 	beq.w	800297e <HAL_RCC_OscConfig+0x4f6>
 8002870:	4b36      	ldr	r3, [pc, #216]	; (800294c <HAL_RCC_OscConfig+0x4c4>)
 8002872:	685b      	ldr	r3, [r3, #4]
 8002874:	f003 030c 	and.w	r3, r3, #12
 8002878:	2b08      	cmp	r3, #8
 800287a:	d061      	beq.n	8002940 <HAL_RCC_OscConfig+0x4b8>
 800287c:	687b      	ldr	r3, [r7, #4]
 800287e:	69db      	ldr	r3, [r3, #28]
 8002880:	2b02      	cmp	r3, #2
 8002882:	d146      	bne.n	8002912 <HAL_RCC_OscConfig+0x48a>
 8002884:	4b33      	ldr	r3, [pc, #204]	; (8002954 <HAL_RCC_OscConfig+0x4cc>)
 8002886:	2200      	movs	r2, #0
 8002888:	601a      	str	r2, [r3, #0]
 800288a:	f7fd fe5f 	bl	800054c <HAL_GetTick>
 800288e:	6138      	str	r0, [r7, #16]
 8002890:	e008      	b.n	80028a4 <HAL_RCC_OscConfig+0x41c>
 8002892:	f7fd fe5b 	bl	800054c <HAL_GetTick>
 8002896:	4602      	mov	r2, r0
 8002898:	693b      	ldr	r3, [r7, #16]
 800289a:	1ad3      	subs	r3, r2, r3
 800289c:	2b02      	cmp	r3, #2
 800289e:	d901      	bls.n	80028a4 <HAL_RCC_OscConfig+0x41c>
 80028a0:	2303      	movs	r3, #3
 80028a2:	e06d      	b.n	8002980 <HAL_RCC_OscConfig+0x4f8>
 80028a4:	4b29      	ldr	r3, [pc, #164]	; (800294c <HAL_RCC_OscConfig+0x4c4>)
 80028a6:	681b      	ldr	r3, [r3, #0]
 80028a8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80028ac:	2b00      	cmp	r3, #0
 80028ae:	d1f0      	bne.n	8002892 <HAL_RCC_OscConfig+0x40a>
 80028b0:	687b      	ldr	r3, [r7, #4]
 80028b2:	6a1b      	ldr	r3, [r3, #32]
 80028b4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80028b8:	d108      	bne.n	80028cc <HAL_RCC_OscConfig+0x444>
 80028ba:	4b24      	ldr	r3, [pc, #144]	; (800294c <HAL_RCC_OscConfig+0x4c4>)
 80028bc:	685b      	ldr	r3, [r3, #4]
 80028be:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 80028c2:	687b      	ldr	r3, [r7, #4]
 80028c4:	689b      	ldr	r3, [r3, #8]
 80028c6:	4921      	ldr	r1, [pc, #132]	; (800294c <HAL_RCC_OscConfig+0x4c4>)
 80028c8:	4313      	orrs	r3, r2
 80028ca:	604b      	str	r3, [r1, #4]
 80028cc:	4b1f      	ldr	r3, [pc, #124]	; (800294c <HAL_RCC_OscConfig+0x4c4>)
 80028ce:	685b      	ldr	r3, [r3, #4]
 80028d0:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 80028d4:	687b      	ldr	r3, [r7, #4]
 80028d6:	6a19      	ldr	r1, [r3, #32]
 80028d8:	687b      	ldr	r3, [r7, #4]
 80028da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80028dc:	430b      	orrs	r3, r1
 80028de:	491b      	ldr	r1, [pc, #108]	; (800294c <HAL_RCC_OscConfig+0x4c4>)
 80028e0:	4313      	orrs	r3, r2
 80028e2:	604b      	str	r3, [r1, #4]
 80028e4:	4b1b      	ldr	r3, [pc, #108]	; (8002954 <HAL_RCC_OscConfig+0x4cc>)
 80028e6:	2201      	movs	r2, #1
 80028e8:	601a      	str	r2, [r3, #0]
 80028ea:	f7fd fe2f 	bl	800054c <HAL_GetTick>
 80028ee:	6138      	str	r0, [r7, #16]
 80028f0:	e008      	b.n	8002904 <HAL_RCC_OscConfig+0x47c>
 80028f2:	f7fd fe2b 	bl	800054c <HAL_GetTick>
 80028f6:	4602      	mov	r2, r0
 80028f8:	693b      	ldr	r3, [r7, #16]
 80028fa:	1ad3      	subs	r3, r2, r3
 80028fc:	2b02      	cmp	r3, #2
 80028fe:	d901      	bls.n	8002904 <HAL_RCC_OscConfig+0x47c>
 8002900:	2303      	movs	r3, #3
 8002902:	e03d      	b.n	8002980 <HAL_RCC_OscConfig+0x4f8>
 8002904:	4b11      	ldr	r3, [pc, #68]	; (800294c <HAL_RCC_OscConfig+0x4c4>)
 8002906:	681b      	ldr	r3, [r3, #0]
 8002908:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800290c:	2b00      	cmp	r3, #0
 800290e:	d0f0      	beq.n	80028f2 <HAL_RCC_OscConfig+0x46a>
 8002910:	e035      	b.n	800297e <HAL_RCC_OscConfig+0x4f6>
 8002912:	4b10      	ldr	r3, [pc, #64]	; (8002954 <HAL_RCC_OscConfig+0x4cc>)
 8002914:	2200      	movs	r2, #0
 8002916:	601a      	str	r2, [r3, #0]
 8002918:	f7fd fe18 	bl	800054c <HAL_GetTick>
 800291c:	6138      	str	r0, [r7, #16]
 800291e:	e008      	b.n	8002932 <HAL_RCC_OscConfig+0x4aa>
 8002920:	f7fd fe14 	bl	800054c <HAL_GetTick>
 8002924:	4602      	mov	r2, r0
 8002926:	693b      	ldr	r3, [r7, #16]
 8002928:	1ad3      	subs	r3, r2, r3
 800292a:	2b02      	cmp	r3, #2
 800292c:	d901      	bls.n	8002932 <HAL_RCC_OscConfig+0x4aa>
 800292e:	2303      	movs	r3, #3
 8002930:	e026      	b.n	8002980 <HAL_RCC_OscConfig+0x4f8>
 8002932:	4b06      	ldr	r3, [pc, #24]	; (800294c <HAL_RCC_OscConfig+0x4c4>)
 8002934:	681b      	ldr	r3, [r3, #0]
 8002936:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800293a:	2b00      	cmp	r3, #0
 800293c:	d1f0      	bne.n	8002920 <HAL_RCC_OscConfig+0x498>
 800293e:	e01e      	b.n	800297e <HAL_RCC_OscConfig+0x4f6>
 8002940:	687b      	ldr	r3, [r7, #4]
 8002942:	69db      	ldr	r3, [r3, #28]
 8002944:	2b01      	cmp	r3, #1
 8002946:	d107      	bne.n	8002958 <HAL_RCC_OscConfig+0x4d0>
 8002948:	2301      	movs	r3, #1
 800294a:	e019      	b.n	8002980 <HAL_RCC_OscConfig+0x4f8>
 800294c:	40021000 	.word	0x40021000
 8002950:	40007000 	.word	0x40007000
 8002954:	42420060 	.word	0x42420060
 8002958:	4b0b      	ldr	r3, [pc, #44]	; (8002988 <HAL_RCC_OscConfig+0x500>)
 800295a:	685b      	ldr	r3, [r3, #4]
 800295c:	60fb      	str	r3, [r7, #12]
 800295e:	68fb      	ldr	r3, [r7, #12]
 8002960:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8002964:	687b      	ldr	r3, [r7, #4]
 8002966:	6a1b      	ldr	r3, [r3, #32]
 8002968:	429a      	cmp	r2, r3
 800296a:	d106      	bne.n	800297a <HAL_RCC_OscConfig+0x4f2>
 800296c:	68fb      	ldr	r3, [r7, #12]
 800296e:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8002972:	687b      	ldr	r3, [r7, #4]
 8002974:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002976:	429a      	cmp	r2, r3
 8002978:	d001      	beq.n	800297e <HAL_RCC_OscConfig+0x4f6>
 800297a:	2301      	movs	r3, #1
 800297c:	e000      	b.n	8002980 <HAL_RCC_OscConfig+0x4f8>
 800297e:	2300      	movs	r3, #0
 8002980:	4618      	mov	r0, r3
 8002982:	3718      	adds	r7, #24
 8002984:	46bd      	mov	sp, r7
 8002986:	bd80      	pop	{r7, pc}
 8002988:	40021000 	.word	0x40021000

0800298c <HAL_RCC_ClockConfig>:
 800298c:	b580      	push	{r7, lr}
 800298e:	b084      	sub	sp, #16
 8002990:	af00      	add	r7, sp, #0
 8002992:	6078      	str	r0, [r7, #4]
 8002994:	6039      	str	r1, [r7, #0]
 8002996:	687b      	ldr	r3, [r7, #4]
 8002998:	2b00      	cmp	r3, #0
 800299a:	d101      	bne.n	80029a0 <HAL_RCC_ClockConfig+0x14>
 800299c:	2301      	movs	r3, #1
 800299e:	e0d0      	b.n	8002b42 <HAL_RCC_ClockConfig+0x1b6>
 80029a0:	4b6a      	ldr	r3, [pc, #424]	; (8002b4c <HAL_RCC_ClockConfig+0x1c0>)
 80029a2:	681b      	ldr	r3, [r3, #0]
 80029a4:	f003 0307 	and.w	r3, r3, #7
 80029a8:	683a      	ldr	r2, [r7, #0]
 80029aa:	429a      	cmp	r2, r3
 80029ac:	d910      	bls.n	80029d0 <HAL_RCC_ClockConfig+0x44>
 80029ae:	4b67      	ldr	r3, [pc, #412]	; (8002b4c <HAL_RCC_ClockConfig+0x1c0>)
 80029b0:	681b      	ldr	r3, [r3, #0]
 80029b2:	f023 0207 	bic.w	r2, r3, #7
 80029b6:	4965      	ldr	r1, [pc, #404]	; (8002b4c <HAL_RCC_ClockConfig+0x1c0>)
 80029b8:	683b      	ldr	r3, [r7, #0]
 80029ba:	4313      	orrs	r3, r2
 80029bc:	600b      	str	r3, [r1, #0]
 80029be:	4b63      	ldr	r3, [pc, #396]	; (8002b4c <HAL_RCC_ClockConfig+0x1c0>)
 80029c0:	681b      	ldr	r3, [r3, #0]
 80029c2:	f003 0307 	and.w	r3, r3, #7
 80029c6:	683a      	ldr	r2, [r7, #0]
 80029c8:	429a      	cmp	r2, r3
 80029ca:	d001      	beq.n	80029d0 <HAL_RCC_ClockConfig+0x44>
 80029cc:	2301      	movs	r3, #1
 80029ce:	e0b8      	b.n	8002b42 <HAL_RCC_ClockConfig+0x1b6>
 80029d0:	687b      	ldr	r3, [r7, #4]
 80029d2:	681b      	ldr	r3, [r3, #0]
 80029d4:	f003 0302 	and.w	r3, r3, #2
 80029d8:	2b00      	cmp	r3, #0
 80029da:	d020      	beq.n	8002a1e <HAL_RCC_ClockConfig+0x92>
 80029dc:	687b      	ldr	r3, [r7, #4]
 80029de:	681b      	ldr	r3, [r3, #0]
 80029e0:	f003 0304 	and.w	r3, r3, #4
 80029e4:	2b00      	cmp	r3, #0
 80029e6:	d005      	beq.n	80029f4 <HAL_RCC_ClockConfig+0x68>
 80029e8:	4b59      	ldr	r3, [pc, #356]	; (8002b50 <HAL_RCC_ClockConfig+0x1c4>)
 80029ea:	685b      	ldr	r3, [r3, #4]
 80029ec:	4a58      	ldr	r2, [pc, #352]	; (8002b50 <HAL_RCC_ClockConfig+0x1c4>)
 80029ee:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 80029f2:	6053      	str	r3, [r2, #4]
 80029f4:	687b      	ldr	r3, [r7, #4]
 80029f6:	681b      	ldr	r3, [r3, #0]
 80029f8:	f003 0308 	and.w	r3, r3, #8
 80029fc:	2b00      	cmp	r3, #0
 80029fe:	d005      	beq.n	8002a0c <HAL_RCC_ClockConfig+0x80>
 8002a00:	4b53      	ldr	r3, [pc, #332]	; (8002b50 <HAL_RCC_ClockConfig+0x1c4>)
 8002a02:	685b      	ldr	r3, [r3, #4]
 8002a04:	4a52      	ldr	r2, [pc, #328]	; (8002b50 <HAL_RCC_ClockConfig+0x1c4>)
 8002a06:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8002a0a:	6053      	str	r3, [r2, #4]
 8002a0c:	4b50      	ldr	r3, [pc, #320]	; (8002b50 <HAL_RCC_ClockConfig+0x1c4>)
 8002a0e:	685b      	ldr	r3, [r3, #4]
 8002a10:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8002a14:	687b      	ldr	r3, [r7, #4]
 8002a16:	689b      	ldr	r3, [r3, #8]
 8002a18:	494d      	ldr	r1, [pc, #308]	; (8002b50 <HAL_RCC_ClockConfig+0x1c4>)
 8002a1a:	4313      	orrs	r3, r2
 8002a1c:	604b      	str	r3, [r1, #4]
 8002a1e:	687b      	ldr	r3, [r7, #4]
 8002a20:	681b      	ldr	r3, [r3, #0]
 8002a22:	f003 0301 	and.w	r3, r3, #1
 8002a26:	2b00      	cmp	r3, #0
 8002a28:	d040      	beq.n	8002aac <HAL_RCC_ClockConfig+0x120>
 8002a2a:	687b      	ldr	r3, [r7, #4]
 8002a2c:	685b      	ldr	r3, [r3, #4]
 8002a2e:	2b01      	cmp	r3, #1
 8002a30:	d107      	bne.n	8002a42 <HAL_RCC_ClockConfig+0xb6>
 8002a32:	4b47      	ldr	r3, [pc, #284]	; (8002b50 <HAL_RCC_ClockConfig+0x1c4>)
 8002a34:	681b      	ldr	r3, [r3, #0]
 8002a36:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002a3a:	2b00      	cmp	r3, #0
 8002a3c:	d115      	bne.n	8002a6a <HAL_RCC_ClockConfig+0xde>
 8002a3e:	2301      	movs	r3, #1
 8002a40:	e07f      	b.n	8002b42 <HAL_RCC_ClockConfig+0x1b6>
 8002a42:	687b      	ldr	r3, [r7, #4]
 8002a44:	685b      	ldr	r3, [r3, #4]
 8002a46:	2b02      	cmp	r3, #2
 8002a48:	d107      	bne.n	8002a5a <HAL_RCC_ClockConfig+0xce>
 8002a4a:	4b41      	ldr	r3, [pc, #260]	; (8002b50 <HAL_RCC_ClockConfig+0x1c4>)
 8002a4c:	681b      	ldr	r3, [r3, #0]
 8002a4e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002a52:	2b00      	cmp	r3, #0
 8002a54:	d109      	bne.n	8002a6a <HAL_RCC_ClockConfig+0xde>
 8002a56:	2301      	movs	r3, #1
 8002a58:	e073      	b.n	8002b42 <HAL_RCC_ClockConfig+0x1b6>
 8002a5a:	4b3d      	ldr	r3, [pc, #244]	; (8002b50 <HAL_RCC_ClockConfig+0x1c4>)
 8002a5c:	681b      	ldr	r3, [r3, #0]
 8002a5e:	f003 0302 	and.w	r3, r3, #2
 8002a62:	2b00      	cmp	r3, #0
 8002a64:	d101      	bne.n	8002a6a <HAL_RCC_ClockConfig+0xde>
 8002a66:	2301      	movs	r3, #1
 8002a68:	e06b      	b.n	8002b42 <HAL_RCC_ClockConfig+0x1b6>
 8002a6a:	4b39      	ldr	r3, [pc, #228]	; (8002b50 <HAL_RCC_ClockConfig+0x1c4>)
 8002a6c:	685b      	ldr	r3, [r3, #4]
 8002a6e:	f023 0203 	bic.w	r2, r3, #3
 8002a72:	687b      	ldr	r3, [r7, #4]
 8002a74:	685b      	ldr	r3, [r3, #4]
 8002a76:	4936      	ldr	r1, [pc, #216]	; (8002b50 <HAL_RCC_ClockConfig+0x1c4>)
 8002a78:	4313      	orrs	r3, r2
 8002a7a:	604b      	str	r3, [r1, #4]
 8002a7c:	f7fd fd66 	bl	800054c <HAL_GetTick>
 8002a80:	60f8      	str	r0, [r7, #12]
 8002a82:	e00a      	b.n	8002a9a <HAL_RCC_ClockConfig+0x10e>
 8002a84:	f7fd fd62 	bl	800054c <HAL_GetTick>
 8002a88:	4602      	mov	r2, r0
 8002a8a:	68fb      	ldr	r3, [r7, #12]
 8002a8c:	1ad3      	subs	r3, r2, r3
 8002a8e:	f241 3288 	movw	r2, #5000	; 0x1388
 8002a92:	4293      	cmp	r3, r2
 8002a94:	d901      	bls.n	8002a9a <HAL_RCC_ClockConfig+0x10e>
 8002a96:	2303      	movs	r3, #3
 8002a98:	e053      	b.n	8002b42 <HAL_RCC_ClockConfig+0x1b6>
 8002a9a:	4b2d      	ldr	r3, [pc, #180]	; (8002b50 <HAL_RCC_ClockConfig+0x1c4>)
 8002a9c:	685b      	ldr	r3, [r3, #4]
 8002a9e:	f003 020c 	and.w	r2, r3, #12
 8002aa2:	687b      	ldr	r3, [r7, #4]
 8002aa4:	685b      	ldr	r3, [r3, #4]
 8002aa6:	009b      	lsls	r3, r3, #2
 8002aa8:	429a      	cmp	r2, r3
 8002aaa:	d1eb      	bne.n	8002a84 <HAL_RCC_ClockConfig+0xf8>
 8002aac:	4b27      	ldr	r3, [pc, #156]	; (8002b4c <HAL_RCC_ClockConfig+0x1c0>)
 8002aae:	681b      	ldr	r3, [r3, #0]
 8002ab0:	f003 0307 	and.w	r3, r3, #7
 8002ab4:	683a      	ldr	r2, [r7, #0]
 8002ab6:	429a      	cmp	r2, r3
 8002ab8:	d210      	bcs.n	8002adc <HAL_RCC_ClockConfig+0x150>
 8002aba:	4b24      	ldr	r3, [pc, #144]	; (8002b4c <HAL_RCC_ClockConfig+0x1c0>)
 8002abc:	681b      	ldr	r3, [r3, #0]
 8002abe:	f023 0207 	bic.w	r2, r3, #7
 8002ac2:	4922      	ldr	r1, [pc, #136]	; (8002b4c <HAL_RCC_ClockConfig+0x1c0>)
 8002ac4:	683b      	ldr	r3, [r7, #0]
 8002ac6:	4313      	orrs	r3, r2
 8002ac8:	600b      	str	r3, [r1, #0]
 8002aca:	4b20      	ldr	r3, [pc, #128]	; (8002b4c <HAL_RCC_ClockConfig+0x1c0>)
 8002acc:	681b      	ldr	r3, [r3, #0]
 8002ace:	f003 0307 	and.w	r3, r3, #7
 8002ad2:	683a      	ldr	r2, [r7, #0]
 8002ad4:	429a      	cmp	r2, r3
 8002ad6:	d001      	beq.n	8002adc <HAL_RCC_ClockConfig+0x150>
 8002ad8:	2301      	movs	r3, #1
 8002ada:	e032      	b.n	8002b42 <HAL_RCC_ClockConfig+0x1b6>
 8002adc:	687b      	ldr	r3, [r7, #4]
 8002ade:	681b      	ldr	r3, [r3, #0]
 8002ae0:	f003 0304 	and.w	r3, r3, #4
 8002ae4:	2b00      	cmp	r3, #0
 8002ae6:	d008      	beq.n	8002afa <HAL_RCC_ClockConfig+0x16e>
 8002ae8:	4b19      	ldr	r3, [pc, #100]	; (8002b50 <HAL_RCC_ClockConfig+0x1c4>)
 8002aea:	685b      	ldr	r3, [r3, #4]
 8002aec:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8002af0:	687b      	ldr	r3, [r7, #4]
 8002af2:	68db      	ldr	r3, [r3, #12]
 8002af4:	4916      	ldr	r1, [pc, #88]	; (8002b50 <HAL_RCC_ClockConfig+0x1c4>)
 8002af6:	4313      	orrs	r3, r2
 8002af8:	604b      	str	r3, [r1, #4]
 8002afa:	687b      	ldr	r3, [r7, #4]
 8002afc:	681b      	ldr	r3, [r3, #0]
 8002afe:	f003 0308 	and.w	r3, r3, #8
 8002b02:	2b00      	cmp	r3, #0
 8002b04:	d009      	beq.n	8002b1a <HAL_RCC_ClockConfig+0x18e>
 8002b06:	4b12      	ldr	r3, [pc, #72]	; (8002b50 <HAL_RCC_ClockConfig+0x1c4>)
 8002b08:	685b      	ldr	r3, [r3, #4]
 8002b0a:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8002b0e:	687b      	ldr	r3, [r7, #4]
 8002b10:	691b      	ldr	r3, [r3, #16]
 8002b12:	00db      	lsls	r3, r3, #3
 8002b14:	490e      	ldr	r1, [pc, #56]	; (8002b50 <HAL_RCC_ClockConfig+0x1c4>)
 8002b16:	4313      	orrs	r3, r2
 8002b18:	604b      	str	r3, [r1, #4]
 8002b1a:	f000 f821 	bl	8002b60 <HAL_RCC_GetSysClockFreq>
 8002b1e:	4602      	mov	r2, r0
 8002b20:	4b0b      	ldr	r3, [pc, #44]	; (8002b50 <HAL_RCC_ClockConfig+0x1c4>)
 8002b22:	685b      	ldr	r3, [r3, #4]
 8002b24:	091b      	lsrs	r3, r3, #4
 8002b26:	f003 030f 	and.w	r3, r3, #15
 8002b2a:	490a      	ldr	r1, [pc, #40]	; (8002b54 <HAL_RCC_ClockConfig+0x1c8>)
 8002b2c:	5ccb      	ldrb	r3, [r1, r3]
 8002b2e:	fa22 f303 	lsr.w	r3, r2, r3
 8002b32:	4a09      	ldr	r2, [pc, #36]	; (8002b58 <HAL_RCC_ClockConfig+0x1cc>)
 8002b34:	6013      	str	r3, [r2, #0]
 8002b36:	4b09      	ldr	r3, [pc, #36]	; (8002b5c <HAL_RCC_ClockConfig+0x1d0>)
 8002b38:	681b      	ldr	r3, [r3, #0]
 8002b3a:	4618      	mov	r0, r3
 8002b3c:	f7fd fcc4 	bl	80004c8 <HAL_InitTick>
 8002b40:	2300      	movs	r3, #0
 8002b42:	4618      	mov	r0, r3
 8002b44:	3710      	adds	r7, #16
 8002b46:	46bd      	mov	sp, r7
 8002b48:	bd80      	pop	{r7, pc}
 8002b4a:	bf00      	nop
 8002b4c:	40022000 	.word	0x40022000
 8002b50:	40021000 	.word	0x40021000
 8002b54:	080077fc 	.word	0x080077fc
 8002b58:	20000000 	.word	0x20000000
 8002b5c:	20000004 	.word	0x20000004

08002b60 <HAL_RCC_GetSysClockFreq>:
 8002b60:	b490      	push	{r4, r7}
 8002b62:	b08a      	sub	sp, #40	; 0x28
 8002b64:	af00      	add	r7, sp, #0
 8002b66:	4b29      	ldr	r3, [pc, #164]	; (8002c0c <HAL_RCC_GetSysClockFreq+0xac>)
 8002b68:	1d3c      	adds	r4, r7, #4
 8002b6a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8002b6c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8002b70:	f240 2301 	movw	r3, #513	; 0x201
 8002b74:	803b      	strh	r3, [r7, #0]
 8002b76:	2300      	movs	r3, #0
 8002b78:	61fb      	str	r3, [r7, #28]
 8002b7a:	2300      	movs	r3, #0
 8002b7c:	61bb      	str	r3, [r7, #24]
 8002b7e:	2300      	movs	r3, #0
 8002b80:	627b      	str	r3, [r7, #36]	; 0x24
 8002b82:	2300      	movs	r3, #0
 8002b84:	617b      	str	r3, [r7, #20]
 8002b86:	2300      	movs	r3, #0
 8002b88:	623b      	str	r3, [r7, #32]
 8002b8a:	4b21      	ldr	r3, [pc, #132]	; (8002c10 <HAL_RCC_GetSysClockFreq+0xb0>)
 8002b8c:	685b      	ldr	r3, [r3, #4]
 8002b8e:	61fb      	str	r3, [r7, #28]
 8002b90:	69fb      	ldr	r3, [r7, #28]
 8002b92:	f003 030c 	and.w	r3, r3, #12
 8002b96:	2b04      	cmp	r3, #4
 8002b98:	d002      	beq.n	8002ba0 <HAL_RCC_GetSysClockFreq+0x40>
 8002b9a:	2b08      	cmp	r3, #8
 8002b9c:	d003      	beq.n	8002ba6 <HAL_RCC_GetSysClockFreq+0x46>
 8002b9e:	e02b      	b.n	8002bf8 <HAL_RCC_GetSysClockFreq+0x98>
 8002ba0:	4b1c      	ldr	r3, [pc, #112]	; (8002c14 <HAL_RCC_GetSysClockFreq+0xb4>)
 8002ba2:	623b      	str	r3, [r7, #32]
 8002ba4:	e02b      	b.n	8002bfe <HAL_RCC_GetSysClockFreq+0x9e>
 8002ba6:	69fb      	ldr	r3, [r7, #28]
 8002ba8:	0c9b      	lsrs	r3, r3, #18
 8002baa:	f003 030f 	and.w	r3, r3, #15
 8002bae:	3328      	adds	r3, #40	; 0x28
 8002bb0:	443b      	add	r3, r7
 8002bb2:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 8002bb6:	617b      	str	r3, [r7, #20]
 8002bb8:	69fb      	ldr	r3, [r7, #28]
 8002bba:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002bbe:	2b00      	cmp	r3, #0
 8002bc0:	d012      	beq.n	8002be8 <HAL_RCC_GetSysClockFreq+0x88>
 8002bc2:	4b13      	ldr	r3, [pc, #76]	; (8002c10 <HAL_RCC_GetSysClockFreq+0xb0>)
 8002bc4:	685b      	ldr	r3, [r3, #4]
 8002bc6:	0c5b      	lsrs	r3, r3, #17
 8002bc8:	f003 0301 	and.w	r3, r3, #1
 8002bcc:	3328      	adds	r3, #40	; 0x28
 8002bce:	443b      	add	r3, r7
 8002bd0:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8002bd4:	61bb      	str	r3, [r7, #24]
 8002bd6:	697b      	ldr	r3, [r7, #20]
 8002bd8:	4a0e      	ldr	r2, [pc, #56]	; (8002c14 <HAL_RCC_GetSysClockFreq+0xb4>)
 8002bda:	fb03 f202 	mul.w	r2, r3, r2
 8002bde:	69bb      	ldr	r3, [r7, #24]
 8002be0:	fbb2 f3f3 	udiv	r3, r2, r3
 8002be4:	627b      	str	r3, [r7, #36]	; 0x24
 8002be6:	e004      	b.n	8002bf2 <HAL_RCC_GetSysClockFreq+0x92>
 8002be8:	697b      	ldr	r3, [r7, #20]
 8002bea:	4a0b      	ldr	r2, [pc, #44]	; (8002c18 <HAL_RCC_GetSysClockFreq+0xb8>)
 8002bec:	fb02 f303 	mul.w	r3, r2, r3
 8002bf0:	627b      	str	r3, [r7, #36]	; 0x24
 8002bf2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002bf4:	623b      	str	r3, [r7, #32]
 8002bf6:	e002      	b.n	8002bfe <HAL_RCC_GetSysClockFreq+0x9e>
 8002bf8:	4b06      	ldr	r3, [pc, #24]	; (8002c14 <HAL_RCC_GetSysClockFreq+0xb4>)
 8002bfa:	623b      	str	r3, [r7, #32]
 8002bfc:	bf00      	nop
 8002bfe:	6a3b      	ldr	r3, [r7, #32]
 8002c00:	4618      	mov	r0, r3
 8002c02:	3728      	adds	r7, #40	; 0x28
 8002c04:	46bd      	mov	sp, r7
 8002c06:	bc90      	pop	{r4, r7}
 8002c08:	4770      	bx	lr
 8002c0a:	bf00      	nop
 8002c0c:	0800778c 	.word	0x0800778c
 8002c10:	40021000 	.word	0x40021000
 8002c14:	007a1200 	.word	0x007a1200
 8002c18:	003d0900 	.word	0x003d0900

08002c1c <RCC_Delay>:
 8002c1c:	b480      	push	{r7}
 8002c1e:	b085      	sub	sp, #20
 8002c20:	af00      	add	r7, sp, #0
 8002c22:	6078      	str	r0, [r7, #4]
 8002c24:	4b0a      	ldr	r3, [pc, #40]	; (8002c50 <RCC_Delay+0x34>)
 8002c26:	681b      	ldr	r3, [r3, #0]
 8002c28:	4a0a      	ldr	r2, [pc, #40]	; (8002c54 <RCC_Delay+0x38>)
 8002c2a:	fba2 2303 	umull	r2, r3, r2, r3
 8002c2e:	0a5b      	lsrs	r3, r3, #9
 8002c30:	687a      	ldr	r2, [r7, #4]
 8002c32:	fb02 f303 	mul.w	r3, r2, r3
 8002c36:	60fb      	str	r3, [r7, #12]
 8002c38:	bf00      	nop
 8002c3a:	68fb      	ldr	r3, [r7, #12]
 8002c3c:	1e5a      	subs	r2, r3, #1
 8002c3e:	60fa      	str	r2, [r7, #12]
 8002c40:	2b00      	cmp	r3, #0
 8002c42:	d1f9      	bne.n	8002c38 <RCC_Delay+0x1c>
 8002c44:	bf00      	nop
 8002c46:	bf00      	nop
 8002c48:	3714      	adds	r7, #20
 8002c4a:	46bd      	mov	sp, r7
 8002c4c:	bc80      	pop	{r7}
 8002c4e:	4770      	bx	lr
 8002c50:	20000000 	.word	0x20000000
 8002c54:	10624dd3 	.word	0x10624dd3

08002c58 <HAL_RCCEx_PeriphCLKConfig>:
 8002c58:	b580      	push	{r7, lr}
 8002c5a:	b086      	sub	sp, #24
 8002c5c:	af00      	add	r7, sp, #0
 8002c5e:	6078      	str	r0, [r7, #4]
 8002c60:	2300      	movs	r3, #0
 8002c62:	613b      	str	r3, [r7, #16]
 8002c64:	2300      	movs	r3, #0
 8002c66:	60fb      	str	r3, [r7, #12]
 8002c68:	687b      	ldr	r3, [r7, #4]
 8002c6a:	681b      	ldr	r3, [r3, #0]
 8002c6c:	f003 0301 	and.w	r3, r3, #1
 8002c70:	2b00      	cmp	r3, #0
 8002c72:	d07d      	beq.n	8002d70 <HAL_RCCEx_PeriphCLKConfig+0x118>
 8002c74:	2300      	movs	r3, #0
 8002c76:	75fb      	strb	r3, [r7, #23]
 8002c78:	4b4f      	ldr	r3, [pc, #316]	; (8002db8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8002c7a:	69db      	ldr	r3, [r3, #28]
 8002c7c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002c80:	2b00      	cmp	r3, #0
 8002c82:	d10d      	bne.n	8002ca0 <HAL_RCCEx_PeriphCLKConfig+0x48>
 8002c84:	4b4c      	ldr	r3, [pc, #304]	; (8002db8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8002c86:	69db      	ldr	r3, [r3, #28]
 8002c88:	4a4b      	ldr	r2, [pc, #300]	; (8002db8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8002c8a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002c8e:	61d3      	str	r3, [r2, #28]
 8002c90:	4b49      	ldr	r3, [pc, #292]	; (8002db8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8002c92:	69db      	ldr	r3, [r3, #28]
 8002c94:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002c98:	60bb      	str	r3, [r7, #8]
 8002c9a:	68bb      	ldr	r3, [r7, #8]
 8002c9c:	2301      	movs	r3, #1
 8002c9e:	75fb      	strb	r3, [r7, #23]
 8002ca0:	4b46      	ldr	r3, [pc, #280]	; (8002dbc <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8002ca2:	681b      	ldr	r3, [r3, #0]
 8002ca4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002ca8:	2b00      	cmp	r3, #0
 8002caa:	d118      	bne.n	8002cde <HAL_RCCEx_PeriphCLKConfig+0x86>
 8002cac:	4b43      	ldr	r3, [pc, #268]	; (8002dbc <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8002cae:	681b      	ldr	r3, [r3, #0]
 8002cb0:	4a42      	ldr	r2, [pc, #264]	; (8002dbc <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8002cb2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002cb6:	6013      	str	r3, [r2, #0]
 8002cb8:	f7fd fc48 	bl	800054c <HAL_GetTick>
 8002cbc:	6138      	str	r0, [r7, #16]
 8002cbe:	e008      	b.n	8002cd2 <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8002cc0:	f7fd fc44 	bl	800054c <HAL_GetTick>
 8002cc4:	4602      	mov	r2, r0
 8002cc6:	693b      	ldr	r3, [r7, #16]
 8002cc8:	1ad3      	subs	r3, r2, r3
 8002cca:	2b64      	cmp	r3, #100	; 0x64
 8002ccc:	d901      	bls.n	8002cd2 <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8002cce:	2303      	movs	r3, #3
 8002cd0:	e06d      	b.n	8002dae <HAL_RCCEx_PeriphCLKConfig+0x156>
 8002cd2:	4b3a      	ldr	r3, [pc, #232]	; (8002dbc <HAL_RCCEx_PeriphCLKConfig+0x164>)
 8002cd4:	681b      	ldr	r3, [r3, #0]
 8002cd6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002cda:	2b00      	cmp	r3, #0
 8002cdc:	d0f0      	beq.n	8002cc0 <HAL_RCCEx_PeriphCLKConfig+0x68>
 8002cde:	4b36      	ldr	r3, [pc, #216]	; (8002db8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8002ce0:	6a1b      	ldr	r3, [r3, #32]
 8002ce2:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002ce6:	60fb      	str	r3, [r7, #12]
 8002ce8:	68fb      	ldr	r3, [r7, #12]
 8002cea:	2b00      	cmp	r3, #0
 8002cec:	d02e      	beq.n	8002d4c <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8002cee:	687b      	ldr	r3, [r7, #4]
 8002cf0:	685b      	ldr	r3, [r3, #4]
 8002cf2:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002cf6:	68fa      	ldr	r2, [r7, #12]
 8002cf8:	429a      	cmp	r2, r3
 8002cfa:	d027      	beq.n	8002d4c <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8002cfc:	4b2e      	ldr	r3, [pc, #184]	; (8002db8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8002cfe:	6a1b      	ldr	r3, [r3, #32]
 8002d00:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8002d04:	60fb      	str	r3, [r7, #12]
 8002d06:	4b2e      	ldr	r3, [pc, #184]	; (8002dc0 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 8002d08:	2201      	movs	r2, #1
 8002d0a:	601a      	str	r2, [r3, #0]
 8002d0c:	4b2c      	ldr	r3, [pc, #176]	; (8002dc0 <HAL_RCCEx_PeriphCLKConfig+0x168>)
 8002d0e:	2200      	movs	r2, #0
 8002d10:	601a      	str	r2, [r3, #0]
 8002d12:	4a29      	ldr	r2, [pc, #164]	; (8002db8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8002d14:	68fb      	ldr	r3, [r7, #12]
 8002d16:	6213      	str	r3, [r2, #32]
 8002d18:	68fb      	ldr	r3, [r7, #12]
 8002d1a:	f003 0301 	and.w	r3, r3, #1
 8002d1e:	2b00      	cmp	r3, #0
 8002d20:	d014      	beq.n	8002d4c <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8002d22:	f7fd fc13 	bl	800054c <HAL_GetTick>
 8002d26:	6138      	str	r0, [r7, #16]
 8002d28:	e00a      	b.n	8002d40 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 8002d2a:	f7fd fc0f 	bl	800054c <HAL_GetTick>
 8002d2e:	4602      	mov	r2, r0
 8002d30:	693b      	ldr	r3, [r7, #16]
 8002d32:	1ad3      	subs	r3, r2, r3
 8002d34:	f241 3288 	movw	r2, #5000	; 0x1388
 8002d38:	4293      	cmp	r3, r2
 8002d3a:	d901      	bls.n	8002d40 <HAL_RCCEx_PeriphCLKConfig+0xe8>
 8002d3c:	2303      	movs	r3, #3
 8002d3e:	e036      	b.n	8002dae <HAL_RCCEx_PeriphCLKConfig+0x156>
 8002d40:	4b1d      	ldr	r3, [pc, #116]	; (8002db8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8002d42:	6a1b      	ldr	r3, [r3, #32]
 8002d44:	f003 0302 	and.w	r3, r3, #2
 8002d48:	2b00      	cmp	r3, #0
 8002d4a:	d0ee      	beq.n	8002d2a <HAL_RCCEx_PeriphCLKConfig+0xd2>
 8002d4c:	4b1a      	ldr	r3, [pc, #104]	; (8002db8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8002d4e:	6a1b      	ldr	r3, [r3, #32]
 8002d50:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8002d54:	687b      	ldr	r3, [r7, #4]
 8002d56:	685b      	ldr	r3, [r3, #4]
 8002d58:	4917      	ldr	r1, [pc, #92]	; (8002db8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8002d5a:	4313      	orrs	r3, r2
 8002d5c:	620b      	str	r3, [r1, #32]
 8002d5e:	7dfb      	ldrb	r3, [r7, #23]
 8002d60:	2b01      	cmp	r3, #1
 8002d62:	d105      	bne.n	8002d70 <HAL_RCCEx_PeriphCLKConfig+0x118>
 8002d64:	4b14      	ldr	r3, [pc, #80]	; (8002db8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8002d66:	69db      	ldr	r3, [r3, #28]
 8002d68:	4a13      	ldr	r2, [pc, #76]	; (8002db8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8002d6a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8002d6e:	61d3      	str	r3, [r2, #28]
 8002d70:	687b      	ldr	r3, [r7, #4]
 8002d72:	681b      	ldr	r3, [r3, #0]
 8002d74:	f003 0302 	and.w	r3, r3, #2
 8002d78:	2b00      	cmp	r3, #0
 8002d7a:	d008      	beq.n	8002d8e <HAL_RCCEx_PeriphCLKConfig+0x136>
 8002d7c:	4b0e      	ldr	r3, [pc, #56]	; (8002db8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8002d7e:	685b      	ldr	r3, [r3, #4]
 8002d80:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 8002d84:	687b      	ldr	r3, [r7, #4]
 8002d86:	689b      	ldr	r3, [r3, #8]
 8002d88:	490b      	ldr	r1, [pc, #44]	; (8002db8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8002d8a:	4313      	orrs	r3, r2
 8002d8c:	604b      	str	r3, [r1, #4]
 8002d8e:	687b      	ldr	r3, [r7, #4]
 8002d90:	681b      	ldr	r3, [r3, #0]
 8002d92:	f003 0310 	and.w	r3, r3, #16
 8002d96:	2b00      	cmp	r3, #0
 8002d98:	d008      	beq.n	8002dac <HAL_RCCEx_PeriphCLKConfig+0x154>
 8002d9a:	4b07      	ldr	r3, [pc, #28]	; (8002db8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8002d9c:	685b      	ldr	r3, [r3, #4]
 8002d9e:	f423 0280 	bic.w	r2, r3, #4194304	; 0x400000
 8002da2:	687b      	ldr	r3, [r7, #4]
 8002da4:	68db      	ldr	r3, [r3, #12]
 8002da6:	4904      	ldr	r1, [pc, #16]	; (8002db8 <HAL_RCCEx_PeriphCLKConfig+0x160>)
 8002da8:	4313      	orrs	r3, r2
 8002daa:	604b      	str	r3, [r1, #4]
 8002dac:	2300      	movs	r3, #0
 8002dae:	4618      	mov	r0, r3
 8002db0:	3718      	adds	r7, #24
 8002db2:	46bd      	mov	sp, r7
 8002db4:	bd80      	pop	{r7, pc}
 8002db6:	bf00      	nop
 8002db8:	40021000 	.word	0x40021000
 8002dbc:	40007000 	.word	0x40007000
 8002dc0:	42420440 	.word	0x42420440

08002dc4 <USB_CoreInit>:
 8002dc4:	b084      	sub	sp, #16
 8002dc6:	b480      	push	{r7}
 8002dc8:	b083      	sub	sp, #12
 8002dca:	af00      	add	r7, sp, #0
 8002dcc:	6078      	str	r0, [r7, #4]
 8002dce:	f107 0014 	add.w	r0, r7, #20
 8002dd2:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8002dd6:	2300      	movs	r3, #0
 8002dd8:	4618      	mov	r0, r3
 8002dda:	370c      	adds	r7, #12
 8002ddc:	46bd      	mov	sp, r7
 8002dde:	bc80      	pop	{r7}
 8002de0:	b004      	add	sp, #16
 8002de2:	4770      	bx	lr

08002de4 <USB_EnableGlobalInt>:
 8002de4:	b480      	push	{r7}
 8002de6:	b085      	sub	sp, #20
 8002de8:	af00      	add	r7, sp, #0
 8002dea:	6078      	str	r0, [r7, #4]
 8002dec:	687b      	ldr	r3, [r7, #4]
 8002dee:	2200      	movs	r2, #0
 8002df0:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 8002df4:	f44f 433f 	mov.w	r3, #48896	; 0xbf00
 8002df8:	60fb      	str	r3, [r7, #12]
 8002dfa:	68fb      	ldr	r3, [r7, #12]
 8002dfc:	b29a      	uxth	r2, r3
 8002dfe:	687b      	ldr	r3, [r7, #4]
 8002e00:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 8002e04:	2300      	movs	r3, #0
 8002e06:	4618      	mov	r0, r3
 8002e08:	3714      	adds	r7, #20
 8002e0a:	46bd      	mov	sp, r7
 8002e0c:	bc80      	pop	{r7}
 8002e0e:	4770      	bx	lr

08002e10 <USB_DisableGlobalInt>:
 8002e10:	b480      	push	{r7}
 8002e12:	b085      	sub	sp, #20
 8002e14:	af00      	add	r7, sp, #0
 8002e16:	6078      	str	r0, [r7, #4]
 8002e18:	f44f 433f 	mov.w	r3, #48896	; 0xbf00
 8002e1c:	60fb      	str	r3, [r7, #12]
 8002e1e:	687b      	ldr	r3, [r7, #4]
 8002e20:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 8002e24:	b29a      	uxth	r2, r3
 8002e26:	68fb      	ldr	r3, [r7, #12]
 8002e28:	b29b      	uxth	r3, r3
 8002e2a:	43db      	mvns	r3, r3
 8002e2c:	b29b      	uxth	r3, r3
 8002e2e:	4013      	ands	r3, r2
 8002e30:	b29a      	uxth	r2, r3
 8002e32:	687b      	ldr	r3, [r7, #4]
 8002e34:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 8002e38:	2300      	movs	r3, #0
 8002e3a:	4618      	mov	r0, r3
 8002e3c:	3714      	adds	r7, #20
 8002e3e:	46bd      	mov	sp, r7
 8002e40:	bc80      	pop	{r7}
 8002e42:	4770      	bx	lr

08002e44 <USB_SetCurrentMode>:
 8002e44:	b480      	push	{r7}
 8002e46:	b083      	sub	sp, #12
 8002e48:	af00      	add	r7, sp, #0
 8002e4a:	6078      	str	r0, [r7, #4]
 8002e4c:	460b      	mov	r3, r1
 8002e4e:	70fb      	strb	r3, [r7, #3]
 8002e50:	2300      	movs	r3, #0
 8002e52:	4618      	mov	r0, r3
 8002e54:	370c      	adds	r7, #12
 8002e56:	46bd      	mov	sp, r7
 8002e58:	bc80      	pop	{r7}
 8002e5a:	4770      	bx	lr

08002e5c <USB_DevInit>:
 8002e5c:	b084      	sub	sp, #16
 8002e5e:	b480      	push	{r7}
 8002e60:	b083      	sub	sp, #12
 8002e62:	af00      	add	r7, sp, #0
 8002e64:	6078      	str	r0, [r7, #4]
 8002e66:	f107 0014 	add.w	r0, r7, #20
 8002e6a:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8002e6e:	687b      	ldr	r3, [r7, #4]
 8002e70:	2201      	movs	r2, #1
 8002e72:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 8002e76:	687b      	ldr	r3, [r7, #4]
 8002e78:	2200      	movs	r2, #0
 8002e7a:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 8002e7e:	687b      	ldr	r3, [r7, #4]
 8002e80:	2200      	movs	r2, #0
 8002e82:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 8002e86:	687b      	ldr	r3, [r7, #4]
 8002e88:	2200      	movs	r2, #0
 8002e8a:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
 8002e8e:	2300      	movs	r3, #0
 8002e90:	4618      	mov	r0, r3
 8002e92:	370c      	adds	r7, #12
 8002e94:	46bd      	mov	sp, r7
 8002e96:	bc80      	pop	{r7}
 8002e98:	b004      	add	sp, #16
 8002e9a:	4770      	bx	lr

08002e9c <USB_ActivateEndpoint>:
 8002e9c:	b480      	push	{r7}
 8002e9e:	b09b      	sub	sp, #108	; 0x6c
 8002ea0:	af00      	add	r7, sp, #0
 8002ea2:	6078      	str	r0, [r7, #4]
 8002ea4:	6039      	str	r1, [r7, #0]
 8002ea6:	2300      	movs	r3, #0
 8002ea8:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
 8002eac:	687a      	ldr	r2, [r7, #4]
 8002eae:	683b      	ldr	r3, [r7, #0]
 8002eb0:	781b      	ldrb	r3, [r3, #0]
 8002eb2:	009b      	lsls	r3, r3, #2
 8002eb4:	4413      	add	r3, r2
 8002eb6:	881b      	ldrh	r3, [r3, #0]
 8002eb8:	b29b      	uxth	r3, r3
 8002eba:	f423 43ec 	bic.w	r3, r3, #30208	; 0x7600
 8002ebe:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002ec2:	f8a7 3064 	strh.w	r3, [r7, #100]	; 0x64
 8002ec6:	683b      	ldr	r3, [r7, #0]
 8002ec8:	78db      	ldrb	r3, [r3, #3]
 8002eca:	2b03      	cmp	r3, #3
 8002ecc:	d81f      	bhi.n	8002f0e <USB_ActivateEndpoint+0x72>
 8002ece:	a201      	add	r2, pc, #4	; (adr r2, 8002ed4 <USB_ActivateEndpoint+0x38>)
 8002ed0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002ed4:	08002ee5 	.word	0x08002ee5
 8002ed8:	08002f01 	.word	0x08002f01
 8002edc:	08002f17 	.word	0x08002f17
 8002ee0:	08002ef3 	.word	0x08002ef3
 8002ee4:	f8b7 3064 	ldrh.w	r3, [r7, #100]	; 0x64
 8002ee8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002eec:	f8a7 3064 	strh.w	r3, [r7, #100]	; 0x64
 8002ef0:	e012      	b.n	8002f18 <USB_ActivateEndpoint+0x7c>
 8002ef2:	f8b7 3064 	ldrh.w	r3, [r7, #100]	; 0x64
 8002ef6:	f443 63c0 	orr.w	r3, r3, #1536	; 0x600
 8002efa:	f8a7 3064 	strh.w	r3, [r7, #100]	; 0x64
 8002efe:	e00b      	b.n	8002f18 <USB_ActivateEndpoint+0x7c>
 8002f00:	f8b7 3064 	ldrh.w	r3, [r7, #100]	; 0x64
 8002f04:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8002f08:	f8a7 3064 	strh.w	r3, [r7, #100]	; 0x64
 8002f0c:	e004      	b.n	8002f18 <USB_ActivateEndpoint+0x7c>
 8002f0e:	2301      	movs	r3, #1
 8002f10:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
 8002f14:	e000      	b.n	8002f18 <USB_ActivateEndpoint+0x7c>
 8002f16:	bf00      	nop
 8002f18:	687a      	ldr	r2, [r7, #4]
 8002f1a:	683b      	ldr	r3, [r7, #0]
 8002f1c:	781b      	ldrb	r3, [r3, #0]
 8002f1e:	009b      	lsls	r3, r3, #2
 8002f20:	441a      	add	r2, r3
 8002f22:	f8b7 3064 	ldrh.w	r3, [r7, #100]	; 0x64
 8002f26:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8002f2a:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 8002f2e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8002f32:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002f36:	b29b      	uxth	r3, r3
 8002f38:	8013      	strh	r3, [r2, #0]
 8002f3a:	687a      	ldr	r2, [r7, #4]
 8002f3c:	683b      	ldr	r3, [r7, #0]
 8002f3e:	781b      	ldrb	r3, [r3, #0]
 8002f40:	009b      	lsls	r3, r3, #2
 8002f42:	4413      	add	r3, r2
 8002f44:	881b      	ldrh	r3, [r3, #0]
 8002f46:	b29b      	uxth	r3, r3
 8002f48:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8002f4c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002f50:	b29a      	uxth	r2, r3
 8002f52:	683b      	ldr	r3, [r7, #0]
 8002f54:	781b      	ldrb	r3, [r3, #0]
 8002f56:	b29b      	uxth	r3, r3
 8002f58:	4313      	orrs	r3, r2
 8002f5a:	f8a7 305e 	strh.w	r3, [r7, #94]	; 0x5e
 8002f5e:	687a      	ldr	r2, [r7, #4]
 8002f60:	683b      	ldr	r3, [r7, #0]
 8002f62:	781b      	ldrb	r3, [r3, #0]
 8002f64:	009b      	lsls	r3, r3, #2
 8002f66:	441a      	add	r2, r3
 8002f68:	f8b7 305e 	ldrh.w	r3, [r7, #94]	; 0x5e
 8002f6c:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8002f70:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 8002f74:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8002f78:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002f7c:	b29b      	uxth	r3, r3
 8002f7e:	8013      	strh	r3, [r2, #0]
 8002f80:	683b      	ldr	r3, [r7, #0]
 8002f82:	7b1b      	ldrb	r3, [r3, #12]
 8002f84:	2b00      	cmp	r3, #0
 8002f86:	f040 8149 	bne.w	800321c <USB_ActivateEndpoint+0x380>
 8002f8a:	683b      	ldr	r3, [r7, #0]
 8002f8c:	785b      	ldrb	r3, [r3, #1]
 8002f8e:	2b00      	cmp	r3, #0
 8002f90:	f000 8084 	beq.w	800309c <USB_ActivateEndpoint+0x200>
 8002f94:	687b      	ldr	r3, [r7, #4]
 8002f96:	617b      	str	r3, [r7, #20]
 8002f98:	687b      	ldr	r3, [r7, #4]
 8002f9a:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8002f9e:	b29b      	uxth	r3, r3
 8002fa0:	461a      	mov	r2, r3
 8002fa2:	697b      	ldr	r3, [r7, #20]
 8002fa4:	4413      	add	r3, r2
 8002fa6:	617b      	str	r3, [r7, #20]
 8002fa8:	683b      	ldr	r3, [r7, #0]
 8002faa:	781b      	ldrb	r3, [r3, #0]
 8002fac:	011a      	lsls	r2, r3, #4
 8002fae:	697b      	ldr	r3, [r7, #20]
 8002fb0:	4413      	add	r3, r2
 8002fb2:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8002fb6:	613b      	str	r3, [r7, #16]
 8002fb8:	683b      	ldr	r3, [r7, #0]
 8002fba:	88db      	ldrh	r3, [r3, #6]
 8002fbc:	085b      	lsrs	r3, r3, #1
 8002fbe:	b29b      	uxth	r3, r3
 8002fc0:	005b      	lsls	r3, r3, #1
 8002fc2:	b29a      	uxth	r2, r3
 8002fc4:	693b      	ldr	r3, [r7, #16]
 8002fc6:	801a      	strh	r2, [r3, #0]
 8002fc8:	687a      	ldr	r2, [r7, #4]
 8002fca:	683b      	ldr	r3, [r7, #0]
 8002fcc:	781b      	ldrb	r3, [r3, #0]
 8002fce:	009b      	lsls	r3, r3, #2
 8002fd0:	4413      	add	r3, r2
 8002fd2:	881b      	ldrh	r3, [r3, #0]
 8002fd4:	81fb      	strh	r3, [r7, #14]
 8002fd6:	89fb      	ldrh	r3, [r7, #14]
 8002fd8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002fdc:	2b00      	cmp	r3, #0
 8002fde:	d01b      	beq.n	8003018 <USB_ActivateEndpoint+0x17c>
 8002fe0:	687a      	ldr	r2, [r7, #4]
 8002fe2:	683b      	ldr	r3, [r7, #0]
 8002fe4:	781b      	ldrb	r3, [r3, #0]
 8002fe6:	009b      	lsls	r3, r3, #2
 8002fe8:	4413      	add	r3, r2
 8002fea:	881b      	ldrh	r3, [r3, #0]
 8002fec:	b29b      	uxth	r3, r3
 8002fee:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8002ff2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002ff6:	81bb      	strh	r3, [r7, #12]
 8002ff8:	687a      	ldr	r2, [r7, #4]
 8002ffa:	683b      	ldr	r3, [r7, #0]
 8002ffc:	781b      	ldrb	r3, [r3, #0]
 8002ffe:	009b      	lsls	r3, r3, #2
 8003000:	441a      	add	r2, r3
 8003002:	89bb      	ldrh	r3, [r7, #12]
 8003004:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8003008:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 800300c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003010:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8003014:	b29b      	uxth	r3, r3
 8003016:	8013      	strh	r3, [r2, #0]
 8003018:	683b      	ldr	r3, [r7, #0]
 800301a:	78db      	ldrb	r3, [r3, #3]
 800301c:	2b01      	cmp	r3, #1
 800301e:	d020      	beq.n	8003062 <USB_ActivateEndpoint+0x1c6>
 8003020:	687a      	ldr	r2, [r7, #4]
 8003022:	683b      	ldr	r3, [r7, #0]
 8003024:	781b      	ldrb	r3, [r3, #0]
 8003026:	009b      	lsls	r3, r3, #2
 8003028:	4413      	add	r3, r2
 800302a:	881b      	ldrh	r3, [r3, #0]
 800302c:	b29b      	uxth	r3, r3
 800302e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8003032:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8003036:	813b      	strh	r3, [r7, #8]
 8003038:	893b      	ldrh	r3, [r7, #8]
 800303a:	f083 0320 	eor.w	r3, r3, #32
 800303e:	813b      	strh	r3, [r7, #8]
 8003040:	687a      	ldr	r2, [r7, #4]
 8003042:	683b      	ldr	r3, [r7, #0]
 8003044:	781b      	ldrb	r3, [r3, #0]
 8003046:	009b      	lsls	r3, r3, #2
 8003048:	441a      	add	r2, r3
 800304a:	893b      	ldrh	r3, [r7, #8]
 800304c:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8003050:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 8003054:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003058:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800305c:	b29b      	uxth	r3, r3
 800305e:	8013      	strh	r3, [r2, #0]
 8003060:	e27f      	b.n	8003562 <USB_ActivateEndpoint+0x6c6>
 8003062:	687a      	ldr	r2, [r7, #4]
 8003064:	683b      	ldr	r3, [r7, #0]
 8003066:	781b      	ldrb	r3, [r3, #0]
 8003068:	009b      	lsls	r3, r3, #2
 800306a:	4413      	add	r3, r2
 800306c:	881b      	ldrh	r3, [r3, #0]
 800306e:	b29b      	uxth	r3, r3
 8003070:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8003074:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8003078:	817b      	strh	r3, [r7, #10]
 800307a:	687a      	ldr	r2, [r7, #4]
 800307c:	683b      	ldr	r3, [r7, #0]
 800307e:	781b      	ldrb	r3, [r3, #0]
 8003080:	009b      	lsls	r3, r3, #2
 8003082:	441a      	add	r2, r3
 8003084:	897b      	ldrh	r3, [r7, #10]
 8003086:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 800308a:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 800308e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003092:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003096:	b29b      	uxth	r3, r3
 8003098:	8013      	strh	r3, [r2, #0]
 800309a:	e262      	b.n	8003562 <USB_ActivateEndpoint+0x6c6>
 800309c:	687b      	ldr	r3, [r7, #4]
 800309e:	62fb      	str	r3, [r7, #44]	; 0x2c
 80030a0:	687b      	ldr	r3, [r7, #4]
 80030a2:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 80030a6:	b29b      	uxth	r3, r3
 80030a8:	461a      	mov	r2, r3
 80030aa:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80030ac:	4413      	add	r3, r2
 80030ae:	62fb      	str	r3, [r7, #44]	; 0x2c
 80030b0:	683b      	ldr	r3, [r7, #0]
 80030b2:	781b      	ldrb	r3, [r3, #0]
 80030b4:	011a      	lsls	r2, r3, #4
 80030b6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80030b8:	4413      	add	r3, r2
 80030ba:	f503 6381 	add.w	r3, r3, #1032	; 0x408
 80030be:	62bb      	str	r3, [r7, #40]	; 0x28
 80030c0:	683b      	ldr	r3, [r7, #0]
 80030c2:	88db      	ldrh	r3, [r3, #6]
 80030c4:	085b      	lsrs	r3, r3, #1
 80030c6:	b29b      	uxth	r3, r3
 80030c8:	005b      	lsls	r3, r3, #1
 80030ca:	b29a      	uxth	r2, r3
 80030cc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80030ce:	801a      	strh	r2, [r3, #0]
 80030d0:	687b      	ldr	r3, [r7, #4]
 80030d2:	627b      	str	r3, [r7, #36]	; 0x24
 80030d4:	687b      	ldr	r3, [r7, #4]
 80030d6:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 80030da:	b29b      	uxth	r3, r3
 80030dc:	461a      	mov	r2, r3
 80030de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80030e0:	4413      	add	r3, r2
 80030e2:	627b      	str	r3, [r7, #36]	; 0x24
 80030e4:	683b      	ldr	r3, [r7, #0]
 80030e6:	781b      	ldrb	r3, [r3, #0]
 80030e8:	011a      	lsls	r2, r3, #4
 80030ea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80030ec:	4413      	add	r3, r2
 80030ee:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 80030f2:	623b      	str	r3, [r7, #32]
 80030f4:	683b      	ldr	r3, [r7, #0]
 80030f6:	691b      	ldr	r3, [r3, #16]
 80030f8:	2b00      	cmp	r3, #0
 80030fa:	d112      	bne.n	8003122 <USB_ActivateEndpoint+0x286>
 80030fc:	6a3b      	ldr	r3, [r7, #32]
 80030fe:	881b      	ldrh	r3, [r3, #0]
 8003100:	b29b      	uxth	r3, r3
 8003102:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 8003106:	b29a      	uxth	r2, r3
 8003108:	6a3b      	ldr	r3, [r7, #32]
 800310a:	801a      	strh	r2, [r3, #0]
 800310c:	6a3b      	ldr	r3, [r7, #32]
 800310e:	881b      	ldrh	r3, [r3, #0]
 8003110:	b29b      	uxth	r3, r3
 8003112:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8003116:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800311a:	b29a      	uxth	r2, r3
 800311c:	6a3b      	ldr	r3, [r7, #32]
 800311e:	801a      	strh	r2, [r3, #0]
 8003120:	e02f      	b.n	8003182 <USB_ActivateEndpoint+0x2e6>
 8003122:	683b      	ldr	r3, [r7, #0]
 8003124:	691b      	ldr	r3, [r3, #16]
 8003126:	2b3e      	cmp	r3, #62	; 0x3e
 8003128:	d813      	bhi.n	8003152 <USB_ActivateEndpoint+0x2b6>
 800312a:	683b      	ldr	r3, [r7, #0]
 800312c:	691b      	ldr	r3, [r3, #16]
 800312e:	085b      	lsrs	r3, r3, #1
 8003130:	663b      	str	r3, [r7, #96]	; 0x60
 8003132:	683b      	ldr	r3, [r7, #0]
 8003134:	691b      	ldr	r3, [r3, #16]
 8003136:	f003 0301 	and.w	r3, r3, #1
 800313a:	2b00      	cmp	r3, #0
 800313c:	d002      	beq.n	8003144 <USB_ActivateEndpoint+0x2a8>
 800313e:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8003140:	3301      	adds	r3, #1
 8003142:	663b      	str	r3, [r7, #96]	; 0x60
 8003144:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8003146:	b29b      	uxth	r3, r3
 8003148:	029b      	lsls	r3, r3, #10
 800314a:	b29a      	uxth	r2, r3
 800314c:	6a3b      	ldr	r3, [r7, #32]
 800314e:	801a      	strh	r2, [r3, #0]
 8003150:	e017      	b.n	8003182 <USB_ActivateEndpoint+0x2e6>
 8003152:	683b      	ldr	r3, [r7, #0]
 8003154:	691b      	ldr	r3, [r3, #16]
 8003156:	095b      	lsrs	r3, r3, #5
 8003158:	663b      	str	r3, [r7, #96]	; 0x60
 800315a:	683b      	ldr	r3, [r7, #0]
 800315c:	691b      	ldr	r3, [r3, #16]
 800315e:	f003 031f 	and.w	r3, r3, #31
 8003162:	2b00      	cmp	r3, #0
 8003164:	d102      	bne.n	800316c <USB_ActivateEndpoint+0x2d0>
 8003166:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8003168:	3b01      	subs	r3, #1
 800316a:	663b      	str	r3, [r7, #96]	; 0x60
 800316c:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800316e:	b29b      	uxth	r3, r3
 8003170:	029b      	lsls	r3, r3, #10
 8003172:	b29b      	uxth	r3, r3
 8003174:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8003178:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800317c:	b29a      	uxth	r2, r3
 800317e:	6a3b      	ldr	r3, [r7, #32]
 8003180:	801a      	strh	r2, [r3, #0]
 8003182:	687a      	ldr	r2, [r7, #4]
 8003184:	683b      	ldr	r3, [r7, #0]
 8003186:	781b      	ldrb	r3, [r3, #0]
 8003188:	009b      	lsls	r3, r3, #2
 800318a:	4413      	add	r3, r2
 800318c:	881b      	ldrh	r3, [r3, #0]
 800318e:	83fb      	strh	r3, [r7, #30]
 8003190:	8bfb      	ldrh	r3, [r7, #30]
 8003192:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8003196:	2b00      	cmp	r3, #0
 8003198:	d01b      	beq.n	80031d2 <USB_ActivateEndpoint+0x336>
 800319a:	687a      	ldr	r2, [r7, #4]
 800319c:	683b      	ldr	r3, [r7, #0]
 800319e:	781b      	ldrb	r3, [r3, #0]
 80031a0:	009b      	lsls	r3, r3, #2
 80031a2:	4413      	add	r3, r2
 80031a4:	881b      	ldrh	r3, [r3, #0]
 80031a6:	b29b      	uxth	r3, r3
 80031a8:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80031ac:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80031b0:	83bb      	strh	r3, [r7, #28]
 80031b2:	687a      	ldr	r2, [r7, #4]
 80031b4:	683b      	ldr	r3, [r7, #0]
 80031b6:	781b      	ldrb	r3, [r3, #0]
 80031b8:	009b      	lsls	r3, r3, #2
 80031ba:	441a      	add	r2, r3
 80031bc:	8bbb      	ldrh	r3, [r7, #28]
 80031be:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 80031c2:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 80031c6:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80031ca:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80031ce:	b29b      	uxth	r3, r3
 80031d0:	8013      	strh	r3, [r2, #0]
 80031d2:	687a      	ldr	r2, [r7, #4]
 80031d4:	683b      	ldr	r3, [r7, #0]
 80031d6:	781b      	ldrb	r3, [r3, #0]
 80031d8:	009b      	lsls	r3, r3, #2
 80031da:	4413      	add	r3, r2
 80031dc:	881b      	ldrh	r3, [r3, #0]
 80031de:	b29b      	uxth	r3, r3
 80031e0:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80031e4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80031e8:	837b      	strh	r3, [r7, #26]
 80031ea:	8b7b      	ldrh	r3, [r7, #26]
 80031ec:	f483 5380 	eor.w	r3, r3, #4096	; 0x1000
 80031f0:	837b      	strh	r3, [r7, #26]
 80031f2:	8b7b      	ldrh	r3, [r7, #26]
 80031f4:	f483 5300 	eor.w	r3, r3, #8192	; 0x2000
 80031f8:	837b      	strh	r3, [r7, #26]
 80031fa:	687a      	ldr	r2, [r7, #4]
 80031fc:	683b      	ldr	r3, [r7, #0]
 80031fe:	781b      	ldrb	r3, [r3, #0]
 8003200:	009b      	lsls	r3, r3, #2
 8003202:	441a      	add	r2, r3
 8003204:	8b7b      	ldrh	r3, [r7, #26]
 8003206:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 800320a:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 800320e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003212:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003216:	b29b      	uxth	r3, r3
 8003218:	8013      	strh	r3, [r2, #0]
 800321a:	e1a2      	b.n	8003562 <USB_ActivateEndpoint+0x6c6>
 800321c:	687a      	ldr	r2, [r7, #4]
 800321e:	683b      	ldr	r3, [r7, #0]
 8003220:	781b      	ldrb	r3, [r3, #0]
 8003222:	009b      	lsls	r3, r3, #2
 8003224:	4413      	add	r3, r2
 8003226:	881b      	ldrh	r3, [r3, #0]
 8003228:	b29b      	uxth	r3, r3
 800322a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800322e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003232:	f8a7 305c 	strh.w	r3, [r7, #92]	; 0x5c
 8003236:	687a      	ldr	r2, [r7, #4]
 8003238:	683b      	ldr	r3, [r7, #0]
 800323a:	781b      	ldrb	r3, [r3, #0]
 800323c:	009b      	lsls	r3, r3, #2
 800323e:	441a      	add	r2, r3
 8003240:	f8b7 305c 	ldrh.w	r3, [r7, #92]	; 0x5c
 8003244:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8003248:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 800324c:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 8003250:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003254:	b29b      	uxth	r3, r3
 8003256:	8013      	strh	r3, [r2, #0]
 8003258:	687b      	ldr	r3, [r7, #4]
 800325a:	65bb      	str	r3, [r7, #88]	; 0x58
 800325c:	687b      	ldr	r3, [r7, #4]
 800325e:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8003262:	b29b      	uxth	r3, r3
 8003264:	461a      	mov	r2, r3
 8003266:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8003268:	4413      	add	r3, r2
 800326a:	65bb      	str	r3, [r7, #88]	; 0x58
 800326c:	683b      	ldr	r3, [r7, #0]
 800326e:	781b      	ldrb	r3, [r3, #0]
 8003270:	011a      	lsls	r2, r3, #4
 8003272:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8003274:	4413      	add	r3, r2
 8003276:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800327a:	657b      	str	r3, [r7, #84]	; 0x54
 800327c:	683b      	ldr	r3, [r7, #0]
 800327e:	891b      	ldrh	r3, [r3, #8]
 8003280:	085b      	lsrs	r3, r3, #1
 8003282:	b29b      	uxth	r3, r3
 8003284:	005b      	lsls	r3, r3, #1
 8003286:	b29a      	uxth	r2, r3
 8003288:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800328a:	801a      	strh	r2, [r3, #0]
 800328c:	687b      	ldr	r3, [r7, #4]
 800328e:	653b      	str	r3, [r7, #80]	; 0x50
 8003290:	687b      	ldr	r3, [r7, #4]
 8003292:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8003296:	b29b      	uxth	r3, r3
 8003298:	461a      	mov	r2, r3
 800329a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800329c:	4413      	add	r3, r2
 800329e:	653b      	str	r3, [r7, #80]	; 0x50
 80032a0:	683b      	ldr	r3, [r7, #0]
 80032a2:	781b      	ldrb	r3, [r3, #0]
 80032a4:	011a      	lsls	r2, r3, #4
 80032a6:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80032a8:	4413      	add	r3, r2
 80032aa:	f503 6381 	add.w	r3, r3, #1032	; 0x408
 80032ae:	64fb      	str	r3, [r7, #76]	; 0x4c
 80032b0:	683b      	ldr	r3, [r7, #0]
 80032b2:	895b      	ldrh	r3, [r3, #10]
 80032b4:	085b      	lsrs	r3, r3, #1
 80032b6:	b29b      	uxth	r3, r3
 80032b8:	005b      	lsls	r3, r3, #1
 80032ba:	b29a      	uxth	r2, r3
 80032bc:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80032be:	801a      	strh	r2, [r3, #0]
 80032c0:	683b      	ldr	r3, [r7, #0]
 80032c2:	785b      	ldrb	r3, [r3, #1]
 80032c4:	2b00      	cmp	r3, #0
 80032c6:	f040 8091 	bne.w	80033ec <USB_ActivateEndpoint+0x550>
 80032ca:	687a      	ldr	r2, [r7, #4]
 80032cc:	683b      	ldr	r3, [r7, #0]
 80032ce:	781b      	ldrb	r3, [r3, #0]
 80032d0:	009b      	lsls	r3, r3, #2
 80032d2:	4413      	add	r3, r2
 80032d4:	881b      	ldrh	r3, [r3, #0]
 80032d6:	87bb      	strh	r3, [r7, #60]	; 0x3c
 80032d8:	8fbb      	ldrh	r3, [r7, #60]	; 0x3c
 80032da:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80032de:	2b00      	cmp	r3, #0
 80032e0:	d01b      	beq.n	800331a <USB_ActivateEndpoint+0x47e>
 80032e2:	687a      	ldr	r2, [r7, #4]
 80032e4:	683b      	ldr	r3, [r7, #0]
 80032e6:	781b      	ldrb	r3, [r3, #0]
 80032e8:	009b      	lsls	r3, r3, #2
 80032ea:	4413      	add	r3, r2
 80032ec:	881b      	ldrh	r3, [r3, #0]
 80032ee:	b29b      	uxth	r3, r3
 80032f0:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80032f4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80032f8:	877b      	strh	r3, [r7, #58]	; 0x3a
 80032fa:	687a      	ldr	r2, [r7, #4]
 80032fc:	683b      	ldr	r3, [r7, #0]
 80032fe:	781b      	ldrb	r3, [r3, #0]
 8003300:	009b      	lsls	r3, r3, #2
 8003302:	441a      	add	r2, r3
 8003304:	8f7b      	ldrh	r3, [r7, #58]	; 0x3a
 8003306:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 800330a:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 800330e:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8003312:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003316:	b29b      	uxth	r3, r3
 8003318:	8013      	strh	r3, [r2, #0]
 800331a:	687a      	ldr	r2, [r7, #4]
 800331c:	683b      	ldr	r3, [r7, #0]
 800331e:	781b      	ldrb	r3, [r3, #0]
 8003320:	009b      	lsls	r3, r3, #2
 8003322:	4413      	add	r3, r2
 8003324:	881b      	ldrh	r3, [r3, #0]
 8003326:	873b      	strh	r3, [r7, #56]	; 0x38
 8003328:	8f3b      	ldrh	r3, [r7, #56]	; 0x38
 800332a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800332e:	2b00      	cmp	r3, #0
 8003330:	d01b      	beq.n	800336a <USB_ActivateEndpoint+0x4ce>
 8003332:	687a      	ldr	r2, [r7, #4]
 8003334:	683b      	ldr	r3, [r7, #0]
 8003336:	781b      	ldrb	r3, [r3, #0]
 8003338:	009b      	lsls	r3, r3, #2
 800333a:	4413      	add	r3, r2
 800333c:	881b      	ldrh	r3, [r3, #0]
 800333e:	b29b      	uxth	r3, r3
 8003340:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8003344:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003348:	86fb      	strh	r3, [r7, #54]	; 0x36
 800334a:	687a      	ldr	r2, [r7, #4]
 800334c:	683b      	ldr	r3, [r7, #0]
 800334e:	781b      	ldrb	r3, [r3, #0]
 8003350:	009b      	lsls	r3, r3, #2
 8003352:	441a      	add	r2, r3
 8003354:	8efb      	ldrh	r3, [r7, #54]	; 0x36
 8003356:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 800335a:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 800335e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003362:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8003366:	b29b      	uxth	r3, r3
 8003368:	8013      	strh	r3, [r2, #0]
 800336a:	687a      	ldr	r2, [r7, #4]
 800336c:	683b      	ldr	r3, [r7, #0]
 800336e:	781b      	ldrb	r3, [r3, #0]
 8003370:	009b      	lsls	r3, r3, #2
 8003372:	4413      	add	r3, r2
 8003374:	881b      	ldrh	r3, [r3, #0]
 8003376:	b29b      	uxth	r3, r3
 8003378:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800337c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003380:	86bb      	strh	r3, [r7, #52]	; 0x34
 8003382:	8ebb      	ldrh	r3, [r7, #52]	; 0x34
 8003384:	f483 5380 	eor.w	r3, r3, #4096	; 0x1000
 8003388:	86bb      	strh	r3, [r7, #52]	; 0x34
 800338a:	8ebb      	ldrh	r3, [r7, #52]	; 0x34
 800338c:	f483 5300 	eor.w	r3, r3, #8192	; 0x2000
 8003390:	86bb      	strh	r3, [r7, #52]	; 0x34
 8003392:	687a      	ldr	r2, [r7, #4]
 8003394:	683b      	ldr	r3, [r7, #0]
 8003396:	781b      	ldrb	r3, [r3, #0]
 8003398:	009b      	lsls	r3, r3, #2
 800339a:	441a      	add	r2, r3
 800339c:	8ebb      	ldrh	r3, [r7, #52]	; 0x34
 800339e:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 80033a2:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 80033a6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80033aa:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80033ae:	b29b      	uxth	r3, r3
 80033b0:	8013      	strh	r3, [r2, #0]
 80033b2:	687a      	ldr	r2, [r7, #4]
 80033b4:	683b      	ldr	r3, [r7, #0]
 80033b6:	781b      	ldrb	r3, [r3, #0]
 80033b8:	009b      	lsls	r3, r3, #2
 80033ba:	4413      	add	r3, r2
 80033bc:	881b      	ldrh	r3, [r3, #0]
 80033be:	b29b      	uxth	r3, r3
 80033c0:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80033c4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80033c8:	867b      	strh	r3, [r7, #50]	; 0x32
 80033ca:	687a      	ldr	r2, [r7, #4]
 80033cc:	683b      	ldr	r3, [r7, #0]
 80033ce:	781b      	ldrb	r3, [r3, #0]
 80033d0:	009b      	lsls	r3, r3, #2
 80033d2:	441a      	add	r2, r3
 80033d4:	8e7b      	ldrh	r3, [r7, #50]	; 0x32
 80033d6:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 80033da:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 80033de:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80033e2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80033e6:	b29b      	uxth	r3, r3
 80033e8:	8013      	strh	r3, [r2, #0]
 80033ea:	e0ba      	b.n	8003562 <USB_ActivateEndpoint+0x6c6>
 80033ec:	687a      	ldr	r2, [r7, #4]
 80033ee:	683b      	ldr	r3, [r7, #0]
 80033f0:	781b      	ldrb	r3, [r3, #0]
 80033f2:	009b      	lsls	r3, r3, #2
 80033f4:	4413      	add	r3, r2
 80033f6:	881b      	ldrh	r3, [r3, #0]
 80033f8:	f8a7 304a 	strh.w	r3, [r7, #74]	; 0x4a
 80033fc:	f8b7 304a 	ldrh.w	r3, [r7, #74]	; 0x4a
 8003400:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8003404:	2b00      	cmp	r3, #0
 8003406:	d01d      	beq.n	8003444 <USB_ActivateEndpoint+0x5a8>
 8003408:	687a      	ldr	r2, [r7, #4]
 800340a:	683b      	ldr	r3, [r7, #0]
 800340c:	781b      	ldrb	r3, [r3, #0]
 800340e:	009b      	lsls	r3, r3, #2
 8003410:	4413      	add	r3, r2
 8003412:	881b      	ldrh	r3, [r3, #0]
 8003414:	b29b      	uxth	r3, r3
 8003416:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800341a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800341e:	f8a7 3048 	strh.w	r3, [r7, #72]	; 0x48
 8003422:	687a      	ldr	r2, [r7, #4]
 8003424:	683b      	ldr	r3, [r7, #0]
 8003426:	781b      	ldrb	r3, [r3, #0]
 8003428:	009b      	lsls	r3, r3, #2
 800342a:	441a      	add	r2, r3
 800342c:	f8b7 3048 	ldrh.w	r3, [r7, #72]	; 0x48
 8003430:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8003434:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 8003438:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800343c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003440:	b29b      	uxth	r3, r3
 8003442:	8013      	strh	r3, [r2, #0]
 8003444:	687a      	ldr	r2, [r7, #4]
 8003446:	683b      	ldr	r3, [r7, #0]
 8003448:	781b      	ldrb	r3, [r3, #0]
 800344a:	009b      	lsls	r3, r3, #2
 800344c:	4413      	add	r3, r2
 800344e:	881b      	ldrh	r3, [r3, #0]
 8003450:	f8a7 3046 	strh.w	r3, [r7, #70]	; 0x46
 8003454:	f8b7 3046 	ldrh.w	r3, [r7, #70]	; 0x46
 8003458:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800345c:	2b00      	cmp	r3, #0
 800345e:	d01d      	beq.n	800349c <USB_ActivateEndpoint+0x600>
 8003460:	687a      	ldr	r2, [r7, #4]
 8003462:	683b      	ldr	r3, [r7, #0]
 8003464:	781b      	ldrb	r3, [r3, #0]
 8003466:	009b      	lsls	r3, r3, #2
 8003468:	4413      	add	r3, r2
 800346a:	881b      	ldrh	r3, [r3, #0]
 800346c:	b29b      	uxth	r3, r3
 800346e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8003472:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003476:	f8a7 3044 	strh.w	r3, [r7, #68]	; 0x44
 800347a:	687a      	ldr	r2, [r7, #4]
 800347c:	683b      	ldr	r3, [r7, #0]
 800347e:	781b      	ldrb	r3, [r3, #0]
 8003480:	009b      	lsls	r3, r3, #2
 8003482:	441a      	add	r2, r3
 8003484:	f8b7 3044 	ldrh.w	r3, [r7, #68]	; 0x44
 8003488:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 800348c:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 8003490:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003494:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8003498:	b29b      	uxth	r3, r3
 800349a:	8013      	strh	r3, [r2, #0]
 800349c:	683b      	ldr	r3, [r7, #0]
 800349e:	78db      	ldrb	r3, [r3, #3]
 80034a0:	2b01      	cmp	r3, #1
 80034a2:	d024      	beq.n	80034ee <USB_ActivateEndpoint+0x652>
 80034a4:	687a      	ldr	r2, [r7, #4]
 80034a6:	683b      	ldr	r3, [r7, #0]
 80034a8:	781b      	ldrb	r3, [r3, #0]
 80034aa:	009b      	lsls	r3, r3, #2
 80034ac:	4413      	add	r3, r2
 80034ae:	881b      	ldrh	r3, [r3, #0]
 80034b0:	b29b      	uxth	r3, r3
 80034b2:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80034b6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80034ba:	f8a7 3040 	strh.w	r3, [r7, #64]	; 0x40
 80034be:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 80034c2:	f083 0320 	eor.w	r3, r3, #32
 80034c6:	f8a7 3040 	strh.w	r3, [r7, #64]	; 0x40
 80034ca:	687a      	ldr	r2, [r7, #4]
 80034cc:	683b      	ldr	r3, [r7, #0]
 80034ce:	781b      	ldrb	r3, [r3, #0]
 80034d0:	009b      	lsls	r3, r3, #2
 80034d2:	441a      	add	r2, r3
 80034d4:	f8b7 3040 	ldrh.w	r3, [r7, #64]	; 0x40
 80034d8:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 80034dc:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 80034e0:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80034e4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80034e8:	b29b      	uxth	r3, r3
 80034ea:	8013      	strh	r3, [r2, #0]
 80034ec:	e01d      	b.n	800352a <USB_ActivateEndpoint+0x68e>
 80034ee:	687a      	ldr	r2, [r7, #4]
 80034f0:	683b      	ldr	r3, [r7, #0]
 80034f2:	781b      	ldrb	r3, [r3, #0]
 80034f4:	009b      	lsls	r3, r3, #2
 80034f6:	4413      	add	r3, r2
 80034f8:	881b      	ldrh	r3, [r3, #0]
 80034fa:	b29b      	uxth	r3, r3
 80034fc:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8003500:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8003504:	f8a7 3042 	strh.w	r3, [r7, #66]	; 0x42
 8003508:	687a      	ldr	r2, [r7, #4]
 800350a:	683b      	ldr	r3, [r7, #0]
 800350c:	781b      	ldrb	r3, [r3, #0]
 800350e:	009b      	lsls	r3, r3, #2
 8003510:	441a      	add	r2, r3
 8003512:	f8b7 3042 	ldrh.w	r3, [r7, #66]	; 0x42
 8003516:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 800351a:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 800351e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003522:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003526:	b29b      	uxth	r3, r3
 8003528:	8013      	strh	r3, [r2, #0]
 800352a:	687a      	ldr	r2, [r7, #4]
 800352c:	683b      	ldr	r3, [r7, #0]
 800352e:	781b      	ldrb	r3, [r3, #0]
 8003530:	009b      	lsls	r3, r3, #2
 8003532:	4413      	add	r3, r2
 8003534:	881b      	ldrh	r3, [r3, #0]
 8003536:	b29b      	uxth	r3, r3
 8003538:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800353c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003540:	87fb      	strh	r3, [r7, #62]	; 0x3e
 8003542:	687a      	ldr	r2, [r7, #4]
 8003544:	683b      	ldr	r3, [r7, #0]
 8003546:	781b      	ldrb	r3, [r3, #0]
 8003548:	009b      	lsls	r3, r3, #2
 800354a:	441a      	add	r2, r3
 800354c:	8ffb      	ldrh	r3, [r7, #62]	; 0x3e
 800354e:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8003552:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 8003556:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800355a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800355e:	b29b      	uxth	r3, r3
 8003560:	8013      	strh	r3, [r2, #0]
 8003562:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 8003566:	4618      	mov	r0, r3
 8003568:	376c      	adds	r7, #108	; 0x6c
 800356a:	46bd      	mov	sp, r7
 800356c:	bc80      	pop	{r7}
 800356e:	4770      	bx	lr

08003570 <USB_DeactivateEndpoint>:
 8003570:	b480      	push	{r7}
 8003572:	b08d      	sub	sp, #52	; 0x34
 8003574:	af00      	add	r7, sp, #0
 8003576:	6078      	str	r0, [r7, #4]
 8003578:	6039      	str	r1, [r7, #0]
 800357a:	683b      	ldr	r3, [r7, #0]
 800357c:	7b1b      	ldrb	r3, [r3, #12]
 800357e:	2b00      	cmp	r3, #0
 8003580:	f040 808e 	bne.w	80036a0 <USB_DeactivateEndpoint+0x130>
 8003584:	683b      	ldr	r3, [r7, #0]
 8003586:	785b      	ldrb	r3, [r3, #1]
 8003588:	2b00      	cmp	r3, #0
 800358a:	d044      	beq.n	8003616 <USB_DeactivateEndpoint+0xa6>
 800358c:	687a      	ldr	r2, [r7, #4]
 800358e:	683b      	ldr	r3, [r7, #0]
 8003590:	781b      	ldrb	r3, [r3, #0]
 8003592:	009b      	lsls	r3, r3, #2
 8003594:	4413      	add	r3, r2
 8003596:	881b      	ldrh	r3, [r3, #0]
 8003598:	81bb      	strh	r3, [r7, #12]
 800359a:	89bb      	ldrh	r3, [r7, #12]
 800359c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80035a0:	2b00      	cmp	r3, #0
 80035a2:	d01b      	beq.n	80035dc <USB_DeactivateEndpoint+0x6c>
 80035a4:	687a      	ldr	r2, [r7, #4]
 80035a6:	683b      	ldr	r3, [r7, #0]
 80035a8:	781b      	ldrb	r3, [r3, #0]
 80035aa:	009b      	lsls	r3, r3, #2
 80035ac:	4413      	add	r3, r2
 80035ae:	881b      	ldrh	r3, [r3, #0]
 80035b0:	b29b      	uxth	r3, r3
 80035b2:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80035b6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80035ba:	817b      	strh	r3, [r7, #10]
 80035bc:	687a      	ldr	r2, [r7, #4]
 80035be:	683b      	ldr	r3, [r7, #0]
 80035c0:	781b      	ldrb	r3, [r3, #0]
 80035c2:	009b      	lsls	r3, r3, #2
 80035c4:	441a      	add	r2, r3
 80035c6:	897b      	ldrh	r3, [r7, #10]
 80035c8:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 80035cc:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 80035d0:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80035d4:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 80035d8:	b29b      	uxth	r3, r3
 80035da:	8013      	strh	r3, [r2, #0]
 80035dc:	687a      	ldr	r2, [r7, #4]
 80035de:	683b      	ldr	r3, [r7, #0]
 80035e0:	781b      	ldrb	r3, [r3, #0]
 80035e2:	009b      	lsls	r3, r3, #2
 80035e4:	4413      	add	r3, r2
 80035e6:	881b      	ldrh	r3, [r3, #0]
 80035e8:	b29b      	uxth	r3, r3
 80035ea:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80035ee:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80035f2:	813b      	strh	r3, [r7, #8]
 80035f4:	687a      	ldr	r2, [r7, #4]
 80035f6:	683b      	ldr	r3, [r7, #0]
 80035f8:	781b      	ldrb	r3, [r3, #0]
 80035fa:	009b      	lsls	r3, r3, #2
 80035fc:	441a      	add	r2, r3
 80035fe:	893b      	ldrh	r3, [r7, #8]
 8003600:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8003604:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 8003608:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800360c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003610:	b29b      	uxth	r3, r3
 8003612:	8013      	strh	r3, [r2, #0]
 8003614:	e192      	b.n	800393c <USB_DeactivateEndpoint+0x3cc>
 8003616:	687a      	ldr	r2, [r7, #4]
 8003618:	683b      	ldr	r3, [r7, #0]
 800361a:	781b      	ldrb	r3, [r3, #0]
 800361c:	009b      	lsls	r3, r3, #2
 800361e:	4413      	add	r3, r2
 8003620:	881b      	ldrh	r3, [r3, #0]
 8003622:	827b      	strh	r3, [r7, #18]
 8003624:	8a7b      	ldrh	r3, [r7, #18]
 8003626:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800362a:	2b00      	cmp	r3, #0
 800362c:	d01b      	beq.n	8003666 <USB_DeactivateEndpoint+0xf6>
 800362e:	687a      	ldr	r2, [r7, #4]
 8003630:	683b      	ldr	r3, [r7, #0]
 8003632:	781b      	ldrb	r3, [r3, #0]
 8003634:	009b      	lsls	r3, r3, #2
 8003636:	4413      	add	r3, r2
 8003638:	881b      	ldrh	r3, [r3, #0]
 800363a:	b29b      	uxth	r3, r3
 800363c:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8003640:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003644:	823b      	strh	r3, [r7, #16]
 8003646:	687a      	ldr	r2, [r7, #4]
 8003648:	683b      	ldr	r3, [r7, #0]
 800364a:	781b      	ldrb	r3, [r3, #0]
 800364c:	009b      	lsls	r3, r3, #2
 800364e:	441a      	add	r2, r3
 8003650:	8a3b      	ldrh	r3, [r7, #16]
 8003652:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8003656:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 800365a:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800365e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003662:	b29b      	uxth	r3, r3
 8003664:	8013      	strh	r3, [r2, #0]
 8003666:	687a      	ldr	r2, [r7, #4]
 8003668:	683b      	ldr	r3, [r7, #0]
 800366a:	781b      	ldrb	r3, [r3, #0]
 800366c:	009b      	lsls	r3, r3, #2
 800366e:	4413      	add	r3, r2
 8003670:	881b      	ldrh	r3, [r3, #0]
 8003672:	b29b      	uxth	r3, r3
 8003674:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8003678:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800367c:	81fb      	strh	r3, [r7, #14]
 800367e:	687a      	ldr	r2, [r7, #4]
 8003680:	683b      	ldr	r3, [r7, #0]
 8003682:	781b      	ldrb	r3, [r3, #0]
 8003684:	009b      	lsls	r3, r3, #2
 8003686:	441a      	add	r2, r3
 8003688:	89fb      	ldrh	r3, [r7, #14]
 800368a:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 800368e:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 8003692:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003696:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800369a:	b29b      	uxth	r3, r3
 800369c:	8013      	strh	r3, [r2, #0]
 800369e:	e14d      	b.n	800393c <USB_DeactivateEndpoint+0x3cc>
 80036a0:	683b      	ldr	r3, [r7, #0]
 80036a2:	785b      	ldrb	r3, [r3, #1]
 80036a4:	2b00      	cmp	r3, #0
 80036a6:	f040 80a5 	bne.w	80037f4 <USB_DeactivateEndpoint+0x284>
 80036aa:	687a      	ldr	r2, [r7, #4]
 80036ac:	683b      	ldr	r3, [r7, #0]
 80036ae:	781b      	ldrb	r3, [r3, #0]
 80036b0:	009b      	lsls	r3, r3, #2
 80036b2:	4413      	add	r3, r2
 80036b4:	881b      	ldrh	r3, [r3, #0]
 80036b6:	843b      	strh	r3, [r7, #32]
 80036b8:	8c3b      	ldrh	r3, [r7, #32]
 80036ba:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80036be:	2b00      	cmp	r3, #0
 80036c0:	d01b      	beq.n	80036fa <USB_DeactivateEndpoint+0x18a>
 80036c2:	687a      	ldr	r2, [r7, #4]
 80036c4:	683b      	ldr	r3, [r7, #0]
 80036c6:	781b      	ldrb	r3, [r3, #0]
 80036c8:	009b      	lsls	r3, r3, #2
 80036ca:	4413      	add	r3, r2
 80036cc:	881b      	ldrh	r3, [r3, #0]
 80036ce:	b29b      	uxth	r3, r3
 80036d0:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80036d4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80036d8:	83fb      	strh	r3, [r7, #30]
 80036da:	687a      	ldr	r2, [r7, #4]
 80036dc:	683b      	ldr	r3, [r7, #0]
 80036de:	781b      	ldrb	r3, [r3, #0]
 80036e0:	009b      	lsls	r3, r3, #2
 80036e2:	441a      	add	r2, r3
 80036e4:	8bfb      	ldrh	r3, [r7, #30]
 80036e6:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 80036ea:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 80036ee:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80036f2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80036f6:	b29b      	uxth	r3, r3
 80036f8:	8013      	strh	r3, [r2, #0]
 80036fa:	687a      	ldr	r2, [r7, #4]
 80036fc:	683b      	ldr	r3, [r7, #0]
 80036fe:	781b      	ldrb	r3, [r3, #0]
 8003700:	009b      	lsls	r3, r3, #2
 8003702:	4413      	add	r3, r2
 8003704:	881b      	ldrh	r3, [r3, #0]
 8003706:	83bb      	strh	r3, [r7, #28]
 8003708:	8bbb      	ldrh	r3, [r7, #28]
 800370a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800370e:	2b00      	cmp	r3, #0
 8003710:	d01b      	beq.n	800374a <USB_DeactivateEndpoint+0x1da>
 8003712:	687a      	ldr	r2, [r7, #4]
 8003714:	683b      	ldr	r3, [r7, #0]
 8003716:	781b      	ldrb	r3, [r3, #0]
 8003718:	009b      	lsls	r3, r3, #2
 800371a:	4413      	add	r3, r2
 800371c:	881b      	ldrh	r3, [r3, #0]
 800371e:	b29b      	uxth	r3, r3
 8003720:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8003724:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003728:	837b      	strh	r3, [r7, #26]
 800372a:	687a      	ldr	r2, [r7, #4]
 800372c:	683b      	ldr	r3, [r7, #0]
 800372e:	781b      	ldrb	r3, [r3, #0]
 8003730:	009b      	lsls	r3, r3, #2
 8003732:	441a      	add	r2, r3
 8003734:	8b7b      	ldrh	r3, [r7, #26]
 8003736:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 800373a:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 800373e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003742:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8003746:	b29b      	uxth	r3, r3
 8003748:	8013      	strh	r3, [r2, #0]
 800374a:	687a      	ldr	r2, [r7, #4]
 800374c:	683b      	ldr	r3, [r7, #0]
 800374e:	781b      	ldrb	r3, [r3, #0]
 8003750:	009b      	lsls	r3, r3, #2
 8003752:	4413      	add	r3, r2
 8003754:	881b      	ldrh	r3, [r3, #0]
 8003756:	b29b      	uxth	r3, r3
 8003758:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800375c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003760:	833b      	strh	r3, [r7, #24]
 8003762:	687a      	ldr	r2, [r7, #4]
 8003764:	683b      	ldr	r3, [r7, #0]
 8003766:	781b      	ldrb	r3, [r3, #0]
 8003768:	009b      	lsls	r3, r3, #2
 800376a:	441a      	add	r2, r3
 800376c:	8b3b      	ldrh	r3, [r7, #24]
 800376e:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8003772:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 8003776:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800377a:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 800377e:	b29b      	uxth	r3, r3
 8003780:	8013      	strh	r3, [r2, #0]
 8003782:	687a      	ldr	r2, [r7, #4]
 8003784:	683b      	ldr	r3, [r7, #0]
 8003786:	781b      	ldrb	r3, [r3, #0]
 8003788:	009b      	lsls	r3, r3, #2
 800378a:	4413      	add	r3, r2
 800378c:	881b      	ldrh	r3, [r3, #0]
 800378e:	b29b      	uxth	r3, r3
 8003790:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8003794:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003798:	82fb      	strh	r3, [r7, #22]
 800379a:	687a      	ldr	r2, [r7, #4]
 800379c:	683b      	ldr	r3, [r7, #0]
 800379e:	781b      	ldrb	r3, [r3, #0]
 80037a0:	009b      	lsls	r3, r3, #2
 80037a2:	441a      	add	r2, r3
 80037a4:	8afb      	ldrh	r3, [r7, #22]
 80037a6:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 80037aa:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 80037ae:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80037b2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80037b6:	b29b      	uxth	r3, r3
 80037b8:	8013      	strh	r3, [r2, #0]
 80037ba:	687a      	ldr	r2, [r7, #4]
 80037bc:	683b      	ldr	r3, [r7, #0]
 80037be:	781b      	ldrb	r3, [r3, #0]
 80037c0:	009b      	lsls	r3, r3, #2
 80037c2:	4413      	add	r3, r2
 80037c4:	881b      	ldrh	r3, [r3, #0]
 80037c6:	b29b      	uxth	r3, r3
 80037c8:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80037cc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80037d0:	82bb      	strh	r3, [r7, #20]
 80037d2:	687a      	ldr	r2, [r7, #4]
 80037d4:	683b      	ldr	r3, [r7, #0]
 80037d6:	781b      	ldrb	r3, [r3, #0]
 80037d8:	009b      	lsls	r3, r3, #2
 80037da:	441a      	add	r2, r3
 80037dc:	8abb      	ldrh	r3, [r7, #20]
 80037de:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 80037e2:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 80037e6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80037ea:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80037ee:	b29b      	uxth	r3, r3
 80037f0:	8013      	strh	r3, [r2, #0]
 80037f2:	e0a3      	b.n	800393c <USB_DeactivateEndpoint+0x3cc>
 80037f4:	687a      	ldr	r2, [r7, #4]
 80037f6:	683b      	ldr	r3, [r7, #0]
 80037f8:	781b      	ldrb	r3, [r3, #0]
 80037fa:	009b      	lsls	r3, r3, #2
 80037fc:	4413      	add	r3, r2
 80037fe:	881b      	ldrh	r3, [r3, #0]
 8003800:	85fb      	strh	r3, [r7, #46]	; 0x2e
 8003802:	8dfb      	ldrh	r3, [r7, #46]	; 0x2e
 8003804:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8003808:	2b00      	cmp	r3, #0
 800380a:	d01b      	beq.n	8003844 <USB_DeactivateEndpoint+0x2d4>
 800380c:	687a      	ldr	r2, [r7, #4]
 800380e:	683b      	ldr	r3, [r7, #0]
 8003810:	781b      	ldrb	r3, [r3, #0]
 8003812:	009b      	lsls	r3, r3, #2
 8003814:	4413      	add	r3, r2
 8003816:	881b      	ldrh	r3, [r3, #0]
 8003818:	b29b      	uxth	r3, r3
 800381a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800381e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003822:	85bb      	strh	r3, [r7, #44]	; 0x2c
 8003824:	687a      	ldr	r2, [r7, #4]
 8003826:	683b      	ldr	r3, [r7, #0]
 8003828:	781b      	ldrb	r3, [r3, #0]
 800382a:	009b      	lsls	r3, r3, #2
 800382c:	441a      	add	r2, r3
 800382e:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8003830:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8003834:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 8003838:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800383c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003840:	b29b      	uxth	r3, r3
 8003842:	8013      	strh	r3, [r2, #0]
 8003844:	687a      	ldr	r2, [r7, #4]
 8003846:	683b      	ldr	r3, [r7, #0]
 8003848:	781b      	ldrb	r3, [r3, #0]
 800384a:	009b      	lsls	r3, r3, #2
 800384c:	4413      	add	r3, r2
 800384e:	881b      	ldrh	r3, [r3, #0]
 8003850:	857b      	strh	r3, [r7, #42]	; 0x2a
 8003852:	8d7b      	ldrh	r3, [r7, #42]	; 0x2a
 8003854:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003858:	2b00      	cmp	r3, #0
 800385a:	d01b      	beq.n	8003894 <USB_DeactivateEndpoint+0x324>
 800385c:	687a      	ldr	r2, [r7, #4]
 800385e:	683b      	ldr	r3, [r7, #0]
 8003860:	781b      	ldrb	r3, [r3, #0]
 8003862:	009b      	lsls	r3, r3, #2
 8003864:	4413      	add	r3, r2
 8003866:	881b      	ldrh	r3, [r3, #0]
 8003868:	b29b      	uxth	r3, r3
 800386a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800386e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003872:	853b      	strh	r3, [r7, #40]	; 0x28
 8003874:	687a      	ldr	r2, [r7, #4]
 8003876:	683b      	ldr	r3, [r7, #0]
 8003878:	781b      	ldrb	r3, [r3, #0]
 800387a:	009b      	lsls	r3, r3, #2
 800387c:	441a      	add	r2, r3
 800387e:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 8003880:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8003884:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 8003888:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800388c:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8003890:	b29b      	uxth	r3, r3
 8003892:	8013      	strh	r3, [r2, #0]
 8003894:	687a      	ldr	r2, [r7, #4]
 8003896:	683b      	ldr	r3, [r7, #0]
 8003898:	781b      	ldrb	r3, [r3, #0]
 800389a:	009b      	lsls	r3, r3, #2
 800389c:	4413      	add	r3, r2
 800389e:	881b      	ldrh	r3, [r3, #0]
 80038a0:	b29b      	uxth	r3, r3
 80038a2:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80038a6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80038aa:	84fb      	strh	r3, [r7, #38]	; 0x26
 80038ac:	687a      	ldr	r2, [r7, #4]
 80038ae:	683b      	ldr	r3, [r7, #0]
 80038b0:	781b      	ldrb	r3, [r3, #0]
 80038b2:	009b      	lsls	r3, r3, #2
 80038b4:	441a      	add	r2, r3
 80038b6:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 80038b8:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 80038bc:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 80038c0:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80038c4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80038c8:	b29b      	uxth	r3, r3
 80038ca:	8013      	strh	r3, [r2, #0]
 80038cc:	687a      	ldr	r2, [r7, #4]
 80038ce:	683b      	ldr	r3, [r7, #0]
 80038d0:	781b      	ldrb	r3, [r3, #0]
 80038d2:	009b      	lsls	r3, r3, #2
 80038d4:	4413      	add	r3, r2
 80038d6:	881b      	ldrh	r3, [r3, #0]
 80038d8:	b29b      	uxth	r3, r3
 80038da:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80038de:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80038e2:	84bb      	strh	r3, [r7, #36]	; 0x24
 80038e4:	687a      	ldr	r2, [r7, #4]
 80038e6:	683b      	ldr	r3, [r7, #0]
 80038e8:	781b      	ldrb	r3, [r3, #0]
 80038ea:	009b      	lsls	r3, r3, #2
 80038ec:	441a      	add	r2, r3
 80038ee:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80038f0:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 80038f4:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 80038f8:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80038fc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003900:	b29b      	uxth	r3, r3
 8003902:	8013      	strh	r3, [r2, #0]
 8003904:	687a      	ldr	r2, [r7, #4]
 8003906:	683b      	ldr	r3, [r7, #0]
 8003908:	781b      	ldrb	r3, [r3, #0]
 800390a:	009b      	lsls	r3, r3, #2
 800390c:	4413      	add	r3, r2
 800390e:	881b      	ldrh	r3, [r3, #0]
 8003910:	b29b      	uxth	r3, r3
 8003912:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8003916:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800391a:	847b      	strh	r3, [r7, #34]	; 0x22
 800391c:	687a      	ldr	r2, [r7, #4]
 800391e:	683b      	ldr	r3, [r7, #0]
 8003920:	781b      	ldrb	r3, [r3, #0]
 8003922:	009b      	lsls	r3, r3, #2
 8003924:	441a      	add	r2, r3
 8003926:	8c7b      	ldrh	r3, [r7, #34]	; 0x22
 8003928:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 800392c:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 8003930:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003934:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003938:	b29b      	uxth	r3, r3
 800393a:	8013      	strh	r3, [r2, #0]
 800393c:	2300      	movs	r3, #0
 800393e:	4618      	mov	r0, r3
 8003940:	3734      	adds	r7, #52	; 0x34
 8003942:	46bd      	mov	sp, r7
 8003944:	bc80      	pop	{r7}
 8003946:	4770      	bx	lr

08003948 <USB_EPStartXfer>:
 8003948:	b580      	push	{r7, lr}
 800394a:	b0cc      	sub	sp, #304	; 0x130
 800394c:	af00      	add	r7, sp, #0
 800394e:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003952:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8003956:	6018      	str	r0, [r3, #0]
 8003958:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800395c:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003960:	6019      	str	r1, [r3, #0]
 8003962:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003966:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 800396a:	681b      	ldr	r3, [r3, #0]
 800396c:	785b      	ldrb	r3, [r3, #1]
 800396e:	2b01      	cmp	r3, #1
 8003970:	f041 817d 	bne.w	8004c6e <USB_EPStartXfer+0x1326>
 8003974:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003978:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 800397c:	681b      	ldr	r3, [r3, #0]
 800397e:	699a      	ldr	r2, [r3, #24]
 8003980:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003984:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003988:	681b      	ldr	r3, [r3, #0]
 800398a:	691b      	ldr	r3, [r3, #16]
 800398c:	429a      	cmp	r2, r3
 800398e:	d908      	bls.n	80039a2 <USB_EPStartXfer+0x5a>
 8003990:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003994:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003998:	681b      	ldr	r3, [r3, #0]
 800399a:	691b      	ldr	r3, [r3, #16]
 800399c:	f8c7 312c 	str.w	r3, [r7, #300]	; 0x12c
 80039a0:	e007      	b.n	80039b2 <USB_EPStartXfer+0x6a>
 80039a2:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80039a6:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80039aa:	681b      	ldr	r3, [r3, #0]
 80039ac:	699b      	ldr	r3, [r3, #24]
 80039ae:	f8c7 312c 	str.w	r3, [r7, #300]	; 0x12c
 80039b2:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80039b6:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80039ba:	681b      	ldr	r3, [r3, #0]
 80039bc:	7b1b      	ldrb	r3, [r3, #12]
 80039be:	2b00      	cmp	r3, #0
 80039c0:	d152      	bne.n	8003a68 <USB_EPStartXfer+0x120>
 80039c2:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80039c6:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80039ca:	681b      	ldr	r3, [r3, #0]
 80039cc:	6959      	ldr	r1, [r3, #20]
 80039ce:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80039d2:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80039d6:	681b      	ldr	r3, [r3, #0]
 80039d8:	88da      	ldrh	r2, [r3, #6]
 80039da:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 80039de:	b29b      	uxth	r3, r3
 80039e0:	f507 7098 	add.w	r0, r7, #304	; 0x130
 80039e4:	f5a0 7096 	sub.w	r0, r0, #300	; 0x12c
 80039e8:	6800      	ldr	r0, [r0, #0]
 80039ea:	f001 ff23 	bl	8005834 <USB_WritePMA>
 80039ee:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80039f2:	f5a3 7390 	sub.w	r3, r3, #288	; 0x120
 80039f6:	f507 7298 	add.w	r2, r7, #304	; 0x130
 80039fa:	f5a2 7296 	sub.w	r2, r2, #300	; 0x12c
 80039fe:	6812      	ldr	r2, [r2, #0]
 8003a00:	601a      	str	r2, [r3, #0]
 8003a02:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003a06:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8003a0a:	681b      	ldr	r3, [r3, #0]
 8003a0c:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8003a10:	b29b      	uxth	r3, r3
 8003a12:	4619      	mov	r1, r3
 8003a14:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003a18:	f5a3 7390 	sub.w	r3, r3, #288	; 0x120
 8003a1c:	f507 7298 	add.w	r2, r7, #304	; 0x130
 8003a20:	f5a2 7290 	sub.w	r2, r2, #288	; 0x120
 8003a24:	6812      	ldr	r2, [r2, #0]
 8003a26:	440a      	add	r2, r1
 8003a28:	601a      	str	r2, [r3, #0]
 8003a2a:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003a2e:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003a32:	681b      	ldr	r3, [r3, #0]
 8003a34:	781b      	ldrb	r3, [r3, #0]
 8003a36:	011a      	lsls	r2, r3, #4
 8003a38:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003a3c:	f5a3 7390 	sub.w	r3, r3, #288	; 0x120
 8003a40:	681b      	ldr	r3, [r3, #0]
 8003a42:	4413      	add	r3, r2
 8003a44:	f203 4204 	addw	r2, r3, #1028	; 0x404
 8003a48:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003a4c:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 8003a50:	601a      	str	r2, [r3, #0]
 8003a52:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8003a56:	b29a      	uxth	r2, r3
 8003a58:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003a5c:	f5a3 7392 	sub.w	r3, r3, #292	; 0x124
 8003a60:	681b      	ldr	r3, [r3, #0]
 8003a62:	801a      	strh	r2, [r3, #0]
 8003a64:	f001 b8b5 	b.w	8004bd2 <USB_EPStartXfer+0x128a>
 8003a68:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003a6c:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003a70:	681b      	ldr	r3, [r3, #0]
 8003a72:	78db      	ldrb	r3, [r3, #3]
 8003a74:	2b02      	cmp	r3, #2
 8003a76:	f040 84c6 	bne.w	8004406 <USB_EPStartXfer+0xabe>
 8003a7a:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003a7e:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003a82:	681b      	ldr	r3, [r3, #0]
 8003a84:	6a1a      	ldr	r2, [r3, #32]
 8003a86:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003a8a:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003a8e:	681b      	ldr	r3, [r3, #0]
 8003a90:	691b      	ldr	r3, [r3, #16]
 8003a92:	429a      	cmp	r2, r3
 8003a94:	f240 8443 	bls.w	800431e <USB_EPStartXfer+0x9d6>
 8003a98:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003a9c:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8003aa0:	681a      	ldr	r2, [r3, #0]
 8003aa2:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003aa6:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003aaa:	681b      	ldr	r3, [r3, #0]
 8003aac:	781b      	ldrb	r3, [r3, #0]
 8003aae:	009b      	lsls	r3, r3, #2
 8003ab0:	4413      	add	r3, r2
 8003ab2:	881b      	ldrh	r3, [r3, #0]
 8003ab4:	b29b      	uxth	r3, r3
 8003ab6:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8003aba:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003abe:	f8a7 3056 	strh.w	r3, [r7, #86]	; 0x56
 8003ac2:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003ac6:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8003aca:	681a      	ldr	r2, [r3, #0]
 8003acc:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003ad0:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003ad4:	681b      	ldr	r3, [r3, #0]
 8003ad6:	781b      	ldrb	r3, [r3, #0]
 8003ad8:	009b      	lsls	r3, r3, #2
 8003ada:	441a      	add	r2, r3
 8003adc:	f8b7 3056 	ldrh.w	r3, [r7, #86]	; 0x56
 8003ae0:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8003ae4:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 8003ae8:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 8003aec:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003af0:	b29b      	uxth	r3, r3
 8003af2:	8013      	strh	r3, [r2, #0]
 8003af4:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003af8:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003afc:	681b      	ldr	r3, [r3, #0]
 8003afe:	6a1a      	ldr	r2, [r3, #32]
 8003b00:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8003b04:	1ad2      	subs	r2, r2, r3
 8003b06:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003b0a:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003b0e:	681b      	ldr	r3, [r3, #0]
 8003b10:	621a      	str	r2, [r3, #32]
 8003b12:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003b16:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8003b1a:	681a      	ldr	r2, [r3, #0]
 8003b1c:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003b20:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003b24:	681b      	ldr	r3, [r3, #0]
 8003b26:	781b      	ldrb	r3, [r3, #0]
 8003b28:	009b      	lsls	r3, r3, #2
 8003b2a:	4413      	add	r3, r2
 8003b2c:	881b      	ldrh	r3, [r3, #0]
 8003b2e:	b29b      	uxth	r3, r3
 8003b30:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003b34:	2b00      	cmp	r3, #0
 8003b36:	f000 823e 	beq.w	8003fb6 <USB_EPStartXfer+0x66e>
 8003b3a:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003b3e:	f5a3 7380 	sub.w	r3, r3, #256	; 0x100
 8003b42:	f507 7298 	add.w	r2, r7, #304	; 0x130
 8003b46:	f5a2 7296 	sub.w	r2, r2, #300	; 0x12c
 8003b4a:	6812      	ldr	r2, [r2, #0]
 8003b4c:	601a      	str	r2, [r3, #0]
 8003b4e:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003b52:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003b56:	681b      	ldr	r3, [r3, #0]
 8003b58:	785b      	ldrb	r3, [r3, #1]
 8003b5a:	2b00      	cmp	r3, #0
 8003b5c:	f040 809a 	bne.w	8003c94 <USB_EPStartXfer+0x34c>
 8003b60:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003b64:	f5a3 7384 	sub.w	r3, r3, #264	; 0x108
 8003b68:	f507 7298 	add.w	r2, r7, #304	; 0x130
 8003b6c:	f5a2 7296 	sub.w	r2, r2, #300	; 0x12c
 8003b70:	6812      	ldr	r2, [r2, #0]
 8003b72:	601a      	str	r2, [r3, #0]
 8003b74:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003b78:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8003b7c:	681b      	ldr	r3, [r3, #0]
 8003b7e:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8003b82:	b29b      	uxth	r3, r3
 8003b84:	4619      	mov	r1, r3
 8003b86:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003b8a:	f5a3 7384 	sub.w	r3, r3, #264	; 0x108
 8003b8e:	f507 7298 	add.w	r2, r7, #304	; 0x130
 8003b92:	f5a2 7284 	sub.w	r2, r2, #264	; 0x108
 8003b96:	6812      	ldr	r2, [r2, #0]
 8003b98:	440a      	add	r2, r1
 8003b9a:	601a      	str	r2, [r3, #0]
 8003b9c:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003ba0:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003ba4:	681b      	ldr	r3, [r3, #0]
 8003ba6:	781b      	ldrb	r3, [r3, #0]
 8003ba8:	011a      	lsls	r2, r3, #4
 8003baa:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003bae:	f5a3 7384 	sub.w	r3, r3, #264	; 0x108
 8003bb2:	681b      	ldr	r3, [r3, #0]
 8003bb4:	4413      	add	r3, r2
 8003bb6:	f203 420c 	addw	r2, r3, #1036	; 0x40c
 8003bba:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003bbe:	f5a3 7386 	sub.w	r3, r3, #268	; 0x10c
 8003bc2:	601a      	str	r2, [r3, #0]
 8003bc4:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8003bc8:	2b00      	cmp	r3, #0
 8003bca:	d122      	bne.n	8003c12 <USB_EPStartXfer+0x2ca>
 8003bcc:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003bd0:	f5a3 7386 	sub.w	r3, r3, #268	; 0x10c
 8003bd4:	681b      	ldr	r3, [r3, #0]
 8003bd6:	881b      	ldrh	r3, [r3, #0]
 8003bd8:	b29b      	uxth	r3, r3
 8003bda:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 8003bde:	b29a      	uxth	r2, r3
 8003be0:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003be4:	f5a3 7386 	sub.w	r3, r3, #268	; 0x10c
 8003be8:	681b      	ldr	r3, [r3, #0]
 8003bea:	801a      	strh	r2, [r3, #0]
 8003bec:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003bf0:	f5a3 7386 	sub.w	r3, r3, #268	; 0x10c
 8003bf4:	681b      	ldr	r3, [r3, #0]
 8003bf6:	881b      	ldrh	r3, [r3, #0]
 8003bf8:	b29b      	uxth	r3, r3
 8003bfa:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8003bfe:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8003c02:	b29a      	uxth	r2, r3
 8003c04:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003c08:	f5a3 7386 	sub.w	r3, r3, #268	; 0x10c
 8003c0c:	681b      	ldr	r3, [r3, #0]
 8003c0e:	801a      	strh	r2, [r3, #0]
 8003c10:	e079      	b.n	8003d06 <USB_EPStartXfer+0x3be>
 8003c12:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8003c16:	2b3e      	cmp	r3, #62	; 0x3e
 8003c18:	d81b      	bhi.n	8003c52 <USB_EPStartXfer+0x30a>
 8003c1a:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8003c1e:	085b      	lsrs	r3, r3, #1
 8003c20:	f8c7 3128 	str.w	r3, [r7, #296]	; 0x128
 8003c24:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8003c28:	f003 0301 	and.w	r3, r3, #1
 8003c2c:	2b00      	cmp	r3, #0
 8003c2e:	d004      	beq.n	8003c3a <USB_EPStartXfer+0x2f2>
 8003c30:	f8d7 3128 	ldr.w	r3, [r7, #296]	; 0x128
 8003c34:	3301      	adds	r3, #1
 8003c36:	f8c7 3128 	str.w	r3, [r7, #296]	; 0x128
 8003c3a:	f8d7 3128 	ldr.w	r3, [r7, #296]	; 0x128
 8003c3e:	b29b      	uxth	r3, r3
 8003c40:	029b      	lsls	r3, r3, #10
 8003c42:	b29a      	uxth	r2, r3
 8003c44:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003c48:	f5a3 7386 	sub.w	r3, r3, #268	; 0x10c
 8003c4c:	681b      	ldr	r3, [r3, #0]
 8003c4e:	801a      	strh	r2, [r3, #0]
 8003c50:	e059      	b.n	8003d06 <USB_EPStartXfer+0x3be>
 8003c52:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8003c56:	095b      	lsrs	r3, r3, #5
 8003c58:	f8c7 3128 	str.w	r3, [r7, #296]	; 0x128
 8003c5c:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8003c60:	f003 031f 	and.w	r3, r3, #31
 8003c64:	2b00      	cmp	r3, #0
 8003c66:	d104      	bne.n	8003c72 <USB_EPStartXfer+0x32a>
 8003c68:	f8d7 3128 	ldr.w	r3, [r7, #296]	; 0x128
 8003c6c:	3b01      	subs	r3, #1
 8003c6e:	f8c7 3128 	str.w	r3, [r7, #296]	; 0x128
 8003c72:	f8d7 3128 	ldr.w	r3, [r7, #296]	; 0x128
 8003c76:	b29b      	uxth	r3, r3
 8003c78:	029b      	lsls	r3, r3, #10
 8003c7a:	b29b      	uxth	r3, r3
 8003c7c:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8003c80:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8003c84:	b29a      	uxth	r2, r3
 8003c86:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003c8a:	f5a3 7386 	sub.w	r3, r3, #268	; 0x10c
 8003c8e:	681b      	ldr	r3, [r3, #0]
 8003c90:	801a      	strh	r2, [r3, #0]
 8003c92:	e038      	b.n	8003d06 <USB_EPStartXfer+0x3be>
 8003c94:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003c98:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003c9c:	681b      	ldr	r3, [r3, #0]
 8003c9e:	785b      	ldrb	r3, [r3, #1]
 8003ca0:	2b01      	cmp	r3, #1
 8003ca2:	d130      	bne.n	8003d06 <USB_EPStartXfer+0x3be>
 8003ca4:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003ca8:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8003cac:	681b      	ldr	r3, [r3, #0]
 8003cae:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8003cb2:	b29b      	uxth	r3, r3
 8003cb4:	4619      	mov	r1, r3
 8003cb6:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003cba:	f5a3 7380 	sub.w	r3, r3, #256	; 0x100
 8003cbe:	f507 7298 	add.w	r2, r7, #304	; 0x130
 8003cc2:	f5a2 7280 	sub.w	r2, r2, #256	; 0x100
 8003cc6:	6812      	ldr	r2, [r2, #0]
 8003cc8:	440a      	add	r2, r1
 8003cca:	601a      	str	r2, [r3, #0]
 8003ccc:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003cd0:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003cd4:	681b      	ldr	r3, [r3, #0]
 8003cd6:	781b      	ldrb	r3, [r3, #0]
 8003cd8:	011a      	lsls	r2, r3, #4
 8003cda:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003cde:	f5a3 7380 	sub.w	r3, r3, #256	; 0x100
 8003ce2:	681b      	ldr	r3, [r3, #0]
 8003ce4:	4413      	add	r3, r2
 8003ce6:	f203 420c 	addw	r2, r3, #1036	; 0x40c
 8003cea:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003cee:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8003cf2:	601a      	str	r2, [r3, #0]
 8003cf4:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8003cf8:	b29a      	uxth	r2, r3
 8003cfa:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003cfe:	f5a3 7382 	sub.w	r3, r3, #260	; 0x104
 8003d02:	681b      	ldr	r3, [r3, #0]
 8003d04:	801a      	strh	r2, [r3, #0]
 8003d06:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003d0a:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003d0e:	681b      	ldr	r3, [r3, #0]
 8003d10:	895b      	ldrh	r3, [r3, #10]
 8003d12:	f8a7 3096 	strh.w	r3, [r7, #150]	; 0x96
 8003d16:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003d1a:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003d1e:	681b      	ldr	r3, [r3, #0]
 8003d20:	6959      	ldr	r1, [r3, #20]
 8003d22:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8003d26:	b29b      	uxth	r3, r3
 8003d28:	f8b7 2096 	ldrh.w	r2, [r7, #150]	; 0x96
 8003d2c:	f507 7098 	add.w	r0, r7, #304	; 0x130
 8003d30:	f5a0 7096 	sub.w	r0, r0, #300	; 0x12c
 8003d34:	6800      	ldr	r0, [r0, #0]
 8003d36:	f001 fd7d 	bl	8005834 <USB_WritePMA>
 8003d3a:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003d3e:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003d42:	681b      	ldr	r3, [r3, #0]
 8003d44:	695a      	ldr	r2, [r3, #20]
 8003d46:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8003d4a:	441a      	add	r2, r3
 8003d4c:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003d50:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003d54:	681b      	ldr	r3, [r3, #0]
 8003d56:	615a      	str	r2, [r3, #20]
 8003d58:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003d5c:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003d60:	681b      	ldr	r3, [r3, #0]
 8003d62:	6a1a      	ldr	r2, [r3, #32]
 8003d64:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003d68:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003d6c:	681b      	ldr	r3, [r3, #0]
 8003d6e:	691b      	ldr	r3, [r3, #16]
 8003d70:	429a      	cmp	r2, r3
 8003d72:	d90f      	bls.n	8003d94 <USB_EPStartXfer+0x44c>
 8003d74:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003d78:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003d7c:	681b      	ldr	r3, [r3, #0]
 8003d7e:	6a1a      	ldr	r2, [r3, #32]
 8003d80:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8003d84:	1ad2      	subs	r2, r2, r3
 8003d86:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003d8a:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003d8e:	681b      	ldr	r3, [r3, #0]
 8003d90:	621a      	str	r2, [r3, #32]
 8003d92:	e00e      	b.n	8003db2 <USB_EPStartXfer+0x46a>
 8003d94:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003d98:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003d9c:	681b      	ldr	r3, [r3, #0]
 8003d9e:	6a1b      	ldr	r3, [r3, #32]
 8003da0:	f8c7 312c 	str.w	r3, [r7, #300]	; 0x12c
 8003da4:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003da8:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003dac:	681b      	ldr	r3, [r3, #0]
 8003dae:	2200      	movs	r2, #0
 8003db0:	621a      	str	r2, [r3, #32]
 8003db2:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003db6:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003dba:	681b      	ldr	r3, [r3, #0]
 8003dbc:	785b      	ldrb	r3, [r3, #1]
 8003dbe:	2b00      	cmp	r3, #0
 8003dc0:	f040 809a 	bne.w	8003ef8 <USB_EPStartXfer+0x5b0>
 8003dc4:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003dc8:	f5a3 738c 	sub.w	r3, r3, #280	; 0x118
 8003dcc:	f507 7298 	add.w	r2, r7, #304	; 0x130
 8003dd0:	f5a2 7296 	sub.w	r2, r2, #300	; 0x12c
 8003dd4:	6812      	ldr	r2, [r2, #0]
 8003dd6:	601a      	str	r2, [r3, #0]
 8003dd8:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003ddc:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8003de0:	681b      	ldr	r3, [r3, #0]
 8003de2:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8003de6:	b29b      	uxth	r3, r3
 8003de8:	4619      	mov	r1, r3
 8003dea:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003dee:	f5a3 738c 	sub.w	r3, r3, #280	; 0x118
 8003df2:	f507 7298 	add.w	r2, r7, #304	; 0x130
 8003df6:	f5a2 728c 	sub.w	r2, r2, #280	; 0x118
 8003dfa:	6812      	ldr	r2, [r2, #0]
 8003dfc:	440a      	add	r2, r1
 8003dfe:	601a      	str	r2, [r3, #0]
 8003e00:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003e04:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003e08:	681b      	ldr	r3, [r3, #0]
 8003e0a:	781b      	ldrb	r3, [r3, #0]
 8003e0c:	011a      	lsls	r2, r3, #4
 8003e0e:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003e12:	f5a3 738c 	sub.w	r3, r3, #280	; 0x118
 8003e16:	681b      	ldr	r3, [r3, #0]
 8003e18:	4413      	add	r3, r2
 8003e1a:	f203 4204 	addw	r2, r3, #1028	; 0x404
 8003e1e:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003e22:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 8003e26:	601a      	str	r2, [r3, #0]
 8003e28:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8003e2c:	2b00      	cmp	r3, #0
 8003e2e:	d122      	bne.n	8003e76 <USB_EPStartXfer+0x52e>
 8003e30:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003e34:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 8003e38:	681b      	ldr	r3, [r3, #0]
 8003e3a:	881b      	ldrh	r3, [r3, #0]
 8003e3c:	b29b      	uxth	r3, r3
 8003e3e:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 8003e42:	b29a      	uxth	r2, r3
 8003e44:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003e48:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 8003e4c:	681b      	ldr	r3, [r3, #0]
 8003e4e:	801a      	strh	r2, [r3, #0]
 8003e50:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003e54:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 8003e58:	681b      	ldr	r3, [r3, #0]
 8003e5a:	881b      	ldrh	r3, [r3, #0]
 8003e5c:	b29b      	uxth	r3, r3
 8003e5e:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8003e62:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8003e66:	b29a      	uxth	r2, r3
 8003e68:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003e6c:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 8003e70:	681b      	ldr	r3, [r3, #0]
 8003e72:	801a      	strh	r2, [r3, #0]
 8003e74:	e083      	b.n	8003f7e <USB_EPStartXfer+0x636>
 8003e76:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8003e7a:	2b3e      	cmp	r3, #62	; 0x3e
 8003e7c:	d81b      	bhi.n	8003eb6 <USB_EPStartXfer+0x56e>
 8003e7e:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8003e82:	085b      	lsrs	r3, r3, #1
 8003e84:	f8c7 3124 	str.w	r3, [r7, #292]	; 0x124
 8003e88:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8003e8c:	f003 0301 	and.w	r3, r3, #1
 8003e90:	2b00      	cmp	r3, #0
 8003e92:	d004      	beq.n	8003e9e <USB_EPStartXfer+0x556>
 8003e94:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 8003e98:	3301      	adds	r3, #1
 8003e9a:	f8c7 3124 	str.w	r3, [r7, #292]	; 0x124
 8003e9e:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 8003ea2:	b29b      	uxth	r3, r3
 8003ea4:	029b      	lsls	r3, r3, #10
 8003ea6:	b29a      	uxth	r2, r3
 8003ea8:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003eac:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 8003eb0:	681b      	ldr	r3, [r3, #0]
 8003eb2:	801a      	strh	r2, [r3, #0]
 8003eb4:	e063      	b.n	8003f7e <USB_EPStartXfer+0x636>
 8003eb6:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8003eba:	095b      	lsrs	r3, r3, #5
 8003ebc:	f8c7 3124 	str.w	r3, [r7, #292]	; 0x124
 8003ec0:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8003ec4:	f003 031f 	and.w	r3, r3, #31
 8003ec8:	2b00      	cmp	r3, #0
 8003eca:	d104      	bne.n	8003ed6 <USB_EPStartXfer+0x58e>
 8003ecc:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 8003ed0:	3b01      	subs	r3, #1
 8003ed2:	f8c7 3124 	str.w	r3, [r7, #292]	; 0x124
 8003ed6:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 8003eda:	b29b      	uxth	r3, r3
 8003edc:	029b      	lsls	r3, r3, #10
 8003ede:	b29b      	uxth	r3, r3
 8003ee0:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8003ee4:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8003ee8:	b29a      	uxth	r2, r3
 8003eea:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003eee:	f5a3 738e 	sub.w	r3, r3, #284	; 0x11c
 8003ef2:	681b      	ldr	r3, [r3, #0]
 8003ef4:	801a      	strh	r2, [r3, #0]
 8003ef6:	e042      	b.n	8003f7e <USB_EPStartXfer+0x636>
 8003ef8:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003efc:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003f00:	681b      	ldr	r3, [r3, #0]
 8003f02:	785b      	ldrb	r3, [r3, #1]
 8003f04:	2b01      	cmp	r3, #1
 8003f06:	d13a      	bne.n	8003f7e <USB_EPStartXfer+0x636>
 8003f08:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003f0c:	f5a3 7388 	sub.w	r3, r3, #272	; 0x110
 8003f10:	f507 7298 	add.w	r2, r7, #304	; 0x130
 8003f14:	f5a2 7296 	sub.w	r2, r2, #300	; 0x12c
 8003f18:	6812      	ldr	r2, [r2, #0]
 8003f1a:	601a      	str	r2, [r3, #0]
 8003f1c:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003f20:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8003f24:	681b      	ldr	r3, [r3, #0]
 8003f26:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8003f2a:	b29b      	uxth	r3, r3
 8003f2c:	4619      	mov	r1, r3
 8003f2e:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003f32:	f5a3 7388 	sub.w	r3, r3, #272	; 0x110
 8003f36:	f507 7298 	add.w	r2, r7, #304	; 0x130
 8003f3a:	f5a2 7288 	sub.w	r2, r2, #272	; 0x110
 8003f3e:	6812      	ldr	r2, [r2, #0]
 8003f40:	440a      	add	r2, r1
 8003f42:	601a      	str	r2, [r3, #0]
 8003f44:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003f48:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003f4c:	681b      	ldr	r3, [r3, #0]
 8003f4e:	781b      	ldrb	r3, [r3, #0]
 8003f50:	011a      	lsls	r2, r3, #4
 8003f52:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003f56:	f5a3 7388 	sub.w	r3, r3, #272	; 0x110
 8003f5a:	681b      	ldr	r3, [r3, #0]
 8003f5c:	4413      	add	r3, r2
 8003f5e:	f203 4204 	addw	r2, r3, #1028	; 0x404
 8003f62:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003f66:	f5a3 738a 	sub.w	r3, r3, #276	; 0x114
 8003f6a:	601a      	str	r2, [r3, #0]
 8003f6c:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8003f70:	b29a      	uxth	r2, r3
 8003f72:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003f76:	f5a3 738a 	sub.w	r3, r3, #276	; 0x114
 8003f7a:	681b      	ldr	r3, [r3, #0]
 8003f7c:	801a      	strh	r2, [r3, #0]
 8003f7e:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003f82:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003f86:	681b      	ldr	r3, [r3, #0]
 8003f88:	891b      	ldrh	r3, [r3, #8]
 8003f8a:	f8a7 3096 	strh.w	r3, [r7, #150]	; 0x96
 8003f8e:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003f92:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003f96:	681b      	ldr	r3, [r3, #0]
 8003f98:	6959      	ldr	r1, [r3, #20]
 8003f9a:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8003f9e:	b29b      	uxth	r3, r3
 8003fa0:	f8b7 2096 	ldrh.w	r2, [r7, #150]	; 0x96
 8003fa4:	f507 7098 	add.w	r0, r7, #304	; 0x130
 8003fa8:	f5a0 7096 	sub.w	r0, r0, #300	; 0x12c
 8003fac:	6800      	ldr	r0, [r0, #0]
 8003fae:	f001 fc41 	bl	8005834 <USB_WritePMA>
 8003fb2:	f000 be0e 	b.w	8004bd2 <USB_EPStartXfer+0x128a>
 8003fb6:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003fba:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003fbe:	681b      	ldr	r3, [r3, #0]
 8003fc0:	785b      	ldrb	r3, [r3, #1]
 8003fc2:	2b00      	cmp	r3, #0
 8003fc4:	d16d      	bne.n	80040a2 <USB_EPStartXfer+0x75a>
 8003fc6:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003fca:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8003fce:	681b      	ldr	r3, [r3, #0]
 8003fd0:	64bb      	str	r3, [r7, #72]	; 0x48
 8003fd2:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003fd6:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8003fda:	681b      	ldr	r3, [r3, #0]
 8003fdc:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8003fe0:	b29b      	uxth	r3, r3
 8003fe2:	461a      	mov	r2, r3
 8003fe4:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003fe6:	4413      	add	r3, r2
 8003fe8:	64bb      	str	r3, [r7, #72]	; 0x48
 8003fea:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8003fee:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8003ff2:	681b      	ldr	r3, [r3, #0]
 8003ff4:	781b      	ldrb	r3, [r3, #0]
 8003ff6:	011a      	lsls	r2, r3, #4
 8003ff8:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003ffa:	4413      	add	r3, r2
 8003ffc:	f203 4304 	addw	r3, r3, #1028	; 0x404
 8004000:	647b      	str	r3, [r7, #68]	; 0x44
 8004002:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004006:	2b00      	cmp	r3, #0
 8004008:	d112      	bne.n	8004030 <USB_EPStartXfer+0x6e8>
 800400a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800400c:	881b      	ldrh	r3, [r3, #0]
 800400e:	b29b      	uxth	r3, r3
 8004010:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 8004014:	b29a      	uxth	r2, r3
 8004016:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8004018:	801a      	strh	r2, [r3, #0]
 800401a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800401c:	881b      	ldrh	r3, [r3, #0]
 800401e:	b29b      	uxth	r3, r3
 8004020:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8004024:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8004028:	b29a      	uxth	r2, r3
 800402a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800402c:	801a      	strh	r2, [r3, #0]
 800402e:	e063      	b.n	80040f8 <USB_EPStartXfer+0x7b0>
 8004030:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004034:	2b3e      	cmp	r3, #62	; 0x3e
 8004036:	d817      	bhi.n	8004068 <USB_EPStartXfer+0x720>
 8004038:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 800403c:	085b      	lsrs	r3, r3, #1
 800403e:	f8c7 3120 	str.w	r3, [r7, #288]	; 0x120
 8004042:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004046:	f003 0301 	and.w	r3, r3, #1
 800404a:	2b00      	cmp	r3, #0
 800404c:	d004      	beq.n	8004058 <USB_EPStartXfer+0x710>
 800404e:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 8004052:	3301      	adds	r3, #1
 8004054:	f8c7 3120 	str.w	r3, [r7, #288]	; 0x120
 8004058:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 800405c:	b29b      	uxth	r3, r3
 800405e:	029b      	lsls	r3, r3, #10
 8004060:	b29a      	uxth	r2, r3
 8004062:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8004064:	801a      	strh	r2, [r3, #0]
 8004066:	e047      	b.n	80040f8 <USB_EPStartXfer+0x7b0>
 8004068:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 800406c:	095b      	lsrs	r3, r3, #5
 800406e:	f8c7 3120 	str.w	r3, [r7, #288]	; 0x120
 8004072:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004076:	f003 031f 	and.w	r3, r3, #31
 800407a:	2b00      	cmp	r3, #0
 800407c:	d104      	bne.n	8004088 <USB_EPStartXfer+0x740>
 800407e:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 8004082:	3b01      	subs	r3, #1
 8004084:	f8c7 3120 	str.w	r3, [r7, #288]	; 0x120
 8004088:	f8d7 3120 	ldr.w	r3, [r7, #288]	; 0x120
 800408c:	b29b      	uxth	r3, r3
 800408e:	029b      	lsls	r3, r3, #10
 8004090:	b29b      	uxth	r3, r3
 8004092:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8004096:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800409a:	b29a      	uxth	r2, r3
 800409c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800409e:	801a      	strh	r2, [r3, #0]
 80040a0:	e02a      	b.n	80040f8 <USB_EPStartXfer+0x7b0>
 80040a2:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80040a6:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80040aa:	681b      	ldr	r3, [r3, #0]
 80040ac:	785b      	ldrb	r3, [r3, #1]
 80040ae:	2b01      	cmp	r3, #1
 80040b0:	d122      	bne.n	80040f8 <USB_EPStartXfer+0x7b0>
 80040b2:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80040b6:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 80040ba:	681b      	ldr	r3, [r3, #0]
 80040bc:	653b      	str	r3, [r7, #80]	; 0x50
 80040be:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80040c2:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 80040c6:	681b      	ldr	r3, [r3, #0]
 80040c8:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 80040cc:	b29b      	uxth	r3, r3
 80040ce:	461a      	mov	r2, r3
 80040d0:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80040d2:	4413      	add	r3, r2
 80040d4:	653b      	str	r3, [r7, #80]	; 0x50
 80040d6:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80040da:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80040de:	681b      	ldr	r3, [r3, #0]
 80040e0:	781b      	ldrb	r3, [r3, #0]
 80040e2:	011a      	lsls	r2, r3, #4
 80040e4:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80040e6:	4413      	add	r3, r2
 80040e8:	f203 4304 	addw	r3, r3, #1028	; 0x404
 80040ec:	64fb      	str	r3, [r7, #76]	; 0x4c
 80040ee:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 80040f2:	b29a      	uxth	r2, r3
 80040f4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80040f6:	801a      	strh	r2, [r3, #0]
 80040f8:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80040fc:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004100:	681b      	ldr	r3, [r3, #0]
 8004102:	891b      	ldrh	r3, [r3, #8]
 8004104:	f8a7 3096 	strh.w	r3, [r7, #150]	; 0x96
 8004108:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800410c:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004110:	681b      	ldr	r3, [r3, #0]
 8004112:	6959      	ldr	r1, [r3, #20]
 8004114:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004118:	b29b      	uxth	r3, r3
 800411a:	f8b7 2096 	ldrh.w	r2, [r7, #150]	; 0x96
 800411e:	f507 7098 	add.w	r0, r7, #304	; 0x130
 8004122:	f5a0 7096 	sub.w	r0, r0, #300	; 0x12c
 8004126:	6800      	ldr	r0, [r0, #0]
 8004128:	f001 fb84 	bl	8005834 <USB_WritePMA>
 800412c:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004130:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004134:	681b      	ldr	r3, [r3, #0]
 8004136:	695a      	ldr	r2, [r3, #20]
 8004138:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 800413c:	441a      	add	r2, r3
 800413e:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004142:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004146:	681b      	ldr	r3, [r3, #0]
 8004148:	615a      	str	r2, [r3, #20]
 800414a:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800414e:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004152:	681b      	ldr	r3, [r3, #0]
 8004154:	6a1a      	ldr	r2, [r3, #32]
 8004156:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800415a:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 800415e:	681b      	ldr	r3, [r3, #0]
 8004160:	691b      	ldr	r3, [r3, #16]
 8004162:	429a      	cmp	r2, r3
 8004164:	d90f      	bls.n	8004186 <USB_EPStartXfer+0x83e>
 8004166:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800416a:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 800416e:	681b      	ldr	r3, [r3, #0]
 8004170:	6a1a      	ldr	r2, [r3, #32]
 8004172:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004176:	1ad2      	subs	r2, r2, r3
 8004178:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800417c:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004180:	681b      	ldr	r3, [r3, #0]
 8004182:	621a      	str	r2, [r3, #32]
 8004184:	e00e      	b.n	80041a4 <USB_EPStartXfer+0x85c>
 8004186:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800418a:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 800418e:	681b      	ldr	r3, [r3, #0]
 8004190:	6a1b      	ldr	r3, [r3, #32]
 8004192:	f8c7 312c 	str.w	r3, [r7, #300]	; 0x12c
 8004196:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800419a:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 800419e:	681b      	ldr	r3, [r3, #0]
 80041a0:	2200      	movs	r2, #0
 80041a2:	621a      	str	r2, [r3, #32]
 80041a4:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80041a8:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 80041ac:	681b      	ldr	r3, [r3, #0]
 80041ae:	643b      	str	r3, [r7, #64]	; 0x40
 80041b0:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80041b4:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80041b8:	681b      	ldr	r3, [r3, #0]
 80041ba:	785b      	ldrb	r3, [r3, #1]
 80041bc:	2b00      	cmp	r3, #0
 80041be:	d16d      	bne.n	800429c <USB_EPStartXfer+0x954>
 80041c0:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80041c4:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 80041c8:	681b      	ldr	r3, [r3, #0]
 80041ca:	63bb      	str	r3, [r7, #56]	; 0x38
 80041cc:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80041d0:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 80041d4:	681b      	ldr	r3, [r3, #0]
 80041d6:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 80041da:	b29b      	uxth	r3, r3
 80041dc:	461a      	mov	r2, r3
 80041de:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80041e0:	4413      	add	r3, r2
 80041e2:	63bb      	str	r3, [r7, #56]	; 0x38
 80041e4:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80041e8:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80041ec:	681b      	ldr	r3, [r3, #0]
 80041ee:	781b      	ldrb	r3, [r3, #0]
 80041f0:	011a      	lsls	r2, r3, #4
 80041f2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80041f4:	4413      	add	r3, r2
 80041f6:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 80041fa:	637b      	str	r3, [r7, #52]	; 0x34
 80041fc:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004200:	2b00      	cmp	r3, #0
 8004202:	d112      	bne.n	800422a <USB_EPStartXfer+0x8e2>
 8004204:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004206:	881b      	ldrh	r3, [r3, #0]
 8004208:	b29b      	uxth	r3, r3
 800420a:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800420e:	b29a      	uxth	r2, r3
 8004210:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004212:	801a      	strh	r2, [r3, #0]
 8004214:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004216:	881b      	ldrh	r3, [r3, #0]
 8004218:	b29b      	uxth	r3, r3
 800421a:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 800421e:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8004222:	b29a      	uxth	r2, r3
 8004224:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004226:	801a      	strh	r2, [r3, #0]
 8004228:	e05d      	b.n	80042e6 <USB_EPStartXfer+0x99e>
 800422a:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 800422e:	2b3e      	cmp	r3, #62	; 0x3e
 8004230:	d817      	bhi.n	8004262 <USB_EPStartXfer+0x91a>
 8004232:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004236:	085b      	lsrs	r3, r3, #1
 8004238:	f8c7 311c 	str.w	r3, [r7, #284]	; 0x11c
 800423c:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004240:	f003 0301 	and.w	r3, r3, #1
 8004244:	2b00      	cmp	r3, #0
 8004246:	d004      	beq.n	8004252 <USB_EPStartXfer+0x90a>
 8004248:	f8d7 311c 	ldr.w	r3, [r7, #284]	; 0x11c
 800424c:	3301      	adds	r3, #1
 800424e:	f8c7 311c 	str.w	r3, [r7, #284]	; 0x11c
 8004252:	f8d7 311c 	ldr.w	r3, [r7, #284]	; 0x11c
 8004256:	b29b      	uxth	r3, r3
 8004258:	029b      	lsls	r3, r3, #10
 800425a:	b29a      	uxth	r2, r3
 800425c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800425e:	801a      	strh	r2, [r3, #0]
 8004260:	e041      	b.n	80042e6 <USB_EPStartXfer+0x99e>
 8004262:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004266:	095b      	lsrs	r3, r3, #5
 8004268:	f8c7 311c 	str.w	r3, [r7, #284]	; 0x11c
 800426c:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004270:	f003 031f 	and.w	r3, r3, #31
 8004274:	2b00      	cmp	r3, #0
 8004276:	d104      	bne.n	8004282 <USB_EPStartXfer+0x93a>
 8004278:	f8d7 311c 	ldr.w	r3, [r7, #284]	; 0x11c
 800427c:	3b01      	subs	r3, #1
 800427e:	f8c7 311c 	str.w	r3, [r7, #284]	; 0x11c
 8004282:	f8d7 311c 	ldr.w	r3, [r7, #284]	; 0x11c
 8004286:	b29b      	uxth	r3, r3
 8004288:	029b      	lsls	r3, r3, #10
 800428a:	b29b      	uxth	r3, r3
 800428c:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8004290:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8004294:	b29a      	uxth	r2, r3
 8004296:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004298:	801a      	strh	r2, [r3, #0]
 800429a:	e024      	b.n	80042e6 <USB_EPStartXfer+0x99e>
 800429c:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80042a0:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80042a4:	681b      	ldr	r3, [r3, #0]
 80042a6:	785b      	ldrb	r3, [r3, #1]
 80042a8:	2b01      	cmp	r3, #1
 80042aa:	d11c      	bne.n	80042e6 <USB_EPStartXfer+0x99e>
 80042ac:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80042b0:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 80042b4:	681b      	ldr	r3, [r3, #0]
 80042b6:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 80042ba:	b29b      	uxth	r3, r3
 80042bc:	461a      	mov	r2, r3
 80042be:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80042c0:	4413      	add	r3, r2
 80042c2:	643b      	str	r3, [r7, #64]	; 0x40
 80042c4:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80042c8:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80042cc:	681b      	ldr	r3, [r3, #0]
 80042ce:	781b      	ldrb	r3, [r3, #0]
 80042d0:	011a      	lsls	r2, r3, #4
 80042d2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80042d4:	4413      	add	r3, r2
 80042d6:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 80042da:	63fb      	str	r3, [r7, #60]	; 0x3c
 80042dc:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 80042e0:	b29a      	uxth	r2, r3
 80042e2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80042e4:	801a      	strh	r2, [r3, #0]
 80042e6:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80042ea:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80042ee:	681b      	ldr	r3, [r3, #0]
 80042f0:	895b      	ldrh	r3, [r3, #10]
 80042f2:	f8a7 3096 	strh.w	r3, [r7, #150]	; 0x96
 80042f6:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80042fa:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80042fe:	681b      	ldr	r3, [r3, #0]
 8004300:	6959      	ldr	r1, [r3, #20]
 8004302:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004306:	b29b      	uxth	r3, r3
 8004308:	f8b7 2096 	ldrh.w	r2, [r7, #150]	; 0x96
 800430c:	f507 7098 	add.w	r0, r7, #304	; 0x130
 8004310:	f5a0 7096 	sub.w	r0, r0, #300	; 0x12c
 8004314:	6800      	ldr	r0, [r0, #0]
 8004316:	f001 fa8d 	bl	8005834 <USB_WritePMA>
 800431a:	f000 bc5a 	b.w	8004bd2 <USB_EPStartXfer+0x128a>
 800431e:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004322:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004326:	681b      	ldr	r3, [r3, #0]
 8004328:	6a1b      	ldr	r3, [r3, #32]
 800432a:	f8c7 312c 	str.w	r3, [r7, #300]	; 0x12c
 800432e:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004332:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8004336:	681a      	ldr	r2, [r3, #0]
 8004338:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800433c:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004340:	681b      	ldr	r3, [r3, #0]
 8004342:	781b      	ldrb	r3, [r3, #0]
 8004344:	009b      	lsls	r3, r3, #2
 8004346:	4413      	add	r3, r2
 8004348:	881b      	ldrh	r3, [r3, #0]
 800434a:	b29b      	uxth	r3, r3
 800434c:	f423 43e2 	bic.w	r3, r3, #28928	; 0x7100
 8004350:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004354:	f8a7 3062 	strh.w	r3, [r7, #98]	; 0x62
 8004358:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800435c:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8004360:	681a      	ldr	r2, [r3, #0]
 8004362:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004366:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 800436a:	681b      	ldr	r3, [r3, #0]
 800436c:	781b      	ldrb	r3, [r3, #0]
 800436e:	009b      	lsls	r3, r3, #2
 8004370:	441a      	add	r2, r3
 8004372:	f8b7 3062 	ldrh.w	r3, [r7, #98]	; 0x62
 8004376:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 800437a:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 800437e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004382:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004386:	b29b      	uxth	r3, r3
 8004388:	8013      	strh	r3, [r2, #0]
 800438a:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800438e:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8004392:	681b      	ldr	r3, [r3, #0]
 8004394:	65fb      	str	r3, [r7, #92]	; 0x5c
 8004396:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800439a:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 800439e:	681b      	ldr	r3, [r3, #0]
 80043a0:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 80043a4:	b29b      	uxth	r3, r3
 80043a6:	461a      	mov	r2, r3
 80043a8:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80043aa:	4413      	add	r3, r2
 80043ac:	65fb      	str	r3, [r7, #92]	; 0x5c
 80043ae:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80043b2:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80043b6:	681b      	ldr	r3, [r3, #0]
 80043b8:	781b      	ldrb	r3, [r3, #0]
 80043ba:	011a      	lsls	r2, r3, #4
 80043bc:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80043be:	4413      	add	r3, r2
 80043c0:	f203 4304 	addw	r3, r3, #1028	; 0x404
 80043c4:	65bb      	str	r3, [r7, #88]	; 0x58
 80043c6:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 80043ca:	b29a      	uxth	r2, r3
 80043cc:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80043ce:	801a      	strh	r2, [r3, #0]
 80043d0:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80043d4:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80043d8:	681b      	ldr	r3, [r3, #0]
 80043da:	891b      	ldrh	r3, [r3, #8]
 80043dc:	f8a7 3096 	strh.w	r3, [r7, #150]	; 0x96
 80043e0:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80043e4:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80043e8:	681b      	ldr	r3, [r3, #0]
 80043ea:	6959      	ldr	r1, [r3, #20]
 80043ec:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 80043f0:	b29b      	uxth	r3, r3
 80043f2:	f8b7 2096 	ldrh.w	r2, [r7, #150]	; 0x96
 80043f6:	f507 7098 	add.w	r0, r7, #304	; 0x130
 80043fa:	f5a0 7096 	sub.w	r0, r0, #300	; 0x12c
 80043fe:	6800      	ldr	r0, [r0, #0]
 8004400:	f001 fa18 	bl	8005834 <USB_WritePMA>
 8004404:	e3e5      	b.n	8004bd2 <USB_EPStartXfer+0x128a>
 8004406:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800440a:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 800440e:	681a      	ldr	r2, [r3, #0]
 8004410:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004414:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004418:	681b      	ldr	r3, [r3, #0]
 800441a:	781b      	ldrb	r3, [r3, #0]
 800441c:	009b      	lsls	r3, r3, #2
 800441e:	4413      	add	r3, r2
 8004420:	881b      	ldrh	r3, [r3, #0]
 8004422:	b29b      	uxth	r3, r3
 8004424:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8004428:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800442c:	f8a7 30a8 	strh.w	r3, [r7, #168]	; 0xa8
 8004430:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004434:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8004438:	681a      	ldr	r2, [r3, #0]
 800443a:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800443e:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004442:	681b      	ldr	r3, [r3, #0]
 8004444:	781b      	ldrb	r3, [r3, #0]
 8004446:	009b      	lsls	r3, r3, #2
 8004448:	441a      	add	r2, r3
 800444a:	f8b7 30a8 	ldrh.w	r3, [r7, #168]	; 0xa8
 800444e:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8004452:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 8004456:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 800445a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800445e:	b29b      	uxth	r3, r3
 8004460:	8013      	strh	r3, [r2, #0]
 8004462:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004466:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 800446a:	681b      	ldr	r3, [r3, #0]
 800446c:	6a1a      	ldr	r2, [r3, #32]
 800446e:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004472:	1ad2      	subs	r2, r2, r3
 8004474:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004478:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 800447c:	681b      	ldr	r3, [r3, #0]
 800447e:	621a      	str	r2, [r3, #32]
 8004480:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004484:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8004488:	681a      	ldr	r2, [r3, #0]
 800448a:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800448e:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004492:	681b      	ldr	r3, [r3, #0]
 8004494:	781b      	ldrb	r3, [r3, #0]
 8004496:	009b      	lsls	r3, r3, #2
 8004498:	4413      	add	r3, r2
 800449a:	881b      	ldrh	r3, [r3, #0]
 800449c:	b29b      	uxth	r3, r3
 800449e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80044a2:	2b00      	cmp	r3, #0
 80044a4:	f000 81bc 	beq.w	8004820 <USB_EPStartXfer+0xed8>
 80044a8:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80044ac:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 80044b0:	681b      	ldr	r3, [r3, #0]
 80044b2:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 80044b6:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80044ba:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80044be:	681b      	ldr	r3, [r3, #0]
 80044c0:	785b      	ldrb	r3, [r3, #1]
 80044c2:	2b00      	cmp	r3, #0
 80044c4:	d16d      	bne.n	80045a2 <USB_EPStartXfer+0xc5a>
 80044c6:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80044ca:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 80044ce:	681b      	ldr	r3, [r3, #0]
 80044d0:	67bb      	str	r3, [r7, #120]	; 0x78
 80044d2:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80044d6:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 80044da:	681b      	ldr	r3, [r3, #0]
 80044dc:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 80044e0:	b29b      	uxth	r3, r3
 80044e2:	461a      	mov	r2, r3
 80044e4:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 80044e6:	4413      	add	r3, r2
 80044e8:	67bb      	str	r3, [r7, #120]	; 0x78
 80044ea:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80044ee:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80044f2:	681b      	ldr	r3, [r3, #0]
 80044f4:	781b      	ldrb	r3, [r3, #0]
 80044f6:	011a      	lsls	r2, r3, #4
 80044f8:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 80044fa:	4413      	add	r3, r2
 80044fc:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 8004500:	677b      	str	r3, [r7, #116]	; 0x74
 8004502:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004506:	2b00      	cmp	r3, #0
 8004508:	d112      	bne.n	8004530 <USB_EPStartXfer+0xbe8>
 800450a:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800450c:	881b      	ldrh	r3, [r3, #0]
 800450e:	b29b      	uxth	r3, r3
 8004510:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 8004514:	b29a      	uxth	r2, r3
 8004516:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8004518:	801a      	strh	r2, [r3, #0]
 800451a:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800451c:	881b      	ldrh	r3, [r3, #0]
 800451e:	b29b      	uxth	r3, r3
 8004520:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8004524:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8004528:	b29a      	uxth	r2, r3
 800452a:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800452c:	801a      	strh	r2, [r3, #0]
 800452e:	e060      	b.n	80045f2 <USB_EPStartXfer+0xcaa>
 8004530:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004534:	2b3e      	cmp	r3, #62	; 0x3e
 8004536:	d817      	bhi.n	8004568 <USB_EPStartXfer+0xc20>
 8004538:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 800453c:	085b      	lsrs	r3, r3, #1
 800453e:	f8c7 3118 	str.w	r3, [r7, #280]	; 0x118
 8004542:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004546:	f003 0301 	and.w	r3, r3, #1
 800454a:	2b00      	cmp	r3, #0
 800454c:	d004      	beq.n	8004558 <USB_EPStartXfer+0xc10>
 800454e:	f8d7 3118 	ldr.w	r3, [r7, #280]	; 0x118
 8004552:	3301      	adds	r3, #1
 8004554:	f8c7 3118 	str.w	r3, [r7, #280]	; 0x118
 8004558:	f8d7 3118 	ldr.w	r3, [r7, #280]	; 0x118
 800455c:	b29b      	uxth	r3, r3
 800455e:	029b      	lsls	r3, r3, #10
 8004560:	b29a      	uxth	r2, r3
 8004562:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8004564:	801a      	strh	r2, [r3, #0]
 8004566:	e044      	b.n	80045f2 <USB_EPStartXfer+0xcaa>
 8004568:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 800456c:	095b      	lsrs	r3, r3, #5
 800456e:	f8c7 3118 	str.w	r3, [r7, #280]	; 0x118
 8004572:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004576:	f003 031f 	and.w	r3, r3, #31
 800457a:	2b00      	cmp	r3, #0
 800457c:	d104      	bne.n	8004588 <USB_EPStartXfer+0xc40>
 800457e:	f8d7 3118 	ldr.w	r3, [r7, #280]	; 0x118
 8004582:	3b01      	subs	r3, #1
 8004584:	f8c7 3118 	str.w	r3, [r7, #280]	; 0x118
 8004588:	f8d7 3118 	ldr.w	r3, [r7, #280]	; 0x118
 800458c:	b29b      	uxth	r3, r3
 800458e:	029b      	lsls	r3, r3, #10
 8004590:	b29b      	uxth	r3, r3
 8004592:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8004596:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800459a:	b29a      	uxth	r2, r3
 800459c:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800459e:	801a      	strh	r2, [r3, #0]
 80045a0:	e027      	b.n	80045f2 <USB_EPStartXfer+0xcaa>
 80045a2:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80045a6:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80045aa:	681b      	ldr	r3, [r3, #0]
 80045ac:	785b      	ldrb	r3, [r3, #1]
 80045ae:	2b01      	cmp	r3, #1
 80045b0:	d11f      	bne.n	80045f2 <USB_EPStartXfer+0xcaa>
 80045b2:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80045b6:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 80045ba:	681b      	ldr	r3, [r3, #0]
 80045bc:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 80045c0:	b29b      	uxth	r3, r3
 80045c2:	461a      	mov	r2, r3
 80045c4:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 80045c8:	4413      	add	r3, r2
 80045ca:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 80045ce:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80045d2:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80045d6:	681b      	ldr	r3, [r3, #0]
 80045d8:	781b      	ldrb	r3, [r3, #0]
 80045da:	011a      	lsls	r2, r3, #4
 80045dc:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 80045e0:	4413      	add	r3, r2
 80045e2:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 80045e6:	67fb      	str	r3, [r7, #124]	; 0x7c
 80045e8:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 80045ec:	b29a      	uxth	r2, r3
 80045ee:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 80045f0:	801a      	strh	r2, [r3, #0]
 80045f2:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80045f6:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80045fa:	681b      	ldr	r3, [r3, #0]
 80045fc:	895b      	ldrh	r3, [r3, #10]
 80045fe:	f8a7 3096 	strh.w	r3, [r7, #150]	; 0x96
 8004602:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004606:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 800460a:	681b      	ldr	r3, [r3, #0]
 800460c:	6959      	ldr	r1, [r3, #20]
 800460e:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004612:	b29b      	uxth	r3, r3
 8004614:	f8b7 2096 	ldrh.w	r2, [r7, #150]	; 0x96
 8004618:	f507 7098 	add.w	r0, r7, #304	; 0x130
 800461c:	f5a0 7096 	sub.w	r0, r0, #300	; 0x12c
 8004620:	6800      	ldr	r0, [r0, #0]
 8004622:	f001 f907 	bl	8005834 <USB_WritePMA>
 8004626:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800462a:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 800462e:	681b      	ldr	r3, [r3, #0]
 8004630:	695a      	ldr	r2, [r3, #20]
 8004632:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004636:	441a      	add	r2, r3
 8004638:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800463c:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004640:	681b      	ldr	r3, [r3, #0]
 8004642:	615a      	str	r2, [r3, #20]
 8004644:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004648:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 800464c:	681b      	ldr	r3, [r3, #0]
 800464e:	6a1a      	ldr	r2, [r3, #32]
 8004650:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004654:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004658:	681b      	ldr	r3, [r3, #0]
 800465a:	691b      	ldr	r3, [r3, #16]
 800465c:	429a      	cmp	r2, r3
 800465e:	d90f      	bls.n	8004680 <USB_EPStartXfer+0xd38>
 8004660:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004664:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004668:	681b      	ldr	r3, [r3, #0]
 800466a:	6a1a      	ldr	r2, [r3, #32]
 800466c:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004670:	1ad2      	subs	r2, r2, r3
 8004672:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004676:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 800467a:	681b      	ldr	r3, [r3, #0]
 800467c:	621a      	str	r2, [r3, #32]
 800467e:	e00e      	b.n	800469e <USB_EPStartXfer+0xd56>
 8004680:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004684:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004688:	681b      	ldr	r3, [r3, #0]
 800468a:	6a1b      	ldr	r3, [r3, #32]
 800468c:	f8c7 312c 	str.w	r3, [r7, #300]	; 0x12c
 8004690:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004694:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004698:	681b      	ldr	r3, [r3, #0]
 800469a:	2200      	movs	r2, #0
 800469c:	621a      	str	r2, [r3, #32]
 800469e:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 80046a2:	2b00      	cmp	r3, #0
 80046a4:	f000 8295 	beq.w	8004bd2 <USB_EPStartXfer+0x128a>
 80046a8:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80046ac:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80046b0:	681b      	ldr	r3, [r3, #0]
 80046b2:	785b      	ldrb	r3, [r3, #1]
 80046b4:	2b00      	cmp	r3, #0
 80046b6:	d16d      	bne.n	8004794 <USB_EPStartXfer+0xe4c>
 80046b8:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80046bc:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 80046c0:	681b      	ldr	r3, [r3, #0]
 80046c2:	66bb      	str	r3, [r7, #104]	; 0x68
 80046c4:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80046c8:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 80046cc:	681b      	ldr	r3, [r3, #0]
 80046ce:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 80046d2:	b29b      	uxth	r3, r3
 80046d4:	461a      	mov	r2, r3
 80046d6:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 80046d8:	4413      	add	r3, r2
 80046da:	66bb      	str	r3, [r7, #104]	; 0x68
 80046dc:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80046e0:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80046e4:	681b      	ldr	r3, [r3, #0]
 80046e6:	781b      	ldrb	r3, [r3, #0]
 80046e8:	011a      	lsls	r2, r3, #4
 80046ea:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 80046ec:	4413      	add	r3, r2
 80046ee:	f203 4304 	addw	r3, r3, #1028	; 0x404
 80046f2:	667b      	str	r3, [r7, #100]	; 0x64
 80046f4:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 80046f8:	2b00      	cmp	r3, #0
 80046fa:	d112      	bne.n	8004722 <USB_EPStartXfer+0xdda>
 80046fc:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80046fe:	881b      	ldrh	r3, [r3, #0]
 8004700:	b29b      	uxth	r3, r3
 8004702:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 8004706:	b29a      	uxth	r2, r3
 8004708:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800470a:	801a      	strh	r2, [r3, #0]
 800470c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800470e:	881b      	ldrh	r3, [r3, #0]
 8004710:	b29b      	uxth	r3, r3
 8004712:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8004716:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800471a:	b29a      	uxth	r2, r3
 800471c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800471e:	801a      	strh	r2, [r3, #0]
 8004720:	e063      	b.n	80047ea <USB_EPStartXfer+0xea2>
 8004722:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004726:	2b3e      	cmp	r3, #62	; 0x3e
 8004728:	d817      	bhi.n	800475a <USB_EPStartXfer+0xe12>
 800472a:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 800472e:	085b      	lsrs	r3, r3, #1
 8004730:	f8c7 3114 	str.w	r3, [r7, #276]	; 0x114
 8004734:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004738:	f003 0301 	and.w	r3, r3, #1
 800473c:	2b00      	cmp	r3, #0
 800473e:	d004      	beq.n	800474a <USB_EPStartXfer+0xe02>
 8004740:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8004744:	3301      	adds	r3, #1
 8004746:	f8c7 3114 	str.w	r3, [r7, #276]	; 0x114
 800474a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800474e:	b29b      	uxth	r3, r3
 8004750:	029b      	lsls	r3, r3, #10
 8004752:	b29a      	uxth	r2, r3
 8004754:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8004756:	801a      	strh	r2, [r3, #0]
 8004758:	e047      	b.n	80047ea <USB_EPStartXfer+0xea2>
 800475a:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 800475e:	095b      	lsrs	r3, r3, #5
 8004760:	f8c7 3114 	str.w	r3, [r7, #276]	; 0x114
 8004764:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004768:	f003 031f 	and.w	r3, r3, #31
 800476c:	2b00      	cmp	r3, #0
 800476e:	d104      	bne.n	800477a <USB_EPStartXfer+0xe32>
 8004770:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 8004774:	3b01      	subs	r3, #1
 8004776:	f8c7 3114 	str.w	r3, [r7, #276]	; 0x114
 800477a:	f8d7 3114 	ldr.w	r3, [r7, #276]	; 0x114
 800477e:	b29b      	uxth	r3, r3
 8004780:	029b      	lsls	r3, r3, #10
 8004782:	b29b      	uxth	r3, r3
 8004784:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8004788:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800478c:	b29a      	uxth	r2, r3
 800478e:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8004790:	801a      	strh	r2, [r3, #0]
 8004792:	e02a      	b.n	80047ea <USB_EPStartXfer+0xea2>
 8004794:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004798:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 800479c:	681b      	ldr	r3, [r3, #0]
 800479e:	785b      	ldrb	r3, [r3, #1]
 80047a0:	2b01      	cmp	r3, #1
 80047a2:	d122      	bne.n	80047ea <USB_EPStartXfer+0xea2>
 80047a4:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80047a8:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 80047ac:	681b      	ldr	r3, [r3, #0]
 80047ae:	673b      	str	r3, [r7, #112]	; 0x70
 80047b0:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80047b4:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 80047b8:	681b      	ldr	r3, [r3, #0]
 80047ba:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 80047be:	b29b      	uxth	r3, r3
 80047c0:	461a      	mov	r2, r3
 80047c2:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80047c4:	4413      	add	r3, r2
 80047c6:	673b      	str	r3, [r7, #112]	; 0x70
 80047c8:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80047cc:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80047d0:	681b      	ldr	r3, [r3, #0]
 80047d2:	781b      	ldrb	r3, [r3, #0]
 80047d4:	011a      	lsls	r2, r3, #4
 80047d6:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80047d8:	4413      	add	r3, r2
 80047da:	f203 4304 	addw	r3, r3, #1028	; 0x404
 80047de:	66fb      	str	r3, [r7, #108]	; 0x6c
 80047e0:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 80047e4:	b29a      	uxth	r2, r3
 80047e6:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80047e8:	801a      	strh	r2, [r3, #0]
 80047ea:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80047ee:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80047f2:	681b      	ldr	r3, [r3, #0]
 80047f4:	891b      	ldrh	r3, [r3, #8]
 80047f6:	f8a7 3096 	strh.w	r3, [r7, #150]	; 0x96
 80047fa:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80047fe:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004802:	681b      	ldr	r3, [r3, #0]
 8004804:	6959      	ldr	r1, [r3, #20]
 8004806:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 800480a:	b29b      	uxth	r3, r3
 800480c:	f8b7 2096 	ldrh.w	r2, [r7, #150]	; 0x96
 8004810:	f507 7098 	add.w	r0, r7, #304	; 0x130
 8004814:	f5a0 7096 	sub.w	r0, r0, #300	; 0x12c
 8004818:	6800      	ldr	r0, [r0, #0]
 800481a:	f001 f80b 	bl	8005834 <USB_WritePMA>
 800481e:	e1d8      	b.n	8004bd2 <USB_EPStartXfer+0x128a>
 8004820:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004824:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004828:	681b      	ldr	r3, [r3, #0]
 800482a:	785b      	ldrb	r3, [r3, #1]
 800482c:	2b00      	cmp	r3, #0
 800482e:	d178      	bne.n	8004922 <USB_EPStartXfer+0xfda>
 8004830:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004834:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8004838:	681b      	ldr	r3, [r3, #0]
 800483a:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800483e:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004842:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8004846:	681b      	ldr	r3, [r3, #0]
 8004848:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 800484c:	b29b      	uxth	r3, r3
 800484e:	461a      	mov	r2, r3
 8004850:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8004854:	4413      	add	r3, r2
 8004856:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800485a:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800485e:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004862:	681b      	ldr	r3, [r3, #0]
 8004864:	781b      	ldrb	r3, [r3, #0]
 8004866:	011a      	lsls	r2, r3, #4
 8004868:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800486c:	4413      	add	r3, r2
 800486e:	f203 4304 	addw	r3, r3, #1028	; 0x404
 8004872:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8004876:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 800487a:	2b00      	cmp	r3, #0
 800487c:	d116      	bne.n	80048ac <USB_EPStartXfer+0xf64>
 800487e:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8004882:	881b      	ldrh	r3, [r3, #0]
 8004884:	b29b      	uxth	r3, r3
 8004886:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800488a:	b29a      	uxth	r2, r3
 800488c:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8004890:	801a      	strh	r2, [r3, #0]
 8004892:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8004896:	881b      	ldrh	r3, [r3, #0]
 8004898:	b29b      	uxth	r3, r3
 800489a:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 800489e:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 80048a2:	b29a      	uxth	r2, r3
 80048a4:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80048a8:	801a      	strh	r2, [r3, #0]
 80048aa:	e06b      	b.n	8004984 <USB_EPStartXfer+0x103c>
 80048ac:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 80048b0:	2b3e      	cmp	r3, #62	; 0x3e
 80048b2:	d818      	bhi.n	80048e6 <USB_EPStartXfer+0xf9e>
 80048b4:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 80048b8:	085b      	lsrs	r3, r3, #1
 80048ba:	f8c7 3110 	str.w	r3, [r7, #272]	; 0x110
 80048be:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 80048c2:	f003 0301 	and.w	r3, r3, #1
 80048c6:	2b00      	cmp	r3, #0
 80048c8:	d004      	beq.n	80048d4 <USB_EPStartXfer+0xf8c>
 80048ca:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 80048ce:	3301      	adds	r3, #1
 80048d0:	f8c7 3110 	str.w	r3, [r7, #272]	; 0x110
 80048d4:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 80048d8:	b29b      	uxth	r3, r3
 80048da:	029b      	lsls	r3, r3, #10
 80048dc:	b29a      	uxth	r2, r3
 80048de:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80048e2:	801a      	strh	r2, [r3, #0]
 80048e4:	e04e      	b.n	8004984 <USB_EPStartXfer+0x103c>
 80048e6:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 80048ea:	095b      	lsrs	r3, r3, #5
 80048ec:	f8c7 3110 	str.w	r3, [r7, #272]	; 0x110
 80048f0:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 80048f4:	f003 031f 	and.w	r3, r3, #31
 80048f8:	2b00      	cmp	r3, #0
 80048fa:	d104      	bne.n	8004906 <USB_EPStartXfer+0xfbe>
 80048fc:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 8004900:	3b01      	subs	r3, #1
 8004902:	f8c7 3110 	str.w	r3, [r7, #272]	; 0x110
 8004906:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 800490a:	b29b      	uxth	r3, r3
 800490c:	029b      	lsls	r3, r3, #10
 800490e:	b29b      	uxth	r3, r3
 8004910:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8004914:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8004918:	b29a      	uxth	r2, r3
 800491a:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800491e:	801a      	strh	r2, [r3, #0]
 8004920:	e030      	b.n	8004984 <USB_EPStartXfer+0x103c>
 8004922:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004926:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 800492a:	681b      	ldr	r3, [r3, #0]
 800492c:	785b      	ldrb	r3, [r3, #1]
 800492e:	2b01      	cmp	r3, #1
 8004930:	d128      	bne.n	8004984 <USB_EPStartXfer+0x103c>
 8004932:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004936:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 800493a:	681b      	ldr	r3, [r3, #0]
 800493c:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8004940:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004944:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8004948:	681b      	ldr	r3, [r3, #0]
 800494a:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 800494e:	b29b      	uxth	r3, r3
 8004950:	461a      	mov	r2, r3
 8004952:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 8004956:	4413      	add	r3, r2
 8004958:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 800495c:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004960:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004964:	681b      	ldr	r3, [r3, #0]
 8004966:	781b      	ldrb	r3, [r3, #0]
 8004968:	011a      	lsls	r2, r3, #4
 800496a:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 800496e:	4413      	add	r3, r2
 8004970:	f203 4304 	addw	r3, r3, #1028	; 0x404
 8004974:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8004978:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 800497c:	b29a      	uxth	r2, r3
 800497e:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 8004982:	801a      	strh	r2, [r3, #0]
 8004984:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004988:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 800498c:	681b      	ldr	r3, [r3, #0]
 800498e:	891b      	ldrh	r3, [r3, #8]
 8004990:	f8a7 3096 	strh.w	r3, [r7, #150]	; 0x96
 8004994:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004998:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 800499c:	681b      	ldr	r3, [r3, #0]
 800499e:	6959      	ldr	r1, [r3, #20]
 80049a0:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 80049a4:	b29b      	uxth	r3, r3
 80049a6:	f8b7 2096 	ldrh.w	r2, [r7, #150]	; 0x96
 80049aa:	f507 7098 	add.w	r0, r7, #304	; 0x130
 80049ae:	f5a0 7096 	sub.w	r0, r0, #300	; 0x12c
 80049b2:	6800      	ldr	r0, [r0, #0]
 80049b4:	f000 ff3e 	bl	8005834 <USB_WritePMA>
 80049b8:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80049bc:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80049c0:	681b      	ldr	r3, [r3, #0]
 80049c2:	695a      	ldr	r2, [r3, #20]
 80049c4:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 80049c8:	441a      	add	r2, r3
 80049ca:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80049ce:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80049d2:	681b      	ldr	r3, [r3, #0]
 80049d4:	615a      	str	r2, [r3, #20]
 80049d6:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80049da:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80049de:	681b      	ldr	r3, [r3, #0]
 80049e0:	6a1a      	ldr	r2, [r3, #32]
 80049e2:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80049e6:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80049ea:	681b      	ldr	r3, [r3, #0]
 80049ec:	691b      	ldr	r3, [r3, #16]
 80049ee:	429a      	cmp	r2, r3
 80049f0:	d90f      	bls.n	8004a12 <USB_EPStartXfer+0x10ca>
 80049f2:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80049f6:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80049fa:	681b      	ldr	r3, [r3, #0]
 80049fc:	6a1a      	ldr	r2, [r3, #32]
 80049fe:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004a02:	1ad2      	subs	r2, r2, r3
 8004a04:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004a08:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004a0c:	681b      	ldr	r3, [r3, #0]
 8004a0e:	621a      	str	r2, [r3, #32]
 8004a10:	e00e      	b.n	8004a30 <USB_EPStartXfer+0x10e8>
 8004a12:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004a16:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004a1a:	681b      	ldr	r3, [r3, #0]
 8004a1c:	6a1b      	ldr	r3, [r3, #32]
 8004a1e:	f8c7 312c 	str.w	r3, [r7, #300]	; 0x12c
 8004a22:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004a26:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004a2a:	681b      	ldr	r3, [r3, #0]
 8004a2c:	2200      	movs	r2, #0
 8004a2e:	621a      	str	r2, [r3, #32]
 8004a30:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004a34:	2b00      	cmp	r3, #0
 8004a36:	f000 80cc 	beq.w	8004bd2 <USB_EPStartXfer+0x128a>
 8004a3a:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004a3e:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8004a42:	681b      	ldr	r3, [r3, #0]
 8004a44:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8004a48:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004a4c:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004a50:	681b      	ldr	r3, [r3, #0]
 8004a52:	785b      	ldrb	r3, [r3, #1]
 8004a54:	2b00      	cmp	r3, #0
 8004a56:	d178      	bne.n	8004b4a <USB_EPStartXfer+0x1202>
 8004a58:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004a5c:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8004a60:	681b      	ldr	r3, [r3, #0]
 8004a62:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8004a66:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004a6a:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8004a6e:	681b      	ldr	r3, [r3, #0]
 8004a70:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8004a74:	b29b      	uxth	r3, r3
 8004a76:	461a      	mov	r2, r3
 8004a78:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8004a7c:	4413      	add	r3, r2
 8004a7e:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8004a82:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004a86:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004a8a:	681b      	ldr	r3, [r3, #0]
 8004a8c:	781b      	ldrb	r3, [r3, #0]
 8004a8e:	011a      	lsls	r2, r3, #4
 8004a90:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8004a94:	4413      	add	r3, r2
 8004a96:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 8004a9a:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8004a9e:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004aa2:	2b00      	cmp	r3, #0
 8004aa4:	d116      	bne.n	8004ad4 <USB_EPStartXfer+0x118c>
 8004aa6:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8004aaa:	881b      	ldrh	r3, [r3, #0]
 8004aac:	b29b      	uxth	r3, r3
 8004aae:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 8004ab2:	b29a      	uxth	r2, r3
 8004ab4:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8004ab8:	801a      	strh	r2, [r3, #0]
 8004aba:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8004abe:	881b      	ldrh	r3, [r3, #0]
 8004ac0:	b29b      	uxth	r3, r3
 8004ac2:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8004ac6:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8004aca:	b29a      	uxth	r2, r3
 8004acc:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8004ad0:	801a      	strh	r2, [r3, #0]
 8004ad2:	e064      	b.n	8004b9e <USB_EPStartXfer+0x1256>
 8004ad4:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004ad8:	2b3e      	cmp	r3, #62	; 0x3e
 8004ada:	d818      	bhi.n	8004b0e <USB_EPStartXfer+0x11c6>
 8004adc:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004ae0:	085b      	lsrs	r3, r3, #1
 8004ae2:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
 8004ae6:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004aea:	f003 0301 	and.w	r3, r3, #1
 8004aee:	2b00      	cmp	r3, #0
 8004af0:	d004      	beq.n	8004afc <USB_EPStartXfer+0x11b4>
 8004af2:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8004af6:	3301      	adds	r3, #1
 8004af8:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
 8004afc:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8004b00:	b29b      	uxth	r3, r3
 8004b02:	029b      	lsls	r3, r3, #10
 8004b04:	b29a      	uxth	r2, r3
 8004b06:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8004b0a:	801a      	strh	r2, [r3, #0]
 8004b0c:	e047      	b.n	8004b9e <USB_EPStartXfer+0x1256>
 8004b0e:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004b12:	095b      	lsrs	r3, r3, #5
 8004b14:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
 8004b18:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004b1c:	f003 031f 	and.w	r3, r3, #31
 8004b20:	2b00      	cmp	r3, #0
 8004b22:	d104      	bne.n	8004b2e <USB_EPStartXfer+0x11e6>
 8004b24:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8004b28:	3b01      	subs	r3, #1
 8004b2a:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
 8004b2e:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8004b32:	b29b      	uxth	r3, r3
 8004b34:	029b      	lsls	r3, r3, #10
 8004b36:	b29b      	uxth	r3, r3
 8004b38:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8004b3c:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8004b40:	b29a      	uxth	r2, r3
 8004b42:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8004b46:	801a      	strh	r2, [r3, #0]
 8004b48:	e029      	b.n	8004b9e <USB_EPStartXfer+0x1256>
 8004b4a:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004b4e:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004b52:	681b      	ldr	r3, [r3, #0]
 8004b54:	785b      	ldrb	r3, [r3, #1]
 8004b56:	2b01      	cmp	r3, #1
 8004b58:	d121      	bne.n	8004b9e <USB_EPStartXfer+0x1256>
 8004b5a:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004b5e:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8004b62:	681b      	ldr	r3, [r3, #0]
 8004b64:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8004b68:	b29b      	uxth	r3, r3
 8004b6a:	461a      	mov	r2, r3
 8004b6c:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8004b70:	4413      	add	r3, r2
 8004b72:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8004b76:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004b7a:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004b7e:	681b      	ldr	r3, [r3, #0]
 8004b80:	781b      	ldrb	r3, [r3, #0]
 8004b82:	011a      	lsls	r2, r3, #4
 8004b84:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8004b88:	4413      	add	r3, r2
 8004b8a:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 8004b8e:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8004b92:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004b96:	b29a      	uxth	r2, r3
 8004b98:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8004b9c:	801a      	strh	r2, [r3, #0]
 8004b9e:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004ba2:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004ba6:	681b      	ldr	r3, [r3, #0]
 8004ba8:	895b      	ldrh	r3, [r3, #10]
 8004baa:	f8a7 3096 	strh.w	r3, [r7, #150]	; 0x96
 8004bae:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004bb2:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004bb6:	681b      	ldr	r3, [r3, #0]
 8004bb8:	6959      	ldr	r1, [r3, #20]
 8004bba:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004bbe:	b29b      	uxth	r3, r3
 8004bc0:	f8b7 2096 	ldrh.w	r2, [r7, #150]	; 0x96
 8004bc4:	f507 7098 	add.w	r0, r7, #304	; 0x130
 8004bc8:	f5a0 7096 	sub.w	r0, r0, #300	; 0x12c
 8004bcc:	6800      	ldr	r0, [r0, #0]
 8004bce:	f000 fe31 	bl	8005834 <USB_WritePMA>
 8004bd2:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004bd6:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8004bda:	681a      	ldr	r2, [r3, #0]
 8004bdc:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004be0:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004be4:	681b      	ldr	r3, [r3, #0]
 8004be6:	781b      	ldrb	r3, [r3, #0]
 8004be8:	009b      	lsls	r3, r3, #2
 8004bea:	4413      	add	r3, r2
 8004bec:	881b      	ldrh	r3, [r3, #0]
 8004bee:	b29b      	uxth	r3, r3
 8004bf0:	f507 7298 	add.w	r2, r7, #304	; 0x130
 8004bf4:	f5a2 7293 	sub.w	r2, r2, #294	; 0x126
 8004bf8:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8004bfc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8004c00:	8013      	strh	r3, [r2, #0]
 8004c02:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004c06:	f5a3 7393 	sub.w	r3, r3, #294	; 0x126
 8004c0a:	f507 7298 	add.w	r2, r7, #304	; 0x130
 8004c0e:	f5a2 7293 	sub.w	r2, r2, #294	; 0x126
 8004c12:	8812      	ldrh	r2, [r2, #0]
 8004c14:	f082 0210 	eor.w	r2, r2, #16
 8004c18:	801a      	strh	r2, [r3, #0]
 8004c1a:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004c1e:	f5a3 7393 	sub.w	r3, r3, #294	; 0x126
 8004c22:	f507 7298 	add.w	r2, r7, #304	; 0x130
 8004c26:	f5a2 7293 	sub.w	r2, r2, #294	; 0x126
 8004c2a:	8812      	ldrh	r2, [r2, #0]
 8004c2c:	f082 0220 	eor.w	r2, r2, #32
 8004c30:	801a      	strh	r2, [r3, #0]
 8004c32:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004c36:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8004c3a:	681a      	ldr	r2, [r3, #0]
 8004c3c:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004c40:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004c44:	681b      	ldr	r3, [r3, #0]
 8004c46:	781b      	ldrb	r3, [r3, #0]
 8004c48:	009b      	lsls	r3, r3, #2
 8004c4a:	441a      	add	r2, r3
 8004c4c:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004c50:	f5a3 7393 	sub.w	r3, r3, #294	; 0x126
 8004c54:	881b      	ldrh	r3, [r3, #0]
 8004c56:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8004c5a:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 8004c5e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004c62:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004c66:	b29b      	uxth	r3, r3
 8004c68:	8013      	strh	r3, [r2, #0]
 8004c6a:	f000 bc9f 	b.w	80055ac <USB_EPStartXfer+0x1c64>
 8004c6e:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004c72:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004c76:	681b      	ldr	r3, [r3, #0]
 8004c78:	7b1b      	ldrb	r3, [r3, #12]
 8004c7a:	2b00      	cmp	r3, #0
 8004c7c:	f040 80ae 	bne.w	8004ddc <USB_EPStartXfer+0x1494>
 8004c80:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004c84:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004c88:	681b      	ldr	r3, [r3, #0]
 8004c8a:	699a      	ldr	r2, [r3, #24]
 8004c8c:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004c90:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004c94:	681b      	ldr	r3, [r3, #0]
 8004c96:	691b      	ldr	r3, [r3, #16]
 8004c98:	429a      	cmp	r2, r3
 8004c9a:	d917      	bls.n	8004ccc <USB_EPStartXfer+0x1384>
 8004c9c:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004ca0:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004ca4:	681b      	ldr	r3, [r3, #0]
 8004ca6:	691b      	ldr	r3, [r3, #16]
 8004ca8:	f8c7 312c 	str.w	r3, [r7, #300]	; 0x12c
 8004cac:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004cb0:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004cb4:	681b      	ldr	r3, [r3, #0]
 8004cb6:	699a      	ldr	r2, [r3, #24]
 8004cb8:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004cbc:	1ad2      	subs	r2, r2, r3
 8004cbe:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004cc2:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004cc6:	681b      	ldr	r3, [r3, #0]
 8004cc8:	619a      	str	r2, [r3, #24]
 8004cca:	e00e      	b.n	8004cea <USB_EPStartXfer+0x13a2>
 8004ccc:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004cd0:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004cd4:	681b      	ldr	r3, [r3, #0]
 8004cd6:	699b      	ldr	r3, [r3, #24]
 8004cd8:	f8c7 312c 	str.w	r3, [r7, #300]	; 0x12c
 8004cdc:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004ce0:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004ce4:	681b      	ldr	r3, [r3, #0]
 8004ce6:	2200      	movs	r2, #0
 8004ce8:	619a      	str	r2, [r3, #24]
 8004cea:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004cee:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8004cf2:	681b      	ldr	r3, [r3, #0]
 8004cf4:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8004cf8:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004cfc:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8004d00:	681b      	ldr	r3, [r3, #0]
 8004d02:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8004d06:	b29b      	uxth	r3, r3
 8004d08:	461a      	mov	r2, r3
 8004d0a:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 8004d0e:	4413      	add	r3, r2
 8004d10:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8004d14:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004d18:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004d1c:	681b      	ldr	r3, [r3, #0]
 8004d1e:	781b      	ldrb	r3, [r3, #0]
 8004d20:	011a      	lsls	r2, r3, #4
 8004d22:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 8004d26:	4413      	add	r3, r2
 8004d28:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 8004d2c:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8004d30:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004d34:	2b00      	cmp	r3, #0
 8004d36:	d116      	bne.n	8004d66 <USB_EPStartXfer+0x141e>
 8004d38:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8004d3c:	881b      	ldrh	r3, [r3, #0]
 8004d3e:	b29b      	uxth	r3, r3
 8004d40:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 8004d44:	b29a      	uxth	r2, r3
 8004d46:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8004d4a:	801a      	strh	r2, [r3, #0]
 8004d4c:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8004d50:	881b      	ldrh	r3, [r3, #0]
 8004d52:	b29b      	uxth	r3, r3
 8004d54:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8004d58:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8004d5c:	b29a      	uxth	r2, r3
 8004d5e:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8004d62:	801a      	strh	r2, [r3, #0]
 8004d64:	e3e8      	b.n	8005538 <USB_EPStartXfer+0x1bf0>
 8004d66:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004d6a:	2b3e      	cmp	r3, #62	; 0x3e
 8004d6c:	d818      	bhi.n	8004da0 <USB_EPStartXfer+0x1458>
 8004d6e:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004d72:	085b      	lsrs	r3, r3, #1
 8004d74:	f8c7 3108 	str.w	r3, [r7, #264]	; 0x108
 8004d78:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004d7c:	f003 0301 	and.w	r3, r3, #1
 8004d80:	2b00      	cmp	r3, #0
 8004d82:	d004      	beq.n	8004d8e <USB_EPStartXfer+0x1446>
 8004d84:	f8d7 3108 	ldr.w	r3, [r7, #264]	; 0x108
 8004d88:	3301      	adds	r3, #1
 8004d8a:	f8c7 3108 	str.w	r3, [r7, #264]	; 0x108
 8004d8e:	f8d7 3108 	ldr.w	r3, [r7, #264]	; 0x108
 8004d92:	b29b      	uxth	r3, r3
 8004d94:	029b      	lsls	r3, r3, #10
 8004d96:	b29a      	uxth	r2, r3
 8004d98:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8004d9c:	801a      	strh	r2, [r3, #0]
 8004d9e:	e3cb      	b.n	8005538 <USB_EPStartXfer+0x1bf0>
 8004da0:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004da4:	095b      	lsrs	r3, r3, #5
 8004da6:	f8c7 3108 	str.w	r3, [r7, #264]	; 0x108
 8004daa:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8004dae:	f003 031f 	and.w	r3, r3, #31
 8004db2:	2b00      	cmp	r3, #0
 8004db4:	d104      	bne.n	8004dc0 <USB_EPStartXfer+0x1478>
 8004db6:	f8d7 3108 	ldr.w	r3, [r7, #264]	; 0x108
 8004dba:	3b01      	subs	r3, #1
 8004dbc:	f8c7 3108 	str.w	r3, [r7, #264]	; 0x108
 8004dc0:	f8d7 3108 	ldr.w	r3, [r7, #264]	; 0x108
 8004dc4:	b29b      	uxth	r3, r3
 8004dc6:	029b      	lsls	r3, r3, #10
 8004dc8:	b29b      	uxth	r3, r3
 8004dca:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8004dce:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8004dd2:	b29a      	uxth	r2, r3
 8004dd4:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8004dd8:	801a      	strh	r2, [r3, #0]
 8004dda:	e3ad      	b.n	8005538 <USB_EPStartXfer+0x1bf0>
 8004ddc:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004de0:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004de4:	681b      	ldr	r3, [r3, #0]
 8004de6:	78db      	ldrb	r3, [r3, #3]
 8004de8:	2b02      	cmp	r3, #2
 8004dea:	f040 8200 	bne.w	80051ee <USB_EPStartXfer+0x18a6>
 8004dee:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004df2:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004df6:	681b      	ldr	r3, [r3, #0]
 8004df8:	785b      	ldrb	r3, [r3, #1]
 8004dfa:	2b00      	cmp	r3, #0
 8004dfc:	f040 8091 	bne.w	8004f22 <USB_EPStartXfer+0x15da>
 8004e00:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004e04:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8004e08:	681b      	ldr	r3, [r3, #0]
 8004e0a:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 8004e0e:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004e12:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8004e16:	681b      	ldr	r3, [r3, #0]
 8004e18:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8004e1c:	b29b      	uxth	r3, r3
 8004e1e:	461a      	mov	r2, r3
 8004e20:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 8004e24:	4413      	add	r3, r2
 8004e26:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 8004e2a:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004e2e:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004e32:	681b      	ldr	r3, [r3, #0]
 8004e34:	781b      	ldrb	r3, [r3, #0]
 8004e36:	011a      	lsls	r2, r3, #4
 8004e38:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 8004e3c:	4413      	add	r3, r2
 8004e3e:	f203 4304 	addw	r3, r3, #1028	; 0x404
 8004e42:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8004e46:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004e4a:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004e4e:	681b      	ldr	r3, [r3, #0]
 8004e50:	691b      	ldr	r3, [r3, #16]
 8004e52:	2b00      	cmp	r3, #0
 8004e54:	d116      	bne.n	8004e84 <USB_EPStartXfer+0x153c>
 8004e56:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8004e5a:	881b      	ldrh	r3, [r3, #0]
 8004e5c:	b29b      	uxth	r3, r3
 8004e5e:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 8004e62:	b29a      	uxth	r2, r3
 8004e64:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8004e68:	801a      	strh	r2, [r3, #0]
 8004e6a:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8004e6e:	881b      	ldrh	r3, [r3, #0]
 8004e70:	b29b      	uxth	r3, r3
 8004e72:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8004e76:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8004e7a:	b29a      	uxth	r2, r3
 8004e7c:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8004e80:	801a      	strh	r2, [r3, #0]
 8004e82:	e083      	b.n	8004f8c <USB_EPStartXfer+0x1644>
 8004e84:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004e88:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004e8c:	681b      	ldr	r3, [r3, #0]
 8004e8e:	691b      	ldr	r3, [r3, #16]
 8004e90:	2b3e      	cmp	r3, #62	; 0x3e
 8004e92:	d820      	bhi.n	8004ed6 <USB_EPStartXfer+0x158e>
 8004e94:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004e98:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004e9c:	681b      	ldr	r3, [r3, #0]
 8004e9e:	691b      	ldr	r3, [r3, #16]
 8004ea0:	085b      	lsrs	r3, r3, #1
 8004ea2:	f8c7 3104 	str.w	r3, [r7, #260]	; 0x104
 8004ea6:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004eaa:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004eae:	681b      	ldr	r3, [r3, #0]
 8004eb0:	691b      	ldr	r3, [r3, #16]
 8004eb2:	f003 0301 	and.w	r3, r3, #1
 8004eb6:	2b00      	cmp	r3, #0
 8004eb8:	d004      	beq.n	8004ec4 <USB_EPStartXfer+0x157c>
 8004eba:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8004ebe:	3301      	adds	r3, #1
 8004ec0:	f8c7 3104 	str.w	r3, [r7, #260]	; 0x104
 8004ec4:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8004ec8:	b29b      	uxth	r3, r3
 8004eca:	029b      	lsls	r3, r3, #10
 8004ecc:	b29a      	uxth	r2, r3
 8004ece:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8004ed2:	801a      	strh	r2, [r3, #0]
 8004ed4:	e05a      	b.n	8004f8c <USB_EPStartXfer+0x1644>
 8004ed6:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004eda:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004ede:	681b      	ldr	r3, [r3, #0]
 8004ee0:	691b      	ldr	r3, [r3, #16]
 8004ee2:	095b      	lsrs	r3, r3, #5
 8004ee4:	f8c7 3104 	str.w	r3, [r7, #260]	; 0x104
 8004ee8:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004eec:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004ef0:	681b      	ldr	r3, [r3, #0]
 8004ef2:	691b      	ldr	r3, [r3, #16]
 8004ef4:	f003 031f 	and.w	r3, r3, #31
 8004ef8:	2b00      	cmp	r3, #0
 8004efa:	d104      	bne.n	8004f06 <USB_EPStartXfer+0x15be>
 8004efc:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8004f00:	3b01      	subs	r3, #1
 8004f02:	f8c7 3104 	str.w	r3, [r7, #260]	; 0x104
 8004f06:	f8d7 3104 	ldr.w	r3, [r7, #260]	; 0x104
 8004f0a:	b29b      	uxth	r3, r3
 8004f0c:	029b      	lsls	r3, r3, #10
 8004f0e:	b29b      	uxth	r3, r3
 8004f10:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8004f14:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8004f18:	b29a      	uxth	r2, r3
 8004f1a:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8004f1e:	801a      	strh	r2, [r3, #0]
 8004f20:	e034      	b.n	8004f8c <USB_EPStartXfer+0x1644>
 8004f22:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004f26:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004f2a:	681b      	ldr	r3, [r3, #0]
 8004f2c:	785b      	ldrb	r3, [r3, #1]
 8004f2e:	2b01      	cmp	r3, #1
 8004f30:	d12c      	bne.n	8004f8c <USB_EPStartXfer+0x1644>
 8004f32:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004f36:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8004f3a:	681b      	ldr	r3, [r3, #0]
 8004f3c:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8004f40:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004f44:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8004f48:	681b      	ldr	r3, [r3, #0]
 8004f4a:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8004f4e:	b29b      	uxth	r3, r3
 8004f50:	461a      	mov	r2, r3
 8004f52:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 8004f56:	4413      	add	r3, r2
 8004f58:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8004f5c:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004f60:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004f64:	681b      	ldr	r3, [r3, #0]
 8004f66:	781b      	ldrb	r3, [r3, #0]
 8004f68:	011a      	lsls	r2, r3, #4
 8004f6a:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 8004f6e:	4413      	add	r3, r2
 8004f70:	f203 4304 	addw	r3, r3, #1028	; 0x404
 8004f74:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8004f78:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004f7c:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004f80:	681b      	ldr	r3, [r3, #0]
 8004f82:	691b      	ldr	r3, [r3, #16]
 8004f84:	b29a      	uxth	r2, r3
 8004f86:	f8d7 30d0 	ldr.w	r3, [r7, #208]	; 0xd0
 8004f8a:	801a      	strh	r2, [r3, #0]
 8004f8c:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004f90:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8004f94:	681b      	ldr	r3, [r3, #0]
 8004f96:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 8004f9a:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004f9e:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004fa2:	681b      	ldr	r3, [r3, #0]
 8004fa4:	785b      	ldrb	r3, [r3, #1]
 8004fa6:	2b00      	cmp	r3, #0
 8004fa8:	f040 8091 	bne.w	80050ce <USB_EPStartXfer+0x1786>
 8004fac:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004fb0:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8004fb4:	681b      	ldr	r3, [r3, #0]
 8004fb6:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
 8004fba:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004fbe:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8004fc2:	681b      	ldr	r3, [r3, #0]
 8004fc4:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8004fc8:	b29b      	uxth	r3, r3
 8004fca:	461a      	mov	r2, r3
 8004fcc:	f8d7 30bc 	ldr.w	r3, [r7, #188]	; 0xbc
 8004fd0:	4413      	add	r3, r2
 8004fd2:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
 8004fd6:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004fda:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004fde:	681b      	ldr	r3, [r3, #0]
 8004fe0:	781b      	ldrb	r3, [r3, #0]
 8004fe2:	011a      	lsls	r2, r3, #4
 8004fe4:	f8d7 30bc 	ldr.w	r3, [r7, #188]	; 0xbc
 8004fe8:	4413      	add	r3, r2
 8004fea:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 8004fee:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8004ff2:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8004ff6:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8004ffa:	681b      	ldr	r3, [r3, #0]
 8004ffc:	691b      	ldr	r3, [r3, #16]
 8004ffe:	2b00      	cmp	r3, #0
 8005000:	d116      	bne.n	8005030 <USB_EPStartXfer+0x16e8>
 8005002:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 8005006:	881b      	ldrh	r3, [r3, #0]
 8005008:	b29b      	uxth	r3, r3
 800500a:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800500e:	b29a      	uxth	r2, r3
 8005010:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 8005014:	801a      	strh	r2, [r3, #0]
 8005016:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 800501a:	881b      	ldrh	r3, [r3, #0]
 800501c:	b29b      	uxth	r3, r3
 800501e:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8005022:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8005026:	b29a      	uxth	r2, r3
 8005028:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 800502c:	801a      	strh	r2, [r3, #0]
 800502e:	e07c      	b.n	800512a <USB_EPStartXfer+0x17e2>
 8005030:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8005034:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8005038:	681b      	ldr	r3, [r3, #0]
 800503a:	691b      	ldr	r3, [r3, #16]
 800503c:	2b3e      	cmp	r3, #62	; 0x3e
 800503e:	d820      	bhi.n	8005082 <USB_EPStartXfer+0x173a>
 8005040:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8005044:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8005048:	681b      	ldr	r3, [r3, #0]
 800504a:	691b      	ldr	r3, [r3, #16]
 800504c:	085b      	lsrs	r3, r3, #1
 800504e:	f8c7 3100 	str.w	r3, [r7, #256]	; 0x100
 8005052:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8005056:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 800505a:	681b      	ldr	r3, [r3, #0]
 800505c:	691b      	ldr	r3, [r3, #16]
 800505e:	f003 0301 	and.w	r3, r3, #1
 8005062:	2b00      	cmp	r3, #0
 8005064:	d004      	beq.n	8005070 <USB_EPStartXfer+0x1728>
 8005066:	f8d7 3100 	ldr.w	r3, [r7, #256]	; 0x100
 800506a:	3301      	adds	r3, #1
 800506c:	f8c7 3100 	str.w	r3, [r7, #256]	; 0x100
 8005070:	f8d7 3100 	ldr.w	r3, [r7, #256]	; 0x100
 8005074:	b29b      	uxth	r3, r3
 8005076:	029b      	lsls	r3, r3, #10
 8005078:	b29a      	uxth	r2, r3
 800507a:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 800507e:	801a      	strh	r2, [r3, #0]
 8005080:	e053      	b.n	800512a <USB_EPStartXfer+0x17e2>
 8005082:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8005086:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 800508a:	681b      	ldr	r3, [r3, #0]
 800508c:	691b      	ldr	r3, [r3, #16]
 800508e:	095b      	lsrs	r3, r3, #5
 8005090:	f8c7 3100 	str.w	r3, [r7, #256]	; 0x100
 8005094:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8005098:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 800509c:	681b      	ldr	r3, [r3, #0]
 800509e:	691b      	ldr	r3, [r3, #16]
 80050a0:	f003 031f 	and.w	r3, r3, #31
 80050a4:	2b00      	cmp	r3, #0
 80050a6:	d104      	bne.n	80050b2 <USB_EPStartXfer+0x176a>
 80050a8:	f8d7 3100 	ldr.w	r3, [r7, #256]	; 0x100
 80050ac:	3b01      	subs	r3, #1
 80050ae:	f8c7 3100 	str.w	r3, [r7, #256]	; 0x100
 80050b2:	f8d7 3100 	ldr.w	r3, [r7, #256]	; 0x100
 80050b6:	b29b      	uxth	r3, r3
 80050b8:	029b      	lsls	r3, r3, #10
 80050ba:	b29b      	uxth	r3, r3
 80050bc:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 80050c0:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 80050c4:	b29a      	uxth	r2, r3
 80050c6:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 80050ca:	801a      	strh	r2, [r3, #0]
 80050cc:	e02d      	b.n	800512a <USB_EPStartXfer+0x17e2>
 80050ce:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80050d2:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80050d6:	681b      	ldr	r3, [r3, #0]
 80050d8:	785b      	ldrb	r3, [r3, #1]
 80050da:	2b01      	cmp	r3, #1
 80050dc:	d125      	bne.n	800512a <USB_EPStartXfer+0x17e2>
 80050de:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80050e2:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 80050e6:	681b      	ldr	r3, [r3, #0]
 80050e8:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 80050ec:	b29b      	uxth	r3, r3
 80050ee:	461a      	mov	r2, r3
 80050f0:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 80050f4:	4413      	add	r3, r2
 80050f6:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 80050fa:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80050fe:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8005102:	681b      	ldr	r3, [r3, #0]
 8005104:	781b      	ldrb	r3, [r3, #0]
 8005106:	011a      	lsls	r2, r3, #4
 8005108:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 800510c:	4413      	add	r3, r2
 800510e:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 8005112:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8005116:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800511a:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 800511e:	681b      	ldr	r3, [r3, #0]
 8005120:	691b      	ldr	r3, [r3, #16]
 8005122:	b29a      	uxth	r2, r3
 8005124:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 8005128:	801a      	strh	r2, [r3, #0]
 800512a:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800512e:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8005132:	681b      	ldr	r3, [r3, #0]
 8005134:	69db      	ldr	r3, [r3, #28]
 8005136:	2b00      	cmp	r3, #0
 8005138:	f000 81fe 	beq.w	8005538 <USB_EPStartXfer+0x1bf0>
 800513c:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8005140:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8005144:	681a      	ldr	r2, [r3, #0]
 8005146:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800514a:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 800514e:	681b      	ldr	r3, [r3, #0]
 8005150:	781b      	ldrb	r3, [r3, #0]
 8005152:	009b      	lsls	r3, r3, #2
 8005154:	4413      	add	r3, r2
 8005156:	881b      	ldrh	r3, [r3, #0]
 8005158:	f8a7 30b6 	strh.w	r3, [r7, #182]	; 0xb6
 800515c:	f8b7 30b6 	ldrh.w	r3, [r7, #182]	; 0xb6
 8005160:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8005164:	2b00      	cmp	r3, #0
 8005166:	d005      	beq.n	8005174 <USB_EPStartXfer+0x182c>
 8005168:	f8b7 30b6 	ldrh.w	r3, [r7, #182]	; 0xb6
 800516c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005170:	2b00      	cmp	r3, #0
 8005172:	d10d      	bne.n	8005190 <USB_EPStartXfer+0x1848>
 8005174:	f8b7 30b6 	ldrh.w	r3, [r7, #182]	; 0xb6
 8005178:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800517c:	2b00      	cmp	r3, #0
 800517e:	f040 81db 	bne.w	8005538 <USB_EPStartXfer+0x1bf0>
 8005182:	f8b7 30b6 	ldrh.w	r3, [r7, #182]	; 0xb6
 8005186:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800518a:	2b00      	cmp	r3, #0
 800518c:	f040 81d4 	bne.w	8005538 <USB_EPStartXfer+0x1bf0>
 8005190:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8005194:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8005198:	681a      	ldr	r2, [r3, #0]
 800519a:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800519e:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80051a2:	681b      	ldr	r3, [r3, #0]
 80051a4:	781b      	ldrb	r3, [r3, #0]
 80051a6:	009b      	lsls	r3, r3, #2
 80051a8:	4413      	add	r3, r2
 80051aa:	881b      	ldrh	r3, [r3, #0]
 80051ac:	b29b      	uxth	r3, r3
 80051ae:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80051b2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80051b6:	f8a7 30b4 	strh.w	r3, [r7, #180]	; 0xb4
 80051ba:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80051be:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 80051c2:	681a      	ldr	r2, [r3, #0]
 80051c4:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80051c8:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80051cc:	681b      	ldr	r3, [r3, #0]
 80051ce:	781b      	ldrb	r3, [r3, #0]
 80051d0:	009b      	lsls	r3, r3, #2
 80051d2:	441a      	add	r2, r3
 80051d4:	f8b7 30b4 	ldrh.w	r3, [r7, #180]	; 0xb4
 80051d8:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 80051dc:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 80051e0:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80051e4:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 80051e8:	b29b      	uxth	r3, r3
 80051ea:	8013      	strh	r3, [r2, #0]
 80051ec:	e1a4      	b.n	8005538 <USB_EPStartXfer+0x1bf0>
 80051ee:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80051f2:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80051f6:	681b      	ldr	r3, [r3, #0]
 80051f8:	78db      	ldrb	r3, [r3, #3]
 80051fa:	2b01      	cmp	r3, #1
 80051fc:	f040 819a 	bne.w	8005534 <USB_EPStartXfer+0x1bec>
 8005200:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8005204:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8005208:	681b      	ldr	r3, [r3, #0]
 800520a:	699a      	ldr	r2, [r3, #24]
 800520c:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8005210:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8005214:	681b      	ldr	r3, [r3, #0]
 8005216:	691b      	ldr	r3, [r3, #16]
 8005218:	429a      	cmp	r2, r3
 800521a:	d917      	bls.n	800524c <USB_EPStartXfer+0x1904>
 800521c:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8005220:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8005224:	681b      	ldr	r3, [r3, #0]
 8005226:	691b      	ldr	r3, [r3, #16]
 8005228:	f8c7 312c 	str.w	r3, [r7, #300]	; 0x12c
 800522c:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8005230:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8005234:	681b      	ldr	r3, [r3, #0]
 8005236:	699a      	ldr	r2, [r3, #24]
 8005238:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 800523c:	1ad2      	subs	r2, r2, r3
 800523e:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8005242:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8005246:	681b      	ldr	r3, [r3, #0]
 8005248:	619a      	str	r2, [r3, #24]
 800524a:	e00e      	b.n	800526a <USB_EPStartXfer+0x1922>
 800524c:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8005250:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8005254:	681b      	ldr	r3, [r3, #0]
 8005256:	699b      	ldr	r3, [r3, #24]
 8005258:	f8c7 312c 	str.w	r3, [r7, #300]	; 0x12c
 800525c:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8005260:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8005264:	681b      	ldr	r3, [r3, #0]
 8005266:	2200      	movs	r2, #0
 8005268:	619a      	str	r2, [r3, #24]
 800526a:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800526e:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8005272:	681b      	ldr	r3, [r3, #0]
 8005274:	785b      	ldrb	r3, [r3, #1]
 8005276:	2b00      	cmp	r3, #0
 8005278:	d178      	bne.n	800536c <USB_EPStartXfer+0x1a24>
 800527a:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800527e:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8005282:	681b      	ldr	r3, [r3, #0]
 8005284:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
 8005288:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800528c:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8005290:	681b      	ldr	r3, [r3, #0]
 8005292:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8005296:	b29b      	uxth	r3, r3
 8005298:	461a      	mov	r2, r3
 800529a:	f8d7 30ec 	ldr.w	r3, [r7, #236]	; 0xec
 800529e:	4413      	add	r3, r2
 80052a0:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
 80052a4:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80052a8:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80052ac:	681b      	ldr	r3, [r3, #0]
 80052ae:	781b      	ldrb	r3, [r3, #0]
 80052b0:	011a      	lsls	r2, r3, #4
 80052b2:	f8d7 30ec 	ldr.w	r3, [r7, #236]	; 0xec
 80052b6:	4413      	add	r3, r2
 80052b8:	f203 4304 	addw	r3, r3, #1028	; 0x404
 80052bc:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 80052c0:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 80052c4:	2b00      	cmp	r3, #0
 80052c6:	d116      	bne.n	80052f6 <USB_EPStartXfer+0x19ae>
 80052c8:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 80052cc:	881b      	ldrh	r3, [r3, #0]
 80052ce:	b29b      	uxth	r3, r3
 80052d0:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 80052d4:	b29a      	uxth	r2, r3
 80052d6:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 80052da:	801a      	strh	r2, [r3, #0]
 80052dc:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 80052e0:	881b      	ldrh	r3, [r3, #0]
 80052e2:	b29b      	uxth	r3, r3
 80052e4:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 80052e8:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 80052ec:	b29a      	uxth	r2, r3
 80052ee:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 80052f2:	801a      	strh	r2, [r3, #0]
 80052f4:	e06b      	b.n	80053ce <USB_EPStartXfer+0x1a86>
 80052f6:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 80052fa:	2b3e      	cmp	r3, #62	; 0x3e
 80052fc:	d818      	bhi.n	8005330 <USB_EPStartXfer+0x19e8>
 80052fe:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8005302:	085b      	lsrs	r3, r3, #1
 8005304:	f8c7 30fc 	str.w	r3, [r7, #252]	; 0xfc
 8005308:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 800530c:	f003 0301 	and.w	r3, r3, #1
 8005310:	2b00      	cmp	r3, #0
 8005312:	d004      	beq.n	800531e <USB_EPStartXfer+0x19d6>
 8005314:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8005318:	3301      	adds	r3, #1
 800531a:	f8c7 30fc 	str.w	r3, [r7, #252]	; 0xfc
 800531e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8005322:	b29b      	uxth	r3, r3
 8005324:	029b      	lsls	r3, r3, #10
 8005326:	b29a      	uxth	r2, r3
 8005328:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 800532c:	801a      	strh	r2, [r3, #0]
 800532e:	e04e      	b.n	80053ce <USB_EPStartXfer+0x1a86>
 8005330:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8005334:	095b      	lsrs	r3, r3, #5
 8005336:	f8c7 30fc 	str.w	r3, [r7, #252]	; 0xfc
 800533a:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 800533e:	f003 031f 	and.w	r3, r3, #31
 8005342:	2b00      	cmp	r3, #0
 8005344:	d104      	bne.n	8005350 <USB_EPStartXfer+0x1a08>
 8005346:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800534a:	3b01      	subs	r3, #1
 800534c:	f8c7 30fc 	str.w	r3, [r7, #252]	; 0xfc
 8005350:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8005354:	b29b      	uxth	r3, r3
 8005356:	029b      	lsls	r3, r3, #10
 8005358:	b29b      	uxth	r3, r3
 800535a:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 800535e:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8005362:	b29a      	uxth	r2, r3
 8005364:	f8d7 30e8 	ldr.w	r3, [r7, #232]	; 0xe8
 8005368:	801a      	strh	r2, [r3, #0]
 800536a:	e030      	b.n	80053ce <USB_EPStartXfer+0x1a86>
 800536c:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8005370:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8005374:	681b      	ldr	r3, [r3, #0]
 8005376:	785b      	ldrb	r3, [r3, #1]
 8005378:	2b01      	cmp	r3, #1
 800537a:	d128      	bne.n	80053ce <USB_EPStartXfer+0x1a86>
 800537c:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8005380:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8005384:	681b      	ldr	r3, [r3, #0]
 8005386:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
 800538a:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800538e:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8005392:	681b      	ldr	r3, [r3, #0]
 8005394:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8005398:	b29b      	uxth	r3, r3
 800539a:	461a      	mov	r2, r3
 800539c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80053a0:	4413      	add	r3, r2
 80053a2:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
 80053a6:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80053aa:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80053ae:	681b      	ldr	r3, [r3, #0]
 80053b0:	781b      	ldrb	r3, [r3, #0]
 80053b2:	011a      	lsls	r2, r3, #4
 80053b4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80053b8:	4413      	add	r3, r2
 80053ba:	f203 4304 	addw	r3, r3, #1028	; 0x404
 80053be:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
 80053c2:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 80053c6:	b29a      	uxth	r2, r3
 80053c8:	f8d7 30f0 	ldr.w	r3, [r7, #240]	; 0xf0
 80053cc:	801a      	strh	r2, [r3, #0]
 80053ce:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80053d2:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 80053d6:	681b      	ldr	r3, [r3, #0]
 80053d8:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 80053dc:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80053e0:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80053e4:	681b      	ldr	r3, [r3, #0]
 80053e6:	785b      	ldrb	r3, [r3, #1]
 80053e8:	2b00      	cmp	r3, #0
 80053ea:	d178      	bne.n	80054de <USB_EPStartXfer+0x1b96>
 80053ec:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80053f0:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 80053f4:	681b      	ldr	r3, [r3, #0]
 80053f6:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 80053fa:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80053fe:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8005402:	681b      	ldr	r3, [r3, #0]
 8005404:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 8005408:	b29b      	uxth	r3, r3
 800540a:	461a      	mov	r2, r3
 800540c:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8005410:	4413      	add	r3, r2
 8005412:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 8005416:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800541a:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 800541e:	681b      	ldr	r3, [r3, #0]
 8005420:	781b      	ldrb	r3, [r3, #0]
 8005422:	011a      	lsls	r2, r3, #4
 8005424:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8005428:	4413      	add	r3, r2
 800542a:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 800542e:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8005432:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8005436:	2b00      	cmp	r3, #0
 8005438:	d116      	bne.n	8005468 <USB_EPStartXfer+0x1b20>
 800543a:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800543e:	881b      	ldrh	r3, [r3, #0]
 8005440:	b29b      	uxth	r3, r3
 8005442:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 8005446:	b29a      	uxth	r2, r3
 8005448:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800544c:	801a      	strh	r2, [r3, #0]
 800544e:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8005452:	881b      	ldrh	r3, [r3, #0]
 8005454:	b29b      	uxth	r3, r3
 8005456:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 800545a:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 800545e:	b29a      	uxth	r2, r3
 8005460:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8005464:	801a      	strh	r2, [r3, #0]
 8005466:	e067      	b.n	8005538 <USB_EPStartXfer+0x1bf0>
 8005468:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 800546c:	2b3e      	cmp	r3, #62	; 0x3e
 800546e:	d818      	bhi.n	80054a2 <USB_EPStartXfer+0x1b5a>
 8005470:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 8005474:	085b      	lsrs	r3, r3, #1
 8005476:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 800547a:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 800547e:	f003 0301 	and.w	r3, r3, #1
 8005482:	2b00      	cmp	r3, #0
 8005484:	d004      	beq.n	8005490 <USB_EPStartXfer+0x1b48>
 8005486:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 800548a:	3301      	adds	r3, #1
 800548c:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 8005490:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 8005494:	b29b      	uxth	r3, r3
 8005496:	029b      	lsls	r3, r3, #10
 8005498:	b29a      	uxth	r2, r3
 800549a:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800549e:	801a      	strh	r2, [r3, #0]
 80054a0:	e04a      	b.n	8005538 <USB_EPStartXfer+0x1bf0>
 80054a2:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 80054a6:	095b      	lsrs	r3, r3, #5
 80054a8:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 80054ac:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 80054b0:	f003 031f 	and.w	r3, r3, #31
 80054b4:	2b00      	cmp	r3, #0
 80054b6:	d104      	bne.n	80054c2 <USB_EPStartXfer+0x1b7a>
 80054b8:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 80054bc:	3b01      	subs	r3, #1
 80054be:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 80054c2:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 80054c6:	b29b      	uxth	r3, r3
 80054c8:	029b      	lsls	r3, r3, #10
 80054ca:	b29b      	uxth	r3, r3
 80054cc:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 80054d0:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 80054d4:	b29a      	uxth	r2, r3
 80054d6:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 80054da:	801a      	strh	r2, [r3, #0]
 80054dc:	e02c      	b.n	8005538 <USB_EPStartXfer+0x1bf0>
 80054de:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80054e2:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 80054e6:	681b      	ldr	r3, [r3, #0]
 80054e8:	785b      	ldrb	r3, [r3, #1]
 80054ea:	2b01      	cmp	r3, #1
 80054ec:	d124      	bne.n	8005538 <USB_EPStartXfer+0x1bf0>
 80054ee:	f507 7398 	add.w	r3, r7, #304	; 0x130
 80054f2:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 80054f6:	681b      	ldr	r3, [r3, #0]
 80054f8:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 80054fc:	b29b      	uxth	r3, r3
 80054fe:	461a      	mov	r2, r3
 8005500:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8005504:	4413      	add	r3, r2
 8005506:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800550a:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800550e:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 8005512:	681b      	ldr	r3, [r3, #0]
 8005514:	781b      	ldrb	r3, [r3, #0]
 8005516:	011a      	lsls	r2, r3, #4
 8005518:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800551c:	4413      	add	r3, r2
 800551e:	f203 430c 	addw	r3, r3, #1036	; 0x40c
 8005522:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8005526:	f8d7 312c 	ldr.w	r3, [r7, #300]	; 0x12c
 800552a:	b29a      	uxth	r2, r3
 800552c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8005530:	801a      	strh	r2, [r3, #0]
 8005532:	e001      	b.n	8005538 <USB_EPStartXfer+0x1bf0>
 8005534:	2301      	movs	r3, #1
 8005536:	e03a      	b.n	80055ae <USB_EPStartXfer+0x1c66>
 8005538:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800553c:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8005540:	681a      	ldr	r2, [r3, #0]
 8005542:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8005546:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 800554a:	681b      	ldr	r3, [r3, #0]
 800554c:	781b      	ldrb	r3, [r3, #0]
 800554e:	009b      	lsls	r3, r3, #2
 8005550:	4413      	add	r3, r2
 8005552:	881b      	ldrh	r3, [r3, #0]
 8005554:	b29b      	uxth	r3, r3
 8005556:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800555a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800555e:	f8a7 30aa 	strh.w	r3, [r7, #170]	; 0xaa
 8005562:	f8b7 30aa 	ldrh.w	r3, [r7, #170]	; 0xaa
 8005566:	f483 5380 	eor.w	r3, r3, #4096	; 0x1000
 800556a:	f8a7 30aa 	strh.w	r3, [r7, #170]	; 0xaa
 800556e:	f8b7 30aa 	ldrh.w	r3, [r7, #170]	; 0xaa
 8005572:	f483 5300 	eor.w	r3, r3, #8192	; 0x2000
 8005576:	f8a7 30aa 	strh.w	r3, [r7, #170]	; 0xaa
 800557a:	f507 7398 	add.w	r3, r7, #304	; 0x130
 800557e:	f5a3 7396 	sub.w	r3, r3, #300	; 0x12c
 8005582:	681a      	ldr	r2, [r3, #0]
 8005584:	f507 7398 	add.w	r3, r7, #304	; 0x130
 8005588:	f5a3 7398 	sub.w	r3, r3, #304	; 0x130
 800558c:	681b      	ldr	r3, [r3, #0]
 800558e:	781b      	ldrb	r3, [r3, #0]
 8005590:	009b      	lsls	r3, r3, #2
 8005592:	441a      	add	r2, r3
 8005594:	f8b7 30aa 	ldrh.w	r3, [r7, #170]	; 0xaa
 8005598:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 800559c:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 80055a0:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80055a4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80055a8:	b29b      	uxth	r3, r3
 80055aa:	8013      	strh	r3, [r2, #0]
 80055ac:	2300      	movs	r3, #0
 80055ae:	4618      	mov	r0, r3
 80055b0:	f507 7798 	add.w	r7, r7, #304	; 0x130
 80055b4:	46bd      	mov	sp, r7
 80055b6:	bd80      	pop	{r7, pc}

080055b8 <USB_EPSetStall>:
 80055b8:	b480      	push	{r7}
 80055ba:	b085      	sub	sp, #20
 80055bc:	af00      	add	r7, sp, #0
 80055be:	6078      	str	r0, [r7, #4]
 80055c0:	6039      	str	r1, [r7, #0]
 80055c2:	683b      	ldr	r3, [r7, #0]
 80055c4:	785b      	ldrb	r3, [r3, #1]
 80055c6:	2b00      	cmp	r3, #0
 80055c8:	d020      	beq.n	800560c <USB_EPSetStall+0x54>
 80055ca:	687a      	ldr	r2, [r7, #4]
 80055cc:	683b      	ldr	r3, [r7, #0]
 80055ce:	781b      	ldrb	r3, [r3, #0]
 80055d0:	009b      	lsls	r3, r3, #2
 80055d2:	4413      	add	r3, r2
 80055d4:	881b      	ldrh	r3, [r3, #0]
 80055d6:	b29b      	uxth	r3, r3
 80055d8:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80055dc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80055e0:	81bb      	strh	r3, [r7, #12]
 80055e2:	89bb      	ldrh	r3, [r7, #12]
 80055e4:	f083 0310 	eor.w	r3, r3, #16
 80055e8:	81bb      	strh	r3, [r7, #12]
 80055ea:	687a      	ldr	r2, [r7, #4]
 80055ec:	683b      	ldr	r3, [r7, #0]
 80055ee:	781b      	ldrb	r3, [r3, #0]
 80055f0:	009b      	lsls	r3, r3, #2
 80055f2:	441a      	add	r2, r3
 80055f4:	89bb      	ldrh	r3, [r7, #12]
 80055f6:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 80055fa:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 80055fe:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005602:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005606:	b29b      	uxth	r3, r3
 8005608:	8013      	strh	r3, [r2, #0]
 800560a:	e01f      	b.n	800564c <USB_EPSetStall+0x94>
 800560c:	687a      	ldr	r2, [r7, #4]
 800560e:	683b      	ldr	r3, [r7, #0]
 8005610:	781b      	ldrb	r3, [r3, #0]
 8005612:	009b      	lsls	r3, r3, #2
 8005614:	4413      	add	r3, r2
 8005616:	881b      	ldrh	r3, [r3, #0]
 8005618:	b29b      	uxth	r3, r3
 800561a:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800561e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005622:	81fb      	strh	r3, [r7, #14]
 8005624:	89fb      	ldrh	r3, [r7, #14]
 8005626:	f483 5380 	eor.w	r3, r3, #4096	; 0x1000
 800562a:	81fb      	strh	r3, [r7, #14]
 800562c:	687a      	ldr	r2, [r7, #4]
 800562e:	683b      	ldr	r3, [r7, #0]
 8005630:	781b      	ldrb	r3, [r3, #0]
 8005632:	009b      	lsls	r3, r3, #2
 8005634:	441a      	add	r2, r3
 8005636:	89fb      	ldrh	r3, [r7, #14]
 8005638:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 800563c:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 8005640:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005644:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005648:	b29b      	uxth	r3, r3
 800564a:	8013      	strh	r3, [r2, #0]
 800564c:	2300      	movs	r3, #0
 800564e:	4618      	mov	r0, r3
 8005650:	3714      	adds	r7, #20
 8005652:	46bd      	mov	sp, r7
 8005654:	bc80      	pop	{r7}
 8005656:	4770      	bx	lr

08005658 <USB_EPClearStall>:
 8005658:	b480      	push	{r7}
 800565a:	b087      	sub	sp, #28
 800565c:	af00      	add	r7, sp, #0
 800565e:	6078      	str	r0, [r7, #4]
 8005660:	6039      	str	r1, [r7, #0]
 8005662:	683b      	ldr	r3, [r7, #0]
 8005664:	7b1b      	ldrb	r3, [r3, #12]
 8005666:	2b00      	cmp	r3, #0
 8005668:	f040 809d 	bne.w	80057a6 <USB_EPClearStall+0x14e>
 800566c:	683b      	ldr	r3, [r7, #0]
 800566e:	785b      	ldrb	r3, [r3, #1]
 8005670:	2b00      	cmp	r3, #0
 8005672:	d04c      	beq.n	800570e <USB_EPClearStall+0xb6>
 8005674:	687a      	ldr	r2, [r7, #4]
 8005676:	683b      	ldr	r3, [r7, #0]
 8005678:	781b      	ldrb	r3, [r3, #0]
 800567a:	009b      	lsls	r3, r3, #2
 800567c:	4413      	add	r3, r2
 800567e:	881b      	ldrh	r3, [r3, #0]
 8005680:	823b      	strh	r3, [r7, #16]
 8005682:	8a3b      	ldrh	r3, [r7, #16]
 8005684:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005688:	2b00      	cmp	r3, #0
 800568a:	d01b      	beq.n	80056c4 <USB_EPClearStall+0x6c>
 800568c:	687a      	ldr	r2, [r7, #4]
 800568e:	683b      	ldr	r3, [r7, #0]
 8005690:	781b      	ldrb	r3, [r3, #0]
 8005692:	009b      	lsls	r3, r3, #2
 8005694:	4413      	add	r3, r2
 8005696:	881b      	ldrh	r3, [r3, #0]
 8005698:	b29b      	uxth	r3, r3
 800569a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800569e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80056a2:	81fb      	strh	r3, [r7, #14]
 80056a4:	687a      	ldr	r2, [r7, #4]
 80056a6:	683b      	ldr	r3, [r7, #0]
 80056a8:	781b      	ldrb	r3, [r3, #0]
 80056aa:	009b      	lsls	r3, r3, #2
 80056ac:	441a      	add	r2, r3
 80056ae:	89fb      	ldrh	r3, [r7, #14]
 80056b0:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 80056b4:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 80056b8:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80056bc:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 80056c0:	b29b      	uxth	r3, r3
 80056c2:	8013      	strh	r3, [r2, #0]
 80056c4:	683b      	ldr	r3, [r7, #0]
 80056c6:	78db      	ldrb	r3, [r3, #3]
 80056c8:	2b01      	cmp	r3, #1
 80056ca:	d06c      	beq.n	80057a6 <USB_EPClearStall+0x14e>
 80056cc:	687a      	ldr	r2, [r7, #4]
 80056ce:	683b      	ldr	r3, [r7, #0]
 80056d0:	781b      	ldrb	r3, [r3, #0]
 80056d2:	009b      	lsls	r3, r3, #2
 80056d4:	4413      	add	r3, r2
 80056d6:	881b      	ldrh	r3, [r3, #0]
 80056d8:	b29b      	uxth	r3, r3
 80056da:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80056de:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80056e2:	81bb      	strh	r3, [r7, #12]
 80056e4:	89bb      	ldrh	r3, [r7, #12]
 80056e6:	f083 0320 	eor.w	r3, r3, #32
 80056ea:	81bb      	strh	r3, [r7, #12]
 80056ec:	687a      	ldr	r2, [r7, #4]
 80056ee:	683b      	ldr	r3, [r7, #0]
 80056f0:	781b      	ldrb	r3, [r3, #0]
 80056f2:	009b      	lsls	r3, r3, #2
 80056f4:	441a      	add	r2, r3
 80056f6:	89bb      	ldrh	r3, [r7, #12]
 80056f8:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 80056fc:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 8005700:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005704:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005708:	b29b      	uxth	r3, r3
 800570a:	8013      	strh	r3, [r2, #0]
 800570c:	e04b      	b.n	80057a6 <USB_EPClearStall+0x14e>
 800570e:	687a      	ldr	r2, [r7, #4]
 8005710:	683b      	ldr	r3, [r7, #0]
 8005712:	781b      	ldrb	r3, [r3, #0]
 8005714:	009b      	lsls	r3, r3, #2
 8005716:	4413      	add	r3, r2
 8005718:	881b      	ldrh	r3, [r3, #0]
 800571a:	82fb      	strh	r3, [r7, #22]
 800571c:	8afb      	ldrh	r3, [r7, #22]
 800571e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8005722:	2b00      	cmp	r3, #0
 8005724:	d01b      	beq.n	800575e <USB_EPClearStall+0x106>
 8005726:	687a      	ldr	r2, [r7, #4]
 8005728:	683b      	ldr	r3, [r7, #0]
 800572a:	781b      	ldrb	r3, [r3, #0]
 800572c:	009b      	lsls	r3, r3, #2
 800572e:	4413      	add	r3, r2
 8005730:	881b      	ldrh	r3, [r3, #0]
 8005732:	b29b      	uxth	r3, r3
 8005734:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8005738:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800573c:	82bb      	strh	r3, [r7, #20]
 800573e:	687a      	ldr	r2, [r7, #4]
 8005740:	683b      	ldr	r3, [r7, #0]
 8005742:	781b      	ldrb	r3, [r3, #0]
 8005744:	009b      	lsls	r3, r3, #2
 8005746:	441a      	add	r2, r3
 8005748:	8abb      	ldrh	r3, [r7, #20]
 800574a:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 800574e:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 8005752:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8005756:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800575a:	b29b      	uxth	r3, r3
 800575c:	8013      	strh	r3, [r2, #0]
 800575e:	687a      	ldr	r2, [r7, #4]
 8005760:	683b      	ldr	r3, [r7, #0]
 8005762:	781b      	ldrb	r3, [r3, #0]
 8005764:	009b      	lsls	r3, r3, #2
 8005766:	4413      	add	r3, r2
 8005768:	881b      	ldrh	r3, [r3, #0]
 800576a:	b29b      	uxth	r3, r3
 800576c:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8005770:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8005774:	827b      	strh	r3, [r7, #18]
 8005776:	8a7b      	ldrh	r3, [r7, #18]
 8005778:	f483 5380 	eor.w	r3, r3, #4096	; 0x1000
 800577c:	827b      	strh	r3, [r7, #18]
 800577e:	8a7b      	ldrh	r3, [r7, #18]
 8005780:	f483 5300 	eor.w	r3, r3, #8192	; 0x2000
 8005784:	827b      	strh	r3, [r7, #18]
 8005786:	687a      	ldr	r2, [r7, #4]
 8005788:	683b      	ldr	r3, [r7, #0]
 800578a:	781b      	ldrb	r3, [r3, #0]
 800578c:	009b      	lsls	r3, r3, #2
 800578e:	441a      	add	r2, r3
 8005790:	8a7b      	ldrh	r3, [r7, #18]
 8005792:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8005796:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 800579a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800579e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80057a2:	b29b      	uxth	r3, r3
 80057a4:	8013      	strh	r3, [r2, #0]
 80057a6:	2300      	movs	r3, #0
 80057a8:	4618      	mov	r0, r3
 80057aa:	371c      	adds	r7, #28
 80057ac:	46bd      	mov	sp, r7
 80057ae:	bc80      	pop	{r7}
 80057b0:	4770      	bx	lr

080057b2 <USB_SetDevAddress>:
 80057b2:	b480      	push	{r7}
 80057b4:	b083      	sub	sp, #12
 80057b6:	af00      	add	r7, sp, #0
 80057b8:	6078      	str	r0, [r7, #4]
 80057ba:	460b      	mov	r3, r1
 80057bc:	70fb      	strb	r3, [r7, #3]
 80057be:	78fb      	ldrb	r3, [r7, #3]
 80057c0:	2b00      	cmp	r3, #0
 80057c2:	d103      	bne.n	80057cc <USB_SetDevAddress+0x1a>
 80057c4:	687b      	ldr	r3, [r7, #4]
 80057c6:	2280      	movs	r2, #128	; 0x80
 80057c8:	f8a3 204c 	strh.w	r2, [r3, #76]	; 0x4c
 80057cc:	2300      	movs	r3, #0
 80057ce:	4618      	mov	r0, r3
 80057d0:	370c      	adds	r7, #12
 80057d2:	46bd      	mov	sp, r7
 80057d4:	bc80      	pop	{r7}
 80057d6:	4770      	bx	lr

080057d8 <USB_DevConnect>:
 80057d8:	b480      	push	{r7}
 80057da:	b083      	sub	sp, #12
 80057dc:	af00      	add	r7, sp, #0
 80057de:	6078      	str	r0, [r7, #4]
 80057e0:	2300      	movs	r3, #0
 80057e2:	4618      	mov	r0, r3
 80057e4:	370c      	adds	r7, #12
 80057e6:	46bd      	mov	sp, r7
 80057e8:	bc80      	pop	{r7}
 80057ea:	4770      	bx	lr

080057ec <USB_DevDisconnect>:
 80057ec:	b480      	push	{r7}
 80057ee:	b083      	sub	sp, #12
 80057f0:	af00      	add	r7, sp, #0
 80057f2:	6078      	str	r0, [r7, #4]
 80057f4:	2300      	movs	r3, #0
 80057f6:	4618      	mov	r0, r3
 80057f8:	370c      	adds	r7, #12
 80057fa:	46bd      	mov	sp, r7
 80057fc:	bc80      	pop	{r7}
 80057fe:	4770      	bx	lr

08005800 <USB_ReadInterrupts>:
 8005800:	b480      	push	{r7}
 8005802:	b085      	sub	sp, #20
 8005804:	af00      	add	r7, sp, #0
 8005806:	6078      	str	r0, [r7, #4]
 8005808:	687b      	ldr	r3, [r7, #4]
 800580a:	f8b3 3044 	ldrh.w	r3, [r3, #68]	; 0x44
 800580e:	b29b      	uxth	r3, r3
 8005810:	60fb      	str	r3, [r7, #12]
 8005812:	68fb      	ldr	r3, [r7, #12]
 8005814:	4618      	mov	r0, r3
 8005816:	3714      	adds	r7, #20
 8005818:	46bd      	mov	sp, r7
 800581a:	bc80      	pop	{r7}
 800581c:	4770      	bx	lr

0800581e <USB_EP0_OutStart>:
 800581e:	b480      	push	{r7}
 8005820:	b083      	sub	sp, #12
 8005822:	af00      	add	r7, sp, #0
 8005824:	6078      	str	r0, [r7, #4]
 8005826:	6039      	str	r1, [r7, #0]
 8005828:	2300      	movs	r3, #0
 800582a:	4618      	mov	r0, r3
 800582c:	370c      	adds	r7, #12
 800582e:	46bd      	mov	sp, r7
 8005830:	bc80      	pop	{r7}
 8005832:	4770      	bx	lr

08005834 <USB_WritePMA>:
 8005834:	b480      	push	{r7}
 8005836:	b08d      	sub	sp, #52	; 0x34
 8005838:	af00      	add	r7, sp, #0
 800583a:	60f8      	str	r0, [r7, #12]
 800583c:	60b9      	str	r1, [r7, #8]
 800583e:	4611      	mov	r1, r2
 8005840:	461a      	mov	r2, r3
 8005842:	460b      	mov	r3, r1
 8005844:	80fb      	strh	r3, [r7, #6]
 8005846:	4613      	mov	r3, r2
 8005848:	80bb      	strh	r3, [r7, #4]
 800584a:	88bb      	ldrh	r3, [r7, #4]
 800584c:	3301      	adds	r3, #1
 800584e:	085b      	lsrs	r3, r3, #1
 8005850:	623b      	str	r3, [r7, #32]
 8005852:	68fb      	ldr	r3, [r7, #12]
 8005854:	61fb      	str	r3, [r7, #28]
 8005856:	68bb      	ldr	r3, [r7, #8]
 8005858:	627b      	str	r3, [r7, #36]	; 0x24
 800585a:	88fb      	ldrh	r3, [r7, #6]
 800585c:	005a      	lsls	r2, r3, #1
 800585e:	69fb      	ldr	r3, [r7, #28]
 8005860:	4413      	add	r3, r2
 8005862:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8005866:	62bb      	str	r3, [r7, #40]	; 0x28
 8005868:	6a3b      	ldr	r3, [r7, #32]
 800586a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800586c:	e01e      	b.n	80058ac <USB_WritePMA+0x78>
 800586e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005870:	781b      	ldrb	r3, [r3, #0]
 8005872:	61bb      	str	r3, [r7, #24]
 8005874:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005876:	3301      	adds	r3, #1
 8005878:	627b      	str	r3, [r7, #36]	; 0x24
 800587a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800587c:	781b      	ldrb	r3, [r3, #0]
 800587e:	b29b      	uxth	r3, r3
 8005880:	021b      	lsls	r3, r3, #8
 8005882:	b29b      	uxth	r3, r3
 8005884:	461a      	mov	r2, r3
 8005886:	69bb      	ldr	r3, [r7, #24]
 8005888:	4313      	orrs	r3, r2
 800588a:	617b      	str	r3, [r7, #20]
 800588c:	697b      	ldr	r3, [r7, #20]
 800588e:	b29a      	uxth	r2, r3
 8005890:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005892:	801a      	strh	r2, [r3, #0]
 8005894:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005896:	3302      	adds	r3, #2
 8005898:	62bb      	str	r3, [r7, #40]	; 0x28
 800589a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800589c:	3302      	adds	r3, #2
 800589e:	62bb      	str	r3, [r7, #40]	; 0x28
 80058a0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80058a2:	3301      	adds	r3, #1
 80058a4:	627b      	str	r3, [r7, #36]	; 0x24
 80058a6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80058a8:	3b01      	subs	r3, #1
 80058aa:	62fb      	str	r3, [r7, #44]	; 0x2c
 80058ac:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80058ae:	2b00      	cmp	r3, #0
 80058b0:	d1dd      	bne.n	800586e <USB_WritePMA+0x3a>
 80058b2:	bf00      	nop
 80058b4:	bf00      	nop
 80058b6:	3734      	adds	r7, #52	; 0x34
 80058b8:	46bd      	mov	sp, r7
 80058ba:	bc80      	pop	{r7}
 80058bc:	4770      	bx	lr

080058be <USB_ReadPMA>:
 80058be:	b480      	push	{r7}
 80058c0:	b08b      	sub	sp, #44	; 0x2c
 80058c2:	af00      	add	r7, sp, #0
 80058c4:	60f8      	str	r0, [r7, #12]
 80058c6:	60b9      	str	r1, [r7, #8]
 80058c8:	4611      	mov	r1, r2
 80058ca:	461a      	mov	r2, r3
 80058cc:	460b      	mov	r3, r1
 80058ce:	80fb      	strh	r3, [r7, #6]
 80058d0:	4613      	mov	r3, r2
 80058d2:	80bb      	strh	r3, [r7, #4]
 80058d4:	88bb      	ldrh	r3, [r7, #4]
 80058d6:	085b      	lsrs	r3, r3, #1
 80058d8:	b29b      	uxth	r3, r3
 80058da:	61bb      	str	r3, [r7, #24]
 80058dc:	68fb      	ldr	r3, [r7, #12]
 80058de:	617b      	str	r3, [r7, #20]
 80058e0:	68bb      	ldr	r3, [r7, #8]
 80058e2:	61fb      	str	r3, [r7, #28]
 80058e4:	88fb      	ldrh	r3, [r7, #6]
 80058e6:	005a      	lsls	r2, r3, #1
 80058e8:	697b      	ldr	r3, [r7, #20]
 80058ea:	4413      	add	r3, r2
 80058ec:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80058f0:	623b      	str	r3, [r7, #32]
 80058f2:	69bb      	ldr	r3, [r7, #24]
 80058f4:	627b      	str	r3, [r7, #36]	; 0x24
 80058f6:	e01b      	b.n	8005930 <USB_ReadPMA+0x72>
 80058f8:	6a3b      	ldr	r3, [r7, #32]
 80058fa:	881b      	ldrh	r3, [r3, #0]
 80058fc:	b29b      	uxth	r3, r3
 80058fe:	613b      	str	r3, [r7, #16]
 8005900:	6a3b      	ldr	r3, [r7, #32]
 8005902:	3302      	adds	r3, #2
 8005904:	623b      	str	r3, [r7, #32]
 8005906:	693b      	ldr	r3, [r7, #16]
 8005908:	b2da      	uxtb	r2, r3
 800590a:	69fb      	ldr	r3, [r7, #28]
 800590c:	701a      	strb	r2, [r3, #0]
 800590e:	69fb      	ldr	r3, [r7, #28]
 8005910:	3301      	adds	r3, #1
 8005912:	61fb      	str	r3, [r7, #28]
 8005914:	693b      	ldr	r3, [r7, #16]
 8005916:	0a1b      	lsrs	r3, r3, #8
 8005918:	b2da      	uxtb	r2, r3
 800591a:	69fb      	ldr	r3, [r7, #28]
 800591c:	701a      	strb	r2, [r3, #0]
 800591e:	69fb      	ldr	r3, [r7, #28]
 8005920:	3301      	adds	r3, #1
 8005922:	61fb      	str	r3, [r7, #28]
 8005924:	6a3b      	ldr	r3, [r7, #32]
 8005926:	3302      	adds	r3, #2
 8005928:	623b      	str	r3, [r7, #32]
 800592a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800592c:	3b01      	subs	r3, #1
 800592e:	627b      	str	r3, [r7, #36]	; 0x24
 8005930:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005932:	2b00      	cmp	r3, #0
 8005934:	d1e0      	bne.n	80058f8 <USB_ReadPMA+0x3a>
 8005936:	88bb      	ldrh	r3, [r7, #4]
 8005938:	f003 0301 	and.w	r3, r3, #1
 800593c:	b29b      	uxth	r3, r3
 800593e:	2b00      	cmp	r3, #0
 8005940:	d007      	beq.n	8005952 <USB_ReadPMA+0x94>
 8005942:	6a3b      	ldr	r3, [r7, #32]
 8005944:	881b      	ldrh	r3, [r3, #0]
 8005946:	b29b      	uxth	r3, r3
 8005948:	613b      	str	r3, [r7, #16]
 800594a:	693b      	ldr	r3, [r7, #16]
 800594c:	b2da      	uxtb	r2, r3
 800594e:	69fb      	ldr	r3, [r7, #28]
 8005950:	701a      	strb	r2, [r3, #0]
 8005952:	bf00      	nop
 8005954:	372c      	adds	r7, #44	; 0x2c
 8005956:	46bd      	mov	sp, r7
 8005958:	bc80      	pop	{r7}
 800595a:	4770      	bx	lr

0800595c <USBD_CUSTOM_HID_Init>:
  * @param  cfgidx: Configuration index
  * @retval status
  */
static uint8_t  USBD_CUSTOM_HID_Init(USBD_HandleTypeDef *pdev,
                                     uint8_t cfgidx)
{
 800595c:	b580      	push	{r7, lr}
 800595e:	b084      	sub	sp, #16
 8005960:	af00      	add	r7, sp, #0
 8005962:	6078      	str	r0, [r7, #4]
 8005964:	460b      	mov	r3, r1
 8005966:	70fb      	strb	r3, [r7, #3]
  uint8_t ret = 0U;
 8005968:	2300      	movs	r3, #0
 800596a:	73fb      	strb	r3, [r7, #15]
  USBD_CUSTOM_HID_HandleTypeDef     *hhid;

  /* Open EP IN */
  USBD_LL_OpenEP(pdev, CUSTOM_HID_EPIN_ADDR, USBD_EP_TYPE_INTR,
 800596c:	2340      	movs	r3, #64	; 0x40
 800596e:	2203      	movs	r2, #3
 8005970:	2181      	movs	r1, #129	; 0x81
 8005972:	6878      	ldr	r0, [r7, #4]
 8005974:	f001 fd71 	bl	800745a <USBD_LL_OpenEP>
                 CUSTOM_HID_EPIN_SIZE);

  pdev->ep_in[CUSTOM_HID_EPIN_ADDR & 0xFU].is_used = 1U;
 8005978:	687b      	ldr	r3, [r7, #4]
 800597a:	2201      	movs	r2, #1
 800597c:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Open EP OUT */
  USBD_LL_OpenEP(pdev, CUSTOM_HID_EPOUT_ADDR, USBD_EP_TYPE_INTR,
 800597e:	2340      	movs	r3, #64	; 0x40
 8005980:	2203      	movs	r2, #3
 8005982:	2101      	movs	r1, #1
 8005984:	6878      	ldr	r0, [r7, #4]
 8005986:	f001 fd68 	bl	800745a <USBD_LL_OpenEP>
                 CUSTOM_HID_EPOUT_SIZE);

  pdev->ep_out[CUSTOM_HID_EPOUT_ADDR & 0xFU].is_used = 1U;
 800598a:	687b      	ldr	r3, [r7, #4]
 800598c:	2201      	movs	r2, #1
 800598e:	f8c3 216c 	str.w	r2, [r3, #364]	; 0x16c

  pdev->pClassData = USBD_malloc(sizeof(USBD_CUSTOM_HID_HandleTypeDef));
 8005992:	2058      	movs	r0, #88	; 0x58
 8005994:	f001 fe76 	bl	8007684 <USBD_static_malloc>
 8005998:	4602      	mov	r2, r0
 800599a:	687b      	ldr	r3, [r7, #4]
 800599c:	f8c3 22b8 	str.w	r2, [r3, #696]	; 0x2b8

  if (pdev->pClassData == NULL)
 80059a0:	687b      	ldr	r3, [r7, #4]
 80059a2:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 80059a6:	2b00      	cmp	r3, #0
 80059a8:	d102      	bne.n	80059b0 <USBD_CUSTOM_HID_Init+0x54>
  {
    ret = 1U;
 80059aa:	2301      	movs	r3, #1
 80059ac:	73fb      	strb	r3, [r7, #15]
 80059ae:	e012      	b.n	80059d6 <USBD_CUSTOM_HID_Init+0x7a>
  }
  else
  {
    hhid = (USBD_CUSTOM_HID_HandleTypeDef *) pdev->pClassData;
 80059b0:	687b      	ldr	r3, [r7, #4]
 80059b2:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 80059b6:	60bb      	str	r3, [r7, #8]

    hhid->state = CUSTOM_HID_IDLE;
 80059b8:	68bb      	ldr	r3, [r7, #8]
 80059ba:	2200      	movs	r2, #0
 80059bc:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
    ((USBD_CUSTOM_HID_ItfTypeDef *)pdev->pUserData)->Init();
 80059c0:	687b      	ldr	r3, [r7, #4]
 80059c2:	f8d3 32bc 	ldr.w	r3, [r3, #700]	; 0x2bc
 80059c6:	685b      	ldr	r3, [r3, #4]
 80059c8:	4798      	blx	r3

    /* Prepare Out endpoint to receive 1st packet */
    USBD_LL_PrepareReceive(pdev, CUSTOM_HID_EPOUT_ADDR, hhid->Report_buf,
 80059ca:	68ba      	ldr	r2, [r7, #8]
 80059cc:	2341      	movs	r3, #65	; 0x41
 80059ce:	2101      	movs	r1, #1
 80059d0:	6878      	ldr	r0, [r7, #4]
 80059d2:	f001 fe33 	bl	800763c <USBD_LL_PrepareReceive>
                           USBD_CUSTOMHID_OUTREPORT_BUF_SIZE);
  }

  return ret;
 80059d6:	7bfb      	ldrb	r3, [r7, #15]
}
 80059d8:	4618      	mov	r0, r3
 80059da:	3710      	adds	r7, #16
 80059dc:	46bd      	mov	sp, r7
 80059de:	bd80      	pop	{r7, pc}

080059e0 <USBD_CUSTOM_HID_DeInit>:
  * @param  cfgidx: Configuration index
  * @retval status
  */
static uint8_t  USBD_CUSTOM_HID_DeInit(USBD_HandleTypeDef *pdev,
                                       uint8_t cfgidx)
{
 80059e0:	b580      	push	{r7, lr}
 80059e2:	b082      	sub	sp, #8
 80059e4:	af00      	add	r7, sp, #0
 80059e6:	6078      	str	r0, [r7, #4]
 80059e8:	460b      	mov	r3, r1
 80059ea:	70fb      	strb	r3, [r7, #3]
  /* Close CUSTOM_HID EP IN */
  USBD_LL_CloseEP(pdev, CUSTOM_HID_EPIN_ADDR);
 80059ec:	2181      	movs	r1, #129	; 0x81
 80059ee:	6878      	ldr	r0, [r7, #4]
 80059f0:	f001 fd59 	bl	80074a6 <USBD_LL_CloseEP>
  pdev->ep_in[CUSTOM_HID_EPIN_ADDR & 0xFU].is_used = 0U;
 80059f4:	687b      	ldr	r3, [r7, #4]
 80059f6:	2200      	movs	r2, #0
 80059f8:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Close CUSTOM_HID EP OUT */
  USBD_LL_CloseEP(pdev, CUSTOM_HID_EPOUT_ADDR);
 80059fa:	2101      	movs	r1, #1
 80059fc:	6878      	ldr	r0, [r7, #4]
 80059fe:	f001 fd52 	bl	80074a6 <USBD_LL_CloseEP>
  pdev->ep_out[CUSTOM_HID_EPOUT_ADDR & 0xFU].is_used = 0U;
 8005a02:	687b      	ldr	r3, [r7, #4]
 8005a04:	2200      	movs	r2, #0
 8005a06:	f8c3 216c 	str.w	r2, [r3, #364]	; 0x16c

  /* FRee allocated memory */
  if (pdev->pClassData != NULL)
 8005a0a:	687b      	ldr	r3, [r7, #4]
 8005a0c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8005a10:	2b00      	cmp	r3, #0
 8005a12:	d00e      	beq.n	8005a32 <USBD_CUSTOM_HID_DeInit+0x52>
  {
    ((USBD_CUSTOM_HID_ItfTypeDef *)pdev->pUserData)->DeInit();
 8005a14:	687b      	ldr	r3, [r7, #4]
 8005a16:	f8d3 32bc 	ldr.w	r3, [r3, #700]	; 0x2bc
 8005a1a:	689b      	ldr	r3, [r3, #8]
 8005a1c:	4798      	blx	r3
    USBD_free(pdev->pClassData);
 8005a1e:	687b      	ldr	r3, [r7, #4]
 8005a20:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8005a24:	4618      	mov	r0, r3
 8005a26:	f001 fe39 	bl	800769c <USBD_static_free>
    pdev->pClassData = NULL;
 8005a2a:	687b      	ldr	r3, [r7, #4]
 8005a2c:	2200      	movs	r2, #0
 8005a2e:	f8c3 22b8 	str.w	r2, [r3, #696]	; 0x2b8
  }
  return USBD_OK;
 8005a32:	2300      	movs	r3, #0
}
 8005a34:	4618      	mov	r0, r3
 8005a36:	3708      	adds	r7, #8
 8005a38:	46bd      	mov	sp, r7
 8005a3a:	bd80      	pop	{r7, pc}

08005a3c <USBD_CUSTOM_HID_Setup>:
  * @param  req: usb requests
  * @retval status
  */
static uint8_t  USBD_CUSTOM_HID_Setup(USBD_HandleTypeDef *pdev,
                                      USBD_SetupReqTypedef *req)
{
 8005a3c:	b580      	push	{r7, lr}
 8005a3e:	b088      	sub	sp, #32
 8005a40:	af00      	add	r7, sp, #0
 8005a42:	6078      	str	r0, [r7, #4]
 8005a44:	6039      	str	r1, [r7, #0]
  USBD_CUSTOM_HID_HandleTypeDef *hhid = (USBD_CUSTOM_HID_HandleTypeDef *)pdev->pClassData;
 8005a46:	687b      	ldr	r3, [r7, #4]
 8005a48:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8005a4c:	613b      	str	r3, [r7, #16]
  uint16_t len = 0U;
 8005a4e:	2300      	movs	r3, #0
 8005a50:	83fb      	strh	r3, [r7, #30]
  uint8_t  *pbuf = NULL;
 8005a52:	2300      	movs	r3, #0
 8005a54:	61bb      	str	r3, [r7, #24]
  uint16_t status_info = 0U;
 8005a56:	2300      	movs	r3, #0
 8005a58:	81fb      	strh	r3, [r7, #14]
  uint8_t ret = USBD_OK;
 8005a5a:	2300      	movs	r3, #0
 8005a5c:	75fb      	strb	r3, [r7, #23]

  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8005a5e:	683b      	ldr	r3, [r7, #0]
 8005a60:	781b      	ldrb	r3, [r3, #0]
 8005a62:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8005a66:	2b00      	cmp	r3, #0
 8005a68:	d051      	beq.n	8005b0e <USBD_CUSTOM_HID_Setup+0xd2>
 8005a6a:	2b20      	cmp	r3, #32
 8005a6c:	f040 80d8 	bne.w	8005c20 <USBD_CUSTOM_HID_Setup+0x1e4>
  {
    case USB_REQ_TYPE_CLASS :
      switch (req->bRequest)
 8005a70:	683b      	ldr	r3, [r7, #0]
 8005a72:	785b      	ldrb	r3, [r3, #1]
 8005a74:	3b02      	subs	r3, #2
 8005a76:	2b09      	cmp	r3, #9
 8005a78:	d841      	bhi.n	8005afe <USBD_CUSTOM_HID_Setup+0xc2>
 8005a7a:	a201      	add	r2, pc, #4	; (adr r2, 8005a80 <USBD_CUSTOM_HID_Setup+0x44>)
 8005a7c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005a80:	08005ad9 	.word	0x08005ad9
 8005a84:	08005ab7 	.word	0x08005ab7
 8005a88:	08005aff 	.word	0x08005aff
 8005a8c:	08005aff 	.word	0x08005aff
 8005a90:	08005aff 	.word	0x08005aff
 8005a94:	08005aff 	.word	0x08005aff
 8005a98:	08005aff 	.word	0x08005aff
 8005a9c:	08005ae9 	.word	0x08005ae9
 8005aa0:	08005ac7 	.word	0x08005ac7
 8005aa4:	08005aa9 	.word	0x08005aa9
      {
        case CUSTOM_HID_REQ_SET_PROTOCOL:
          hhid->Protocol = (uint8_t)(req->wValue);
 8005aa8:	683b      	ldr	r3, [r7, #0]
 8005aaa:	885b      	ldrh	r3, [r3, #2]
 8005aac:	b2db      	uxtb	r3, r3
 8005aae:	461a      	mov	r2, r3
 8005ab0:	693b      	ldr	r3, [r7, #16]
 8005ab2:	645a      	str	r2, [r3, #68]	; 0x44
          break;
 8005ab4:	e02a      	b.n	8005b0c <USBD_CUSTOM_HID_Setup+0xd0>

        case CUSTOM_HID_REQ_GET_PROTOCOL:
          USBD_CtlSendData(pdev, (uint8_t *)(void *)&hhid->Protocol, 1U);
 8005ab6:	693b      	ldr	r3, [r7, #16]
 8005ab8:	3344      	adds	r3, #68	; 0x44
 8005aba:	2201      	movs	r2, #1
 8005abc:	4619      	mov	r1, r3
 8005abe:	6878      	ldr	r0, [r7, #4]
 8005ac0:	f001 f99f 	bl	8006e02 <USBD_CtlSendData>
          break;
 8005ac4:	e022      	b.n	8005b0c <USBD_CUSTOM_HID_Setup+0xd0>

        case CUSTOM_HID_REQ_SET_IDLE:
          hhid->IdleState = (uint8_t)(req->wValue >> 8);
 8005ac6:	683b      	ldr	r3, [r7, #0]
 8005ac8:	885b      	ldrh	r3, [r3, #2]
 8005aca:	0a1b      	lsrs	r3, r3, #8
 8005acc:	b29b      	uxth	r3, r3
 8005ace:	b2db      	uxtb	r3, r3
 8005ad0:	461a      	mov	r2, r3
 8005ad2:	693b      	ldr	r3, [r7, #16]
 8005ad4:	649a      	str	r2, [r3, #72]	; 0x48
          break;
 8005ad6:	e019      	b.n	8005b0c <USBD_CUSTOM_HID_Setup+0xd0>

        case CUSTOM_HID_REQ_GET_IDLE:
          USBD_CtlSendData(pdev, (uint8_t *)(void *)&hhid->IdleState, 1U);
 8005ad8:	693b      	ldr	r3, [r7, #16]
 8005ada:	3348      	adds	r3, #72	; 0x48
 8005adc:	2201      	movs	r2, #1
 8005ade:	4619      	mov	r1, r3
 8005ae0:	6878      	ldr	r0, [r7, #4]
 8005ae2:	f001 f98e 	bl	8006e02 <USBD_CtlSendData>
          break;
 8005ae6:	e011      	b.n	8005b0c <USBD_CUSTOM_HID_Setup+0xd0>

        case CUSTOM_HID_REQ_SET_REPORT:
          hhid->IsReportAvailable = 1U;
 8005ae8:	693b      	ldr	r3, [r7, #16]
 8005aea:	2201      	movs	r2, #1
 8005aec:	651a      	str	r2, [r3, #80]	; 0x50
          USBD_CtlPrepareRx(pdev, hhid->Report_buf, req->wLength);
 8005aee:	6939      	ldr	r1, [r7, #16]
 8005af0:	683b      	ldr	r3, [r7, #0]
 8005af2:	88db      	ldrh	r3, [r3, #6]
 8005af4:	461a      	mov	r2, r3
 8005af6:	6878      	ldr	r0, [r7, #4]
 8005af8:	f001 f9b1 	bl	8006e5e <USBD_CtlPrepareRx>
          break;
 8005afc:	e006      	b.n	8005b0c <USBD_CUSTOM_HID_Setup+0xd0>

        default:
          USBD_CtlError(pdev, req);
 8005afe:	6839      	ldr	r1, [r7, #0]
 8005b00:	6878      	ldr	r0, [r7, #4]
 8005b02:	f001 f914 	bl	8006d2e <USBD_CtlError>
          ret = USBD_FAIL;
 8005b06:	2302      	movs	r3, #2
 8005b08:	75fb      	strb	r3, [r7, #23]
          break;
 8005b0a:	bf00      	nop
      }
      break;
 8005b0c:	e08f      	b.n	8005c2e <USBD_CUSTOM_HID_Setup+0x1f2>

    case USB_REQ_TYPE_STANDARD:
      switch (req->bRequest)
 8005b0e:	683b      	ldr	r3, [r7, #0]
 8005b10:	785b      	ldrb	r3, [r3, #1]
 8005b12:	2b0b      	cmp	r3, #11
 8005b14:	d87c      	bhi.n	8005c10 <USBD_CUSTOM_HID_Setup+0x1d4>
 8005b16:	a201      	add	r2, pc, #4	; (adr r2, 8005b1c <USBD_CUSTOM_HID_Setup+0xe0>)
 8005b18:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005b1c:	08005b4d 	.word	0x08005b4d
 8005b20:	08005c11 	.word	0x08005c11
 8005b24:	08005c11 	.word	0x08005c11
 8005b28:	08005c11 	.word	0x08005c11
 8005b2c:	08005c11 	.word	0x08005c11
 8005b30:	08005c11 	.word	0x08005c11
 8005b34:	08005b75 	.word	0x08005b75
 8005b38:	08005c11 	.word	0x08005c11
 8005b3c:	08005c11 	.word	0x08005c11
 8005b40:	08005c11 	.word	0x08005c11
 8005b44:	08005bc3 	.word	0x08005bc3
 8005b48:	08005beb 	.word	0x08005beb
      {
        case USB_REQ_GET_STATUS:
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8005b4c:	687b      	ldr	r3, [r7, #4]
 8005b4e:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8005b52:	2b03      	cmp	r3, #3
 8005b54:	d107      	bne.n	8005b66 <USBD_CUSTOM_HID_Setup+0x12a>
          {
            USBD_CtlSendData(pdev, (uint8_t *)(void *)&status_info, 2U);
 8005b56:	f107 030e 	add.w	r3, r7, #14
 8005b5a:	2202      	movs	r2, #2
 8005b5c:	4619      	mov	r1, r3
 8005b5e:	6878      	ldr	r0, [r7, #4]
 8005b60:	f001 f94f 	bl	8006e02 <USBD_CtlSendData>
          else
          {
            USBD_CtlError(pdev, req);
            ret = USBD_FAIL;
          }
          break;
 8005b64:	e05b      	b.n	8005c1e <USBD_CUSTOM_HID_Setup+0x1e2>
            USBD_CtlError(pdev, req);
 8005b66:	6839      	ldr	r1, [r7, #0]
 8005b68:	6878      	ldr	r0, [r7, #4]
 8005b6a:	f001 f8e0 	bl	8006d2e <USBD_CtlError>
            ret = USBD_FAIL;
 8005b6e:	2302      	movs	r3, #2
 8005b70:	75fb      	strb	r3, [r7, #23]
          break;
 8005b72:	e054      	b.n	8005c1e <USBD_CUSTOM_HID_Setup+0x1e2>

        case USB_REQ_GET_DESCRIPTOR:
          if (req->wValue >> 8 == CUSTOM_HID_REPORT_DESC)
 8005b74:	683b      	ldr	r3, [r7, #0]
 8005b76:	885b      	ldrh	r3, [r3, #2]
 8005b78:	0a1b      	lsrs	r3, r3, #8
 8005b7a:	b29b      	uxth	r3, r3
 8005b7c:	2b22      	cmp	r3, #34	; 0x22
 8005b7e:	d10b      	bne.n	8005b98 <USBD_CUSTOM_HID_Setup+0x15c>
          {
            len = MIN(USBD_CUSTOM_HID_REPORT_DESC_SIZE, req->wLength);
 8005b80:	683b      	ldr	r3, [r7, #0]
 8005b82:	88db      	ldrh	r3, [r3, #6]
 8005b84:	2b22      	cmp	r3, #34	; 0x22
 8005b86:	bf28      	it	cs
 8005b88:	2322      	movcs	r3, #34	; 0x22
 8005b8a:	83fb      	strh	r3, [r7, #30]
            pbuf = ((USBD_CUSTOM_HID_ItfTypeDef *)pdev->pUserData)->pReport;
 8005b8c:	687b      	ldr	r3, [r7, #4]
 8005b8e:	f8d3 32bc 	ldr.w	r3, [r3, #700]	; 0x2bc
 8005b92:	681b      	ldr	r3, [r3, #0]
 8005b94:	61bb      	str	r3, [r7, #24]
 8005b96:	e00d      	b.n	8005bb4 <USBD_CUSTOM_HID_Setup+0x178>
          }
          else
          {
            if (req->wValue >> 8 == CUSTOM_HID_DESCRIPTOR_TYPE)
 8005b98:	683b      	ldr	r3, [r7, #0]
 8005b9a:	885b      	ldrh	r3, [r3, #2]
 8005b9c:	0a1b      	lsrs	r3, r3, #8
 8005b9e:	b29b      	uxth	r3, r3
 8005ba0:	2b21      	cmp	r3, #33	; 0x21
 8005ba2:	d107      	bne.n	8005bb4 <USBD_CUSTOM_HID_Setup+0x178>
            {
              pbuf = USBD_CUSTOM_HID_Desc;
 8005ba4:	4b24      	ldr	r3, [pc, #144]	; (8005c38 <USBD_CUSTOM_HID_Setup+0x1fc>)
 8005ba6:	61bb      	str	r3, [r7, #24]
              len = MIN(USB_CUSTOM_HID_DESC_SIZ, req->wLength);
 8005ba8:	683b      	ldr	r3, [r7, #0]
 8005baa:	88db      	ldrh	r3, [r3, #6]
 8005bac:	2b09      	cmp	r3, #9
 8005bae:	bf28      	it	cs
 8005bb0:	2309      	movcs	r3, #9
 8005bb2:	83fb      	strh	r3, [r7, #30]
            }
          }

          USBD_CtlSendData(pdev, pbuf, len);
 8005bb4:	8bfb      	ldrh	r3, [r7, #30]
 8005bb6:	461a      	mov	r2, r3
 8005bb8:	69b9      	ldr	r1, [r7, #24]
 8005bba:	6878      	ldr	r0, [r7, #4]
 8005bbc:	f001 f921 	bl	8006e02 <USBD_CtlSendData>
          break;
 8005bc0:	e02d      	b.n	8005c1e <USBD_CUSTOM_HID_Setup+0x1e2>

        case USB_REQ_GET_INTERFACE :
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8005bc2:	687b      	ldr	r3, [r7, #4]
 8005bc4:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8005bc8:	2b03      	cmp	r3, #3
 8005bca:	d107      	bne.n	8005bdc <USBD_CUSTOM_HID_Setup+0x1a0>
          {
            USBD_CtlSendData(pdev, (uint8_t *)(void *)&hhid->AltSetting, 1U);
 8005bcc:	693b      	ldr	r3, [r7, #16]
 8005bce:	334c      	adds	r3, #76	; 0x4c
 8005bd0:	2201      	movs	r2, #1
 8005bd2:	4619      	mov	r1, r3
 8005bd4:	6878      	ldr	r0, [r7, #4]
 8005bd6:	f001 f914 	bl	8006e02 <USBD_CtlSendData>
          else
          {
            USBD_CtlError(pdev, req);
            ret = USBD_FAIL;
          }
          break;
 8005bda:	e020      	b.n	8005c1e <USBD_CUSTOM_HID_Setup+0x1e2>
            USBD_CtlError(pdev, req);
 8005bdc:	6839      	ldr	r1, [r7, #0]
 8005bde:	6878      	ldr	r0, [r7, #4]
 8005be0:	f001 f8a5 	bl	8006d2e <USBD_CtlError>
            ret = USBD_FAIL;
 8005be4:	2302      	movs	r3, #2
 8005be6:	75fb      	strb	r3, [r7, #23]
          break;
 8005be8:	e019      	b.n	8005c1e <USBD_CUSTOM_HID_Setup+0x1e2>

        case USB_REQ_SET_INTERFACE :
          if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8005bea:	687b      	ldr	r3, [r7, #4]
 8005bec:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8005bf0:	2b03      	cmp	r3, #3
 8005bf2:	d106      	bne.n	8005c02 <USBD_CUSTOM_HID_Setup+0x1c6>
          {
            hhid->AltSetting = (uint8_t)(req->wValue);
 8005bf4:	683b      	ldr	r3, [r7, #0]
 8005bf6:	885b      	ldrh	r3, [r3, #2]
 8005bf8:	b2db      	uxtb	r3, r3
 8005bfa:	461a      	mov	r2, r3
 8005bfc:	693b      	ldr	r3, [r7, #16]
 8005bfe:	64da      	str	r2, [r3, #76]	; 0x4c
          else
          {
            USBD_CtlError(pdev, req);
            ret = USBD_FAIL;
          }
          break;
 8005c00:	e00d      	b.n	8005c1e <USBD_CUSTOM_HID_Setup+0x1e2>
            USBD_CtlError(pdev, req);
 8005c02:	6839      	ldr	r1, [r7, #0]
 8005c04:	6878      	ldr	r0, [r7, #4]
 8005c06:	f001 f892 	bl	8006d2e <USBD_CtlError>
            ret = USBD_FAIL;
 8005c0a:	2302      	movs	r3, #2
 8005c0c:	75fb      	strb	r3, [r7, #23]
          break;
 8005c0e:	e006      	b.n	8005c1e <USBD_CUSTOM_HID_Setup+0x1e2>

        default:
          USBD_CtlError(pdev, req);
 8005c10:	6839      	ldr	r1, [r7, #0]
 8005c12:	6878      	ldr	r0, [r7, #4]
 8005c14:	f001 f88b 	bl	8006d2e <USBD_CtlError>
          ret = USBD_FAIL;
 8005c18:	2302      	movs	r3, #2
 8005c1a:	75fb      	strb	r3, [r7, #23]
          break;
 8005c1c:	bf00      	nop
      }
      break;
 8005c1e:	e006      	b.n	8005c2e <USBD_CUSTOM_HID_Setup+0x1f2>

    default:
      USBD_CtlError(pdev, req);
 8005c20:	6839      	ldr	r1, [r7, #0]
 8005c22:	6878      	ldr	r0, [r7, #4]
 8005c24:	f001 f883 	bl	8006d2e <USBD_CtlError>
      ret = USBD_FAIL;
 8005c28:	2302      	movs	r3, #2
 8005c2a:	75fb      	strb	r3, [r7, #23]
      break;
 8005c2c:	bf00      	nop
  }
  return ret;
 8005c2e:	7dfb      	ldrb	r3, [r7, #23]
}
 8005c30:	4618      	mov	r0, r3
 8005c32:	3720      	adds	r7, #32
 8005c34:	46bd      	mov	sp, r7
 8005c36:	bd80      	pop	{r7, pc}
 8005c38:	200000c8 	.word	0x200000c8

08005c3c <USBD_CUSTOM_HID_SendReport>:
  * @retval status
  */
uint8_t USBD_CUSTOM_HID_SendReport(USBD_HandleTypeDef  *pdev,
                                   uint8_t *report,
                                   uint16_t len)
{
 8005c3c:	b580      	push	{r7, lr}
 8005c3e:	b086      	sub	sp, #24
 8005c40:	af00      	add	r7, sp, #0
 8005c42:	60f8      	str	r0, [r7, #12]
 8005c44:	60b9      	str	r1, [r7, #8]
 8005c46:	4613      	mov	r3, r2
 8005c48:	80fb      	strh	r3, [r7, #6]
  USBD_CUSTOM_HID_HandleTypeDef     *hhid = (USBD_CUSTOM_HID_HandleTypeDef *)pdev->pClassData;
 8005c4a:	68fb      	ldr	r3, [r7, #12]
 8005c4c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8005c50:	617b      	str	r3, [r7, #20]

  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8005c52:	68fb      	ldr	r3, [r7, #12]
 8005c54:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8005c58:	2b03      	cmp	r3, #3
 8005c5a:	d111      	bne.n	8005c80 <USBD_CUSTOM_HID_SendReport+0x44>
  {
    if (hhid->state == CUSTOM_HID_IDLE)
 8005c5c:	697b      	ldr	r3, [r7, #20]
 8005c5e:	f893 3054 	ldrb.w	r3, [r3, #84]	; 0x54
 8005c62:	2b00      	cmp	r3, #0
 8005c64:	d10a      	bne.n	8005c7c <USBD_CUSTOM_HID_SendReport+0x40>
    {
      hhid->state = CUSTOM_HID_BUSY;
 8005c66:	697b      	ldr	r3, [r7, #20]
 8005c68:	2201      	movs	r2, #1
 8005c6a:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54
      USBD_LL_Transmit(pdev, CUSTOM_HID_EPIN_ADDR, report, len);
 8005c6e:	88fb      	ldrh	r3, [r7, #6]
 8005c70:	68ba      	ldr	r2, [r7, #8]
 8005c72:	2181      	movs	r1, #129	; 0x81
 8005c74:	68f8      	ldr	r0, [r7, #12]
 8005c76:	f001 fcbe 	bl	80075f6 <USBD_LL_Transmit>
 8005c7a:	e001      	b.n	8005c80 <USBD_CUSTOM_HID_SendReport+0x44>
    }
    else
    {
      return USBD_BUSY;
 8005c7c:	2301      	movs	r3, #1
 8005c7e:	e000      	b.n	8005c82 <USBD_CUSTOM_HID_SendReport+0x46>
    }
  }
  return USBD_OK;
 8005c80:	2300      	movs	r3, #0
}
 8005c82:	4618      	mov	r0, r3
 8005c84:	3718      	adds	r7, #24
 8005c86:	46bd      	mov	sp, r7
 8005c88:	bd80      	pop	{r7, pc}
	...

08005c8c <USBD_CUSTOM_HID_GetFSCfgDesc>:
  * @param  speed : current device speed
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t  *USBD_CUSTOM_HID_GetFSCfgDesc(uint16_t *length)
{
 8005c8c:	b480      	push	{r7}
 8005c8e:	b083      	sub	sp, #12
 8005c90:	af00      	add	r7, sp, #0
 8005c92:	6078      	str	r0, [r7, #4]
  *length = sizeof(USBD_CUSTOM_HID_CfgFSDesc);
 8005c94:	687b      	ldr	r3, [r7, #4]
 8005c96:	2229      	movs	r2, #41	; 0x29
 8005c98:	801a      	strh	r2, [r3, #0]
  return USBD_CUSTOM_HID_CfgFSDesc;
 8005c9a:	4b03      	ldr	r3, [pc, #12]	; (8005ca8 <USBD_CUSTOM_HID_GetFSCfgDesc+0x1c>)
}
 8005c9c:	4618      	mov	r0, r3
 8005c9e:	370c      	adds	r7, #12
 8005ca0:	46bd      	mov	sp, r7
 8005ca2:	bc80      	pop	{r7}
 8005ca4:	4770      	bx	lr
 8005ca6:	bf00      	nop
 8005ca8:	20000044 	.word	0x20000044

08005cac <USBD_CUSTOM_HID_GetHSCfgDesc>:
  * @param  speed : current device speed
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t  *USBD_CUSTOM_HID_GetHSCfgDesc(uint16_t *length)
{
 8005cac:	b480      	push	{r7}
 8005cae:	b083      	sub	sp, #12
 8005cb0:	af00      	add	r7, sp, #0
 8005cb2:	6078      	str	r0, [r7, #4]
  *length = sizeof(USBD_CUSTOM_HID_CfgHSDesc);
 8005cb4:	687b      	ldr	r3, [r7, #4]
 8005cb6:	2229      	movs	r2, #41	; 0x29
 8005cb8:	801a      	strh	r2, [r3, #0]
  return USBD_CUSTOM_HID_CfgHSDesc;
 8005cba:	4b03      	ldr	r3, [pc, #12]	; (8005cc8 <USBD_CUSTOM_HID_GetHSCfgDesc+0x1c>)
}
 8005cbc:	4618      	mov	r0, r3
 8005cbe:	370c      	adds	r7, #12
 8005cc0:	46bd      	mov	sp, r7
 8005cc2:	bc80      	pop	{r7}
 8005cc4:	4770      	bx	lr
 8005cc6:	bf00      	nop
 8005cc8:	20000070 	.word	0x20000070

08005ccc <USBD_CUSTOM_HID_GetOtherSpeedCfgDesc>:
  * @param  speed : current device speed
  * @param  length : pointer data length
  * @retval pointer to descriptor buffer
  */
static uint8_t  *USBD_CUSTOM_HID_GetOtherSpeedCfgDesc(uint16_t *length)
{
 8005ccc:	b480      	push	{r7}
 8005cce:	b083      	sub	sp, #12
 8005cd0:	af00      	add	r7, sp, #0
 8005cd2:	6078      	str	r0, [r7, #4]
  *length = sizeof(USBD_CUSTOM_HID_OtherSpeedCfgDesc);
 8005cd4:	687b      	ldr	r3, [r7, #4]
 8005cd6:	2229      	movs	r2, #41	; 0x29
 8005cd8:	801a      	strh	r2, [r3, #0]
  return USBD_CUSTOM_HID_OtherSpeedCfgDesc;
 8005cda:	4b03      	ldr	r3, [pc, #12]	; (8005ce8 <USBD_CUSTOM_HID_GetOtherSpeedCfgDesc+0x1c>)
}
 8005cdc:	4618      	mov	r0, r3
 8005cde:	370c      	adds	r7, #12
 8005ce0:	46bd      	mov	sp, r7
 8005ce2:	bc80      	pop	{r7}
 8005ce4:	4770      	bx	lr
 8005ce6:	bf00      	nop
 8005ce8:	2000009c 	.word	0x2000009c

08005cec <USBD_CUSTOM_HID_DataIn>:
  * @param  epnum: endpoint index
  * @retval status
  */
static uint8_t  USBD_CUSTOM_HID_DataIn(USBD_HandleTypeDef *pdev,
                                       uint8_t epnum)
{
 8005cec:	b480      	push	{r7}
 8005cee:	b083      	sub	sp, #12
 8005cf0:	af00      	add	r7, sp, #0
 8005cf2:	6078      	str	r0, [r7, #4]
 8005cf4:	460b      	mov	r3, r1
 8005cf6:	70fb      	strb	r3, [r7, #3]
  /* Ensure that the FIFO is empty before a new transfer, this condition could
  be caused by  a new transfer before the end of the previous transfer */
  ((USBD_CUSTOM_HID_HandleTypeDef *)pdev->pClassData)->state = CUSTOM_HID_IDLE;
 8005cf8:	687b      	ldr	r3, [r7, #4]
 8005cfa:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8005cfe:	2200      	movs	r2, #0
 8005d00:	f883 2054 	strb.w	r2, [r3, #84]	; 0x54

  return USBD_OK;
 8005d04:	2300      	movs	r3, #0
}
 8005d06:	4618      	mov	r0, r3
 8005d08:	370c      	adds	r7, #12
 8005d0a:	46bd      	mov	sp, r7
 8005d0c:	bc80      	pop	{r7}
 8005d0e:	4770      	bx	lr

08005d10 <USBD_CUSTOM_HID_DataOut>:
  * @param  epnum: endpoint index
  * @retval status
  */
static uint8_t  USBD_CUSTOM_HID_DataOut(USBD_HandleTypeDef *pdev,
                                        uint8_t epnum)
{
 8005d10:	b580      	push	{r7, lr}
 8005d12:	b084      	sub	sp, #16
 8005d14:	af00      	add	r7, sp, #0
 8005d16:	6078      	str	r0, [r7, #4]
 8005d18:	460b      	mov	r3, r1
 8005d1a:	70fb      	strb	r3, [r7, #3]

  USBD_CUSTOM_HID_HandleTypeDef     *hhid = (USBD_CUSTOM_HID_HandleTypeDef *)pdev->pClassData;
 8005d1c:	687b      	ldr	r3, [r7, #4]
 8005d1e:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8005d22:	60fb      	str	r3, [r7, #12]

  ((USBD_CUSTOM_HID_ItfTypeDef *)pdev->pUserData)->OutEvent(hhid->Report_buf[0],
 8005d24:	687b      	ldr	r3, [r7, #4]
 8005d26:	f8d3 32bc 	ldr.w	r3, [r3, #700]	; 0x2bc
 8005d2a:	68db      	ldr	r3, [r3, #12]
 8005d2c:	68fa      	ldr	r2, [r7, #12]
 8005d2e:	7810      	ldrb	r0, [r2, #0]
 8005d30:	68fa      	ldr	r2, [r7, #12]
 8005d32:	7852      	ldrb	r2, [r2, #1]
 8005d34:	4611      	mov	r1, r2
 8005d36:	4798      	blx	r3
                                                            hhid->Report_buf[1]);

  USBD_LL_PrepareReceive(pdev, CUSTOM_HID_EPOUT_ADDR, hhid->Report_buf,
 8005d38:	68fa      	ldr	r2, [r7, #12]
 8005d3a:	2341      	movs	r3, #65	; 0x41
 8005d3c:	2101      	movs	r1, #1
 8005d3e:	6878      	ldr	r0, [r7, #4]
 8005d40:	f001 fc7c 	bl	800763c <USBD_LL_PrepareReceive>
                         USBD_CUSTOMHID_OUTREPORT_BUF_SIZE);

  return USBD_OK;
 8005d44:	2300      	movs	r3, #0
}
 8005d46:	4618      	mov	r0, r3
 8005d48:	3710      	adds	r7, #16
 8005d4a:	46bd      	mov	sp, r7
 8005d4c:	bd80      	pop	{r7, pc}

08005d4e <USBD_CUSTOM_HID_EP0_RxReady>:
  *         Handles control request data.
  * @param  pdev: device instance
  * @retval status
  */
static uint8_t USBD_CUSTOM_HID_EP0_RxReady(USBD_HandleTypeDef *pdev)
{
 8005d4e:	b580      	push	{r7, lr}
 8005d50:	b084      	sub	sp, #16
 8005d52:	af00      	add	r7, sp, #0
 8005d54:	6078      	str	r0, [r7, #4]
  USBD_CUSTOM_HID_HandleTypeDef     *hhid = (USBD_CUSTOM_HID_HandleTypeDef *)pdev->pClassData;
 8005d56:	687b      	ldr	r3, [r7, #4]
 8005d58:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8005d5c:	60fb      	str	r3, [r7, #12]

  if (hhid->IsReportAvailable == 1U)
 8005d5e:	68fb      	ldr	r3, [r7, #12]
 8005d60:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005d62:	2b01      	cmp	r3, #1
 8005d64:	d10c      	bne.n	8005d80 <USBD_CUSTOM_HID_EP0_RxReady+0x32>
  {
    ((USBD_CUSTOM_HID_ItfTypeDef *)pdev->pUserData)->OutEvent(hhid->Report_buf[0],
 8005d66:	687b      	ldr	r3, [r7, #4]
 8005d68:	f8d3 32bc 	ldr.w	r3, [r3, #700]	; 0x2bc
 8005d6c:	68db      	ldr	r3, [r3, #12]
 8005d6e:	68fa      	ldr	r2, [r7, #12]
 8005d70:	7810      	ldrb	r0, [r2, #0]
 8005d72:	68fa      	ldr	r2, [r7, #12]
 8005d74:	7852      	ldrb	r2, [r2, #1]
 8005d76:	4611      	mov	r1, r2
 8005d78:	4798      	blx	r3
                                                              hhid->Report_buf[1]);
    hhid->IsReportAvailable = 0U;
 8005d7a:	68fb      	ldr	r3, [r7, #12]
 8005d7c:	2200      	movs	r2, #0
 8005d7e:	651a      	str	r2, [r3, #80]	; 0x50
  }

  return USBD_OK;
 8005d80:	2300      	movs	r3, #0
}
 8005d82:	4618      	mov	r0, r3
 8005d84:	3710      	adds	r7, #16
 8005d86:	46bd      	mov	sp, r7
 8005d88:	bd80      	pop	{r7, pc}
	...

08005d8c <USBD_CUSTOM_HID_GetDeviceQualifierDesc>:
*         return Device Qualifier descriptor
* @param  length : pointer data length
* @retval pointer to descriptor buffer
*/
static uint8_t  *USBD_CUSTOM_HID_GetDeviceQualifierDesc(uint16_t *length)
{
 8005d8c:	b480      	push	{r7}
 8005d8e:	b083      	sub	sp, #12
 8005d90:	af00      	add	r7, sp, #0
 8005d92:	6078      	str	r0, [r7, #4]
  *length = sizeof(USBD_CUSTOM_HID_DeviceQualifierDesc);
 8005d94:	687b      	ldr	r3, [r7, #4]
 8005d96:	220a      	movs	r2, #10
 8005d98:	801a      	strh	r2, [r3, #0]
  return USBD_CUSTOM_HID_DeviceQualifierDesc;
 8005d9a:	4b03      	ldr	r3, [pc, #12]	; (8005da8 <USBD_CUSTOM_HID_GetDeviceQualifierDesc+0x1c>)
}
 8005d9c:	4618      	mov	r0, r3
 8005d9e:	370c      	adds	r7, #12
 8005da0:	46bd      	mov	sp, r7
 8005da2:	bc80      	pop	{r7}
 8005da4:	4770      	bx	lr
 8005da6:	bf00      	nop
 8005da8:	200000d4 	.word	0x200000d4

08005dac <USBD_CUSTOM_HID_RegisterInterface>:
  * @param  fops: CUSTOMHID Interface callback
  * @retval status
  */
uint8_t  USBD_CUSTOM_HID_RegisterInterface(USBD_HandleTypeDef   *pdev,
                                           USBD_CUSTOM_HID_ItfTypeDef *fops)
{
 8005dac:	b480      	push	{r7}
 8005dae:	b085      	sub	sp, #20
 8005db0:	af00      	add	r7, sp, #0
 8005db2:	6078      	str	r0, [r7, #4]
 8005db4:	6039      	str	r1, [r7, #0]
  uint8_t  ret = USBD_FAIL;
 8005db6:	2302      	movs	r3, #2
 8005db8:	73fb      	strb	r3, [r7, #15]

  if (fops != NULL)
 8005dba:	683b      	ldr	r3, [r7, #0]
 8005dbc:	2b00      	cmp	r3, #0
 8005dbe:	d005      	beq.n	8005dcc <USBD_CUSTOM_HID_RegisterInterface+0x20>
  {
    pdev->pUserData = fops;
 8005dc0:	687b      	ldr	r3, [r7, #4]
 8005dc2:	683a      	ldr	r2, [r7, #0]
 8005dc4:	f8c3 22bc 	str.w	r2, [r3, #700]	; 0x2bc
    ret = USBD_OK;
 8005dc8:	2300      	movs	r3, #0
 8005dca:	73fb      	strb	r3, [r7, #15]
  }

  return ret;
 8005dcc:	7bfb      	ldrb	r3, [r7, #15]
}
 8005dce:	4618      	mov	r0, r3
 8005dd0:	3714      	adds	r7, #20
 8005dd2:	46bd      	mov	sp, r7
 8005dd4:	bc80      	pop	{r7}
 8005dd6:	4770      	bx	lr

08005dd8 <USBD_Init>:
* @param  id: Low level core index
* @retval None
*/
USBD_StatusTypeDef USBD_Init(USBD_HandleTypeDef *pdev,
                             USBD_DescriptorsTypeDef *pdesc, uint8_t id)
{
 8005dd8:	b580      	push	{r7, lr}
 8005dda:	b084      	sub	sp, #16
 8005ddc:	af00      	add	r7, sp, #0
 8005dde:	60f8      	str	r0, [r7, #12]
 8005de0:	60b9      	str	r1, [r7, #8]
 8005de2:	4613      	mov	r3, r2
 8005de4:	71fb      	strb	r3, [r7, #7]
  /* Check whether the USB Host handle is valid */
  if (pdev == NULL)
 8005de6:	68fb      	ldr	r3, [r7, #12]
 8005de8:	2b00      	cmp	r3, #0
 8005dea:	d101      	bne.n	8005df0 <USBD_Init+0x18>
  {
#if (USBD_DEBUG_LEVEL > 1U)
    USBD_ErrLog("Invalid Device handle");
#endif
    return USBD_FAIL;
 8005dec:	2302      	movs	r3, #2
 8005dee:	e01a      	b.n	8005e26 <USBD_Init+0x4e>
  }

  /* Unlink previous class*/
  if (pdev->pClass != NULL)
 8005df0:	68fb      	ldr	r3, [r7, #12]
 8005df2:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8005df6:	2b00      	cmp	r3, #0
 8005df8:	d003      	beq.n	8005e02 <USBD_Init+0x2a>
  {
    pdev->pClass = NULL;
 8005dfa:	68fb      	ldr	r3, [r7, #12]
 8005dfc:	2200      	movs	r2, #0
 8005dfe:	f8c3 22b4 	str.w	r2, [r3, #692]	; 0x2b4
  }

  /* Assign USBD Descriptors */
  if (pdesc != NULL)
 8005e02:	68bb      	ldr	r3, [r7, #8]
 8005e04:	2b00      	cmp	r3, #0
 8005e06:	d003      	beq.n	8005e10 <USBD_Init+0x38>
  {
    pdev->pDesc = pdesc;
 8005e08:	68fb      	ldr	r3, [r7, #12]
 8005e0a:	68ba      	ldr	r2, [r7, #8]
 8005e0c:	f8c3 22b0 	str.w	r2, [r3, #688]	; 0x2b0
  }

  /* Set Device initial State */
  pdev->dev_state = USBD_STATE_DEFAULT;
 8005e10:	68fb      	ldr	r3, [r7, #12]
 8005e12:	2201      	movs	r2, #1
 8005e14:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
  pdev->id = id;
 8005e18:	68fb      	ldr	r3, [r7, #12]
 8005e1a:	79fa      	ldrb	r2, [r7, #7]
 8005e1c:	701a      	strb	r2, [r3, #0]
  /* Initialize low level driver */
  USBD_LL_Init(pdev);
 8005e1e:	68f8      	ldr	r0, [r7, #12]
 8005e20:	f001 fab0 	bl	8007384 <USBD_LL_Init>

  return USBD_OK;
 8005e24:	2300      	movs	r3, #0
}
 8005e26:	4618      	mov	r0, r3
 8005e28:	3710      	adds	r7, #16
 8005e2a:	46bd      	mov	sp, r7
 8005e2c:	bd80      	pop	{r7, pc}

08005e2e <USBD_RegisterClass>:
  * @param  pDevice : Device Handle
  * @param  pclass: Class handle
  * @retval USBD Status
  */
USBD_StatusTypeDef  USBD_RegisterClass(USBD_HandleTypeDef *pdev, USBD_ClassTypeDef *pclass)
{
 8005e2e:	b480      	push	{r7}
 8005e30:	b085      	sub	sp, #20
 8005e32:	af00      	add	r7, sp, #0
 8005e34:	6078      	str	r0, [r7, #4]
 8005e36:	6039      	str	r1, [r7, #0]
  USBD_StatusTypeDef status = USBD_OK;
 8005e38:	2300      	movs	r3, #0
 8005e3a:	73fb      	strb	r3, [r7, #15]
  if (pclass != NULL)
 8005e3c:	683b      	ldr	r3, [r7, #0]
 8005e3e:	2b00      	cmp	r3, #0
 8005e40:	d006      	beq.n	8005e50 <USBD_RegisterClass+0x22>
  {
    /* link the class to the USB Device handle */
    pdev->pClass = pclass;
 8005e42:	687b      	ldr	r3, [r7, #4]
 8005e44:	683a      	ldr	r2, [r7, #0]
 8005e46:	f8c3 22b4 	str.w	r2, [r3, #692]	; 0x2b4
    status = USBD_OK;
 8005e4a:	2300      	movs	r3, #0
 8005e4c:	73fb      	strb	r3, [r7, #15]
 8005e4e:	e001      	b.n	8005e54 <USBD_RegisterClass+0x26>
  else
  {
#if (USBD_DEBUG_LEVEL > 1U)
    USBD_ErrLog("Invalid Class handle");
#endif
    status = USBD_FAIL;
 8005e50:	2302      	movs	r3, #2
 8005e52:	73fb      	strb	r3, [r7, #15]
  }

  return status;
 8005e54:	7bfb      	ldrb	r3, [r7, #15]
}
 8005e56:	4618      	mov	r0, r3
 8005e58:	3714      	adds	r7, #20
 8005e5a:	46bd      	mov	sp, r7
 8005e5c:	bc80      	pop	{r7}
 8005e5e:	4770      	bx	lr

08005e60 <USBD_Start>:
  *         Start the USB Device Core.
  * @param  pdev: Device Handle
  * @retval USBD Status
  */
USBD_StatusTypeDef  USBD_Start(USBD_HandleTypeDef *pdev)
{
 8005e60:	b580      	push	{r7, lr}
 8005e62:	b082      	sub	sp, #8
 8005e64:	af00      	add	r7, sp, #0
 8005e66:	6078      	str	r0, [r7, #4]
  /* Start the low level driver  */
  USBD_LL_Start(pdev);
 8005e68:	6878      	ldr	r0, [r7, #4]
 8005e6a:	f001 fadb 	bl	8007424 <USBD_LL_Start>

  return USBD_OK;
 8005e6e:	2300      	movs	r3, #0
}
 8005e70:	4618      	mov	r0, r3
 8005e72:	3708      	adds	r7, #8
 8005e74:	46bd      	mov	sp, r7
 8005e76:	bd80      	pop	{r7, pc}

08005e78 <USBD_RunTestMode>:
*         Launch test mode process
* @param  pdev: device instance
* @retval status
*/
USBD_StatusTypeDef  USBD_RunTestMode(USBD_HandleTypeDef  *pdev)
{
 8005e78:	b480      	push	{r7}
 8005e7a:	b083      	sub	sp, #12
 8005e7c:	af00      	add	r7, sp, #0
 8005e7e:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument compilation warning */
  UNUSED(pdev);

  return USBD_OK;
 8005e80:	2300      	movs	r3, #0
}
 8005e82:	4618      	mov	r0, r3
 8005e84:	370c      	adds	r7, #12
 8005e86:	46bd      	mov	sp, r7
 8005e88:	bc80      	pop	{r7}
 8005e8a:	4770      	bx	lr

08005e8c <USBD_SetClassConfig>:
* @param  cfgidx: configuration index
* @retval status
*/

USBD_StatusTypeDef USBD_SetClassConfig(USBD_HandleTypeDef  *pdev, uint8_t cfgidx)
{
 8005e8c:	b580      	push	{r7, lr}
 8005e8e:	b084      	sub	sp, #16
 8005e90:	af00      	add	r7, sp, #0
 8005e92:	6078      	str	r0, [r7, #4]
 8005e94:	460b      	mov	r3, r1
 8005e96:	70fb      	strb	r3, [r7, #3]
  USBD_StatusTypeDef ret = USBD_FAIL;
 8005e98:	2302      	movs	r3, #2
 8005e9a:	73fb      	strb	r3, [r7, #15]

  if (pdev->pClass != NULL)
 8005e9c:	687b      	ldr	r3, [r7, #4]
 8005e9e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8005ea2:	2b00      	cmp	r3, #0
 8005ea4:	d00c      	beq.n	8005ec0 <USBD_SetClassConfig+0x34>
  {
    /* Set configuration  and Start the Class*/
    if (pdev->pClass->Init(pdev, cfgidx) == 0U)
 8005ea6:	687b      	ldr	r3, [r7, #4]
 8005ea8:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8005eac:	681b      	ldr	r3, [r3, #0]
 8005eae:	78fa      	ldrb	r2, [r7, #3]
 8005eb0:	4611      	mov	r1, r2
 8005eb2:	6878      	ldr	r0, [r7, #4]
 8005eb4:	4798      	blx	r3
 8005eb6:	4603      	mov	r3, r0
 8005eb8:	2b00      	cmp	r3, #0
 8005eba:	d101      	bne.n	8005ec0 <USBD_SetClassConfig+0x34>
    {
      ret = USBD_OK;
 8005ebc:	2300      	movs	r3, #0
 8005ebe:	73fb      	strb	r3, [r7, #15]
    }
  }

  return ret;
 8005ec0:	7bfb      	ldrb	r3, [r7, #15]
}
 8005ec2:	4618      	mov	r0, r3
 8005ec4:	3710      	adds	r7, #16
 8005ec6:	46bd      	mov	sp, r7
 8005ec8:	bd80      	pop	{r7, pc}

08005eca <USBD_ClrClassConfig>:
* @param  pdev: device instance
* @param  cfgidx: configuration index
* @retval status: USBD_StatusTypeDef
*/
USBD_StatusTypeDef USBD_ClrClassConfig(USBD_HandleTypeDef  *pdev, uint8_t cfgidx)
{
 8005eca:	b580      	push	{r7, lr}
 8005ecc:	b082      	sub	sp, #8
 8005ece:	af00      	add	r7, sp, #0
 8005ed0:	6078      	str	r0, [r7, #4]
 8005ed2:	460b      	mov	r3, r1
 8005ed4:	70fb      	strb	r3, [r7, #3]
  /* Clear configuration  and De-initialize the Class process*/
  pdev->pClass->DeInit(pdev, cfgidx);
 8005ed6:	687b      	ldr	r3, [r7, #4]
 8005ed8:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8005edc:	685b      	ldr	r3, [r3, #4]
 8005ede:	78fa      	ldrb	r2, [r7, #3]
 8005ee0:	4611      	mov	r1, r2
 8005ee2:	6878      	ldr	r0, [r7, #4]
 8005ee4:	4798      	blx	r3

  return USBD_OK;
 8005ee6:	2300      	movs	r3, #0
}
 8005ee8:	4618      	mov	r0, r3
 8005eea:	3708      	adds	r7, #8
 8005eec:	46bd      	mov	sp, r7
 8005eee:	bd80      	pop	{r7, pc}

08005ef0 <USBD_LL_SetupStage>:
*         Handle the setup stage
* @param  pdev: device instance
* @retval status
*/
USBD_StatusTypeDef USBD_LL_SetupStage(USBD_HandleTypeDef *pdev, uint8_t *psetup)
{
 8005ef0:	b580      	push	{r7, lr}
 8005ef2:	b082      	sub	sp, #8
 8005ef4:	af00      	add	r7, sp, #0
 8005ef6:	6078      	str	r0, [r7, #4]
 8005ef8:	6039      	str	r1, [r7, #0]
  USBD_ParseSetupRequest(&pdev->request, psetup);
 8005efa:	687b      	ldr	r3, [r7, #4]
 8005efc:	f503 732a 	add.w	r3, r3, #680	; 0x2a8
 8005f00:	6839      	ldr	r1, [r7, #0]
 8005f02:	4618      	mov	r0, r3
 8005f04:	f000 fed7 	bl	8006cb6 <USBD_ParseSetupRequest>

  pdev->ep0_state = USBD_EP0_SETUP;
 8005f08:	687b      	ldr	r3, [r7, #4]
 8005f0a:	2201      	movs	r2, #1
 8005f0c:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294

  pdev->ep0_data_len = pdev->request.wLength;
 8005f10:	687b      	ldr	r3, [r7, #4]
 8005f12:	f8b3 32ae 	ldrh.w	r3, [r3, #686]	; 0x2ae
 8005f16:	461a      	mov	r2, r3
 8005f18:	687b      	ldr	r3, [r7, #4]
 8005f1a:	f8c3 2298 	str.w	r2, [r3, #664]	; 0x298

  switch (pdev->request.bmRequest & 0x1FU)
 8005f1e:	687b      	ldr	r3, [r7, #4]
 8005f20:	f893 32a8 	ldrb.w	r3, [r3, #680]	; 0x2a8
 8005f24:	f003 031f 	and.w	r3, r3, #31
 8005f28:	2b02      	cmp	r3, #2
 8005f2a:	d016      	beq.n	8005f5a <USBD_LL_SetupStage+0x6a>
 8005f2c:	2b02      	cmp	r3, #2
 8005f2e:	d81c      	bhi.n	8005f6a <USBD_LL_SetupStage+0x7a>
 8005f30:	2b00      	cmp	r3, #0
 8005f32:	d002      	beq.n	8005f3a <USBD_LL_SetupStage+0x4a>
 8005f34:	2b01      	cmp	r3, #1
 8005f36:	d008      	beq.n	8005f4a <USBD_LL_SetupStage+0x5a>
 8005f38:	e017      	b.n	8005f6a <USBD_LL_SetupStage+0x7a>
  {
    case USB_REQ_RECIPIENT_DEVICE:
      USBD_StdDevReq(pdev, &pdev->request);
 8005f3a:	687b      	ldr	r3, [r7, #4]
 8005f3c:	f503 732a 	add.w	r3, r3, #680	; 0x2a8
 8005f40:	4619      	mov	r1, r3
 8005f42:	6878      	ldr	r0, [r7, #4]
 8005f44:	f000 f9ca 	bl	80062dc <USBD_StdDevReq>
      break;
 8005f48:	e01a      	b.n	8005f80 <USBD_LL_SetupStage+0x90>

    case USB_REQ_RECIPIENT_INTERFACE:
      USBD_StdItfReq(pdev, &pdev->request);
 8005f4a:	687b      	ldr	r3, [r7, #4]
 8005f4c:	f503 732a 	add.w	r3, r3, #680	; 0x2a8
 8005f50:	4619      	mov	r1, r3
 8005f52:	6878      	ldr	r0, [r7, #4]
 8005f54:	f000 fa2c 	bl	80063b0 <USBD_StdItfReq>
      break;
 8005f58:	e012      	b.n	8005f80 <USBD_LL_SetupStage+0x90>

    case USB_REQ_RECIPIENT_ENDPOINT:
      USBD_StdEPReq(pdev, &pdev->request);
 8005f5a:	687b      	ldr	r3, [r7, #4]
 8005f5c:	f503 732a 	add.w	r3, r3, #680	; 0x2a8
 8005f60:	4619      	mov	r1, r3
 8005f62:	6878      	ldr	r0, [r7, #4]
 8005f64:	f000 fa6c 	bl	8006440 <USBD_StdEPReq>
      break;
 8005f68:	e00a      	b.n	8005f80 <USBD_LL_SetupStage+0x90>

    default:
      USBD_LL_StallEP(pdev, (pdev->request.bmRequest & 0x80U));
 8005f6a:	687b      	ldr	r3, [r7, #4]
 8005f6c:	f893 32a8 	ldrb.w	r3, [r3, #680]	; 0x2a8
 8005f70:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 8005f74:	b2db      	uxtb	r3, r3
 8005f76:	4619      	mov	r1, r3
 8005f78:	6878      	ldr	r0, [r7, #4]
 8005f7a:	f001 fab3 	bl	80074e4 <USBD_LL_StallEP>
      break;
 8005f7e:	bf00      	nop
  }

  return USBD_OK;
 8005f80:	2300      	movs	r3, #0
}
 8005f82:	4618      	mov	r0, r3
 8005f84:	3708      	adds	r7, #8
 8005f86:	46bd      	mov	sp, r7
 8005f88:	bd80      	pop	{r7, pc}

08005f8a <USBD_LL_DataOutStage>:
* @param  epnum: endpoint index
* @retval status
*/
USBD_StatusTypeDef USBD_LL_DataOutStage(USBD_HandleTypeDef *pdev,
                                        uint8_t epnum, uint8_t *pdata)
{
 8005f8a:	b580      	push	{r7, lr}
 8005f8c:	b086      	sub	sp, #24
 8005f8e:	af00      	add	r7, sp, #0
 8005f90:	60f8      	str	r0, [r7, #12]
 8005f92:	460b      	mov	r3, r1
 8005f94:	607a      	str	r2, [r7, #4]
 8005f96:	72fb      	strb	r3, [r7, #11]
  USBD_EndpointTypeDef *pep;

  if (epnum == 0U)
 8005f98:	7afb      	ldrb	r3, [r7, #11]
 8005f9a:	2b00      	cmp	r3, #0
 8005f9c:	d14b      	bne.n	8006036 <USBD_LL_DataOutStage+0xac>
  {
    pep = &pdev->ep_out[0];
 8005f9e:	68fb      	ldr	r3, [r7, #12]
 8005fa0:	f503 73aa 	add.w	r3, r3, #340	; 0x154
 8005fa4:	617b      	str	r3, [r7, #20]

    if (pdev->ep0_state == USBD_EP0_DATA_OUT)
 8005fa6:	68fb      	ldr	r3, [r7, #12]
 8005fa8:	f8d3 3294 	ldr.w	r3, [r3, #660]	; 0x294
 8005fac:	2b03      	cmp	r3, #3
 8005fae:	d134      	bne.n	800601a <USBD_LL_DataOutStage+0x90>
    {
      if (pep->rem_length > pep->maxpacket)
 8005fb0:	697b      	ldr	r3, [r7, #20]
 8005fb2:	68da      	ldr	r2, [r3, #12]
 8005fb4:	697b      	ldr	r3, [r7, #20]
 8005fb6:	691b      	ldr	r3, [r3, #16]
 8005fb8:	429a      	cmp	r2, r3
 8005fba:	d919      	bls.n	8005ff0 <USBD_LL_DataOutStage+0x66>
      {
        pep->rem_length -= pep->maxpacket;
 8005fbc:	697b      	ldr	r3, [r7, #20]
 8005fbe:	68da      	ldr	r2, [r3, #12]
 8005fc0:	697b      	ldr	r3, [r7, #20]
 8005fc2:	691b      	ldr	r3, [r3, #16]
 8005fc4:	1ad2      	subs	r2, r2, r3
 8005fc6:	697b      	ldr	r3, [r7, #20]
 8005fc8:	60da      	str	r2, [r3, #12]

        USBD_CtlContinueRx(pdev, pdata,
                           (uint16_t)MIN(pep->rem_length, pep->maxpacket));
 8005fca:	697b      	ldr	r3, [r7, #20]
 8005fcc:	68da      	ldr	r2, [r3, #12]
 8005fce:	697b      	ldr	r3, [r7, #20]
 8005fd0:	691b      	ldr	r3, [r3, #16]
        USBD_CtlContinueRx(pdev, pdata,
 8005fd2:	429a      	cmp	r2, r3
 8005fd4:	d203      	bcs.n	8005fde <USBD_LL_DataOutStage+0x54>
                           (uint16_t)MIN(pep->rem_length, pep->maxpacket));
 8005fd6:	697b      	ldr	r3, [r7, #20]
 8005fd8:	68db      	ldr	r3, [r3, #12]
        USBD_CtlContinueRx(pdev, pdata,
 8005fda:	b29b      	uxth	r3, r3
 8005fdc:	e002      	b.n	8005fe4 <USBD_LL_DataOutStage+0x5a>
                           (uint16_t)MIN(pep->rem_length, pep->maxpacket));
 8005fde:	697b      	ldr	r3, [r7, #20]
 8005fe0:	691b      	ldr	r3, [r3, #16]
        USBD_CtlContinueRx(pdev, pdata,
 8005fe2:	b29b      	uxth	r3, r3
 8005fe4:	461a      	mov	r2, r3
 8005fe6:	6879      	ldr	r1, [r7, #4]
 8005fe8:	68f8      	ldr	r0, [r7, #12]
 8005fea:	f000 ff56 	bl	8006e9a <USBD_CtlContinueRx>
 8005fee:	e038      	b.n	8006062 <USBD_LL_DataOutStage+0xd8>
      }
      else
      {
        if ((pdev->pClass->EP0_RxReady != NULL) &&
 8005ff0:	68fb      	ldr	r3, [r7, #12]
 8005ff2:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8005ff6:	691b      	ldr	r3, [r3, #16]
 8005ff8:	2b00      	cmp	r3, #0
 8005ffa:	d00a      	beq.n	8006012 <USBD_LL_DataOutStage+0x88>
            (pdev->dev_state == USBD_STATE_CONFIGURED))
 8005ffc:	68fb      	ldr	r3, [r7, #12]
 8005ffe:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
        if ((pdev->pClass->EP0_RxReady != NULL) &&
 8006002:	2b03      	cmp	r3, #3
 8006004:	d105      	bne.n	8006012 <USBD_LL_DataOutStage+0x88>
        {
          pdev->pClass->EP0_RxReady(pdev);
 8006006:	68fb      	ldr	r3, [r7, #12]
 8006008:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800600c:	691b      	ldr	r3, [r3, #16]
 800600e:	68f8      	ldr	r0, [r7, #12]
 8006010:	4798      	blx	r3
        }
        USBD_CtlSendStatus(pdev);
 8006012:	68f8      	ldr	r0, [r7, #12]
 8006014:	f000 ff53 	bl	8006ebe <USBD_CtlSendStatus>
 8006018:	e023      	b.n	8006062 <USBD_LL_DataOutStage+0xd8>
      }
    }
    else
    {
      if (pdev->ep0_state == USBD_EP0_STATUS_OUT)
 800601a:	68fb      	ldr	r3, [r7, #12]
 800601c:	f8d3 3294 	ldr.w	r3, [r3, #660]	; 0x294
 8006020:	2b05      	cmp	r3, #5
 8006022:	d11e      	bne.n	8006062 <USBD_LL_DataOutStage+0xd8>
      {
        /*
         * STATUS PHASE completed, update ep0_state to idle
         */
        pdev->ep0_state = USBD_EP0_IDLE;
 8006024:	68fb      	ldr	r3, [r7, #12]
 8006026:	2200      	movs	r2, #0
 8006028:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
        USBD_LL_StallEP(pdev, 0U);
 800602c:	2100      	movs	r1, #0
 800602e:	68f8      	ldr	r0, [r7, #12]
 8006030:	f001 fa58 	bl	80074e4 <USBD_LL_StallEP>
 8006034:	e015      	b.n	8006062 <USBD_LL_DataOutStage+0xd8>
      }
    }
  }
  else if ((pdev->pClass->DataOut != NULL) &&
 8006036:	68fb      	ldr	r3, [r7, #12]
 8006038:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800603c:	699b      	ldr	r3, [r3, #24]
 800603e:	2b00      	cmp	r3, #0
 8006040:	d00d      	beq.n	800605e <USBD_LL_DataOutStage+0xd4>
           (pdev->dev_state == USBD_STATE_CONFIGURED))
 8006042:	68fb      	ldr	r3, [r7, #12]
 8006044:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
  else if ((pdev->pClass->DataOut != NULL) &&
 8006048:	2b03      	cmp	r3, #3
 800604a:	d108      	bne.n	800605e <USBD_LL_DataOutStage+0xd4>
  {
    pdev->pClass->DataOut(pdev, epnum);
 800604c:	68fb      	ldr	r3, [r7, #12]
 800604e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8006052:	699b      	ldr	r3, [r3, #24]
 8006054:	7afa      	ldrb	r2, [r7, #11]
 8006056:	4611      	mov	r1, r2
 8006058:	68f8      	ldr	r0, [r7, #12]
 800605a:	4798      	blx	r3
 800605c:	e001      	b.n	8006062 <USBD_LL_DataOutStage+0xd8>
  }
  else
  {
    /* should never be in this condition */
    return USBD_FAIL;
 800605e:	2302      	movs	r3, #2
 8006060:	e000      	b.n	8006064 <USBD_LL_DataOutStage+0xda>
  }

  return USBD_OK;
 8006062:	2300      	movs	r3, #0
}
 8006064:	4618      	mov	r0, r3
 8006066:	3718      	adds	r7, #24
 8006068:	46bd      	mov	sp, r7
 800606a:	bd80      	pop	{r7, pc}

0800606c <USBD_LL_DataInStage>:
* @param  epnum: endpoint index
* @retval status
*/
USBD_StatusTypeDef USBD_LL_DataInStage(USBD_HandleTypeDef *pdev,
                                       uint8_t epnum, uint8_t *pdata)
{
 800606c:	b580      	push	{r7, lr}
 800606e:	b086      	sub	sp, #24
 8006070:	af00      	add	r7, sp, #0
 8006072:	60f8      	str	r0, [r7, #12]
 8006074:	460b      	mov	r3, r1
 8006076:	607a      	str	r2, [r7, #4]
 8006078:	72fb      	strb	r3, [r7, #11]
  USBD_EndpointTypeDef *pep;

  if (epnum == 0U)
 800607a:	7afb      	ldrb	r3, [r7, #11]
 800607c:	2b00      	cmp	r3, #0
 800607e:	d17f      	bne.n	8006180 <USBD_LL_DataInStage+0x114>
  {
    pep = &pdev->ep_in[0];
 8006080:	68fb      	ldr	r3, [r7, #12]
 8006082:	3314      	adds	r3, #20
 8006084:	617b      	str	r3, [r7, #20]

    if (pdev->ep0_state == USBD_EP0_DATA_IN)
 8006086:	68fb      	ldr	r3, [r7, #12]
 8006088:	f8d3 3294 	ldr.w	r3, [r3, #660]	; 0x294
 800608c:	2b02      	cmp	r3, #2
 800608e:	d15c      	bne.n	800614a <USBD_LL_DataInStage+0xde>
    {
      if (pep->rem_length > pep->maxpacket)
 8006090:	697b      	ldr	r3, [r7, #20]
 8006092:	68da      	ldr	r2, [r3, #12]
 8006094:	697b      	ldr	r3, [r7, #20]
 8006096:	691b      	ldr	r3, [r3, #16]
 8006098:	429a      	cmp	r2, r3
 800609a:	d915      	bls.n	80060c8 <USBD_LL_DataInStage+0x5c>
      {
        pep->rem_length -= pep->maxpacket;
 800609c:	697b      	ldr	r3, [r7, #20]
 800609e:	68da      	ldr	r2, [r3, #12]
 80060a0:	697b      	ldr	r3, [r7, #20]
 80060a2:	691b      	ldr	r3, [r3, #16]
 80060a4:	1ad2      	subs	r2, r2, r3
 80060a6:	697b      	ldr	r3, [r7, #20]
 80060a8:	60da      	str	r2, [r3, #12]

        USBD_CtlContinueSendData(pdev, pdata, (uint16_t)pep->rem_length);
 80060aa:	697b      	ldr	r3, [r7, #20]
 80060ac:	68db      	ldr	r3, [r3, #12]
 80060ae:	b29b      	uxth	r3, r3
 80060b0:	461a      	mov	r2, r3
 80060b2:	6879      	ldr	r1, [r7, #4]
 80060b4:	68f8      	ldr	r0, [r7, #12]
 80060b6:	f000 fec0 	bl	8006e3a <USBD_CtlContinueSendData>

        /* Prepare endpoint for premature end of transfer */
        USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 80060ba:	2300      	movs	r3, #0
 80060bc:	2200      	movs	r2, #0
 80060be:	2100      	movs	r1, #0
 80060c0:	68f8      	ldr	r0, [r7, #12]
 80060c2:	f001 fabb 	bl	800763c <USBD_LL_PrepareReceive>
 80060c6:	e04e      	b.n	8006166 <USBD_LL_DataInStage+0xfa>
      }
      else
      {
        /* last packet is MPS multiple, so send ZLP packet */
        if ((pep->total_length % pep->maxpacket == 0U) &&
 80060c8:	697b      	ldr	r3, [r7, #20]
 80060ca:	689b      	ldr	r3, [r3, #8]
 80060cc:	697a      	ldr	r2, [r7, #20]
 80060ce:	6912      	ldr	r2, [r2, #16]
 80060d0:	fbb3 f1f2 	udiv	r1, r3, r2
 80060d4:	fb01 f202 	mul.w	r2, r1, r2
 80060d8:	1a9b      	subs	r3, r3, r2
 80060da:	2b00      	cmp	r3, #0
 80060dc:	d11c      	bne.n	8006118 <USBD_LL_DataInStage+0xac>
            (pep->total_length >= pep->maxpacket) &&
 80060de:	697b      	ldr	r3, [r7, #20]
 80060e0:	689a      	ldr	r2, [r3, #8]
 80060e2:	697b      	ldr	r3, [r7, #20]
 80060e4:	691b      	ldr	r3, [r3, #16]
        if ((pep->total_length % pep->maxpacket == 0U) &&
 80060e6:	429a      	cmp	r2, r3
 80060e8:	d316      	bcc.n	8006118 <USBD_LL_DataInStage+0xac>
            (pep->total_length < pdev->ep0_data_len))
 80060ea:	697b      	ldr	r3, [r7, #20]
 80060ec:	689a      	ldr	r2, [r3, #8]
 80060ee:	68fb      	ldr	r3, [r7, #12]
 80060f0:	f8d3 3298 	ldr.w	r3, [r3, #664]	; 0x298
            (pep->total_length >= pep->maxpacket) &&
 80060f4:	429a      	cmp	r2, r3
 80060f6:	d20f      	bcs.n	8006118 <USBD_LL_DataInStage+0xac>
        {
          USBD_CtlContinueSendData(pdev, NULL, 0U);
 80060f8:	2200      	movs	r2, #0
 80060fa:	2100      	movs	r1, #0
 80060fc:	68f8      	ldr	r0, [r7, #12]
 80060fe:	f000 fe9c 	bl	8006e3a <USBD_CtlContinueSendData>
          pdev->ep0_data_len = 0U;
 8006102:	68fb      	ldr	r3, [r7, #12]
 8006104:	2200      	movs	r2, #0
 8006106:	f8c3 2298 	str.w	r2, [r3, #664]	; 0x298

          /* Prepare endpoint for premature end of transfer */
          USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 800610a:	2300      	movs	r3, #0
 800610c:	2200      	movs	r2, #0
 800610e:	2100      	movs	r1, #0
 8006110:	68f8      	ldr	r0, [r7, #12]
 8006112:	f001 fa93 	bl	800763c <USBD_LL_PrepareReceive>
 8006116:	e026      	b.n	8006166 <USBD_LL_DataInStage+0xfa>
        }
        else
        {
          if ((pdev->pClass->EP0_TxSent != NULL) &&
 8006118:	68fb      	ldr	r3, [r7, #12]
 800611a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800611e:	68db      	ldr	r3, [r3, #12]
 8006120:	2b00      	cmp	r3, #0
 8006122:	d00a      	beq.n	800613a <USBD_LL_DataInStage+0xce>
              (pdev->dev_state == USBD_STATE_CONFIGURED))
 8006124:	68fb      	ldr	r3, [r7, #12]
 8006126:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
          if ((pdev->pClass->EP0_TxSent != NULL) &&
 800612a:	2b03      	cmp	r3, #3
 800612c:	d105      	bne.n	800613a <USBD_LL_DataInStage+0xce>
          {
            pdev->pClass->EP0_TxSent(pdev);
 800612e:	68fb      	ldr	r3, [r7, #12]
 8006130:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8006134:	68db      	ldr	r3, [r3, #12]
 8006136:	68f8      	ldr	r0, [r7, #12]
 8006138:	4798      	blx	r3
          }
          USBD_LL_StallEP(pdev, 0x80U);
 800613a:	2180      	movs	r1, #128	; 0x80
 800613c:	68f8      	ldr	r0, [r7, #12]
 800613e:	f001 f9d1 	bl	80074e4 <USBD_LL_StallEP>
          USBD_CtlReceiveStatus(pdev);
 8006142:	68f8      	ldr	r0, [r7, #12]
 8006144:	f000 fece 	bl	8006ee4 <USBD_CtlReceiveStatus>
 8006148:	e00d      	b.n	8006166 <USBD_LL_DataInStage+0xfa>
        }
      }
    }
    else
    {
      if ((pdev->ep0_state == USBD_EP0_STATUS_IN) ||
 800614a:	68fb      	ldr	r3, [r7, #12]
 800614c:	f8d3 3294 	ldr.w	r3, [r3, #660]	; 0x294
 8006150:	2b04      	cmp	r3, #4
 8006152:	d004      	beq.n	800615e <USBD_LL_DataInStage+0xf2>
          (pdev->ep0_state == USBD_EP0_IDLE))
 8006154:	68fb      	ldr	r3, [r7, #12]
 8006156:	f8d3 3294 	ldr.w	r3, [r3, #660]	; 0x294
      if ((pdev->ep0_state == USBD_EP0_STATUS_IN) ||
 800615a:	2b00      	cmp	r3, #0
 800615c:	d103      	bne.n	8006166 <USBD_LL_DataInStage+0xfa>
      {
        USBD_LL_StallEP(pdev, 0x80U);
 800615e:	2180      	movs	r1, #128	; 0x80
 8006160:	68f8      	ldr	r0, [r7, #12]
 8006162:	f001 f9bf 	bl	80074e4 <USBD_LL_StallEP>
      }
    }

    if (pdev->dev_test_mode == 1U)
 8006166:	68fb      	ldr	r3, [r7, #12]
 8006168:	f893 32a0 	ldrb.w	r3, [r3, #672]	; 0x2a0
 800616c:	2b01      	cmp	r3, #1
 800616e:	d11d      	bne.n	80061ac <USBD_LL_DataInStage+0x140>
    {
      USBD_RunTestMode(pdev);
 8006170:	68f8      	ldr	r0, [r7, #12]
 8006172:	f7ff fe81 	bl	8005e78 <USBD_RunTestMode>
      pdev->dev_test_mode = 0U;
 8006176:	68fb      	ldr	r3, [r7, #12]
 8006178:	2200      	movs	r2, #0
 800617a:	f883 22a0 	strb.w	r2, [r3, #672]	; 0x2a0
 800617e:	e015      	b.n	80061ac <USBD_LL_DataInStage+0x140>
    }
  }
  else if ((pdev->pClass->DataIn != NULL) &&
 8006180:	68fb      	ldr	r3, [r7, #12]
 8006182:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8006186:	695b      	ldr	r3, [r3, #20]
 8006188:	2b00      	cmp	r3, #0
 800618a:	d00d      	beq.n	80061a8 <USBD_LL_DataInStage+0x13c>
           (pdev->dev_state == USBD_STATE_CONFIGURED))
 800618c:	68fb      	ldr	r3, [r7, #12]
 800618e:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
  else if ((pdev->pClass->DataIn != NULL) &&
 8006192:	2b03      	cmp	r3, #3
 8006194:	d108      	bne.n	80061a8 <USBD_LL_DataInStage+0x13c>
  {
    pdev->pClass->DataIn(pdev, epnum);
 8006196:	68fb      	ldr	r3, [r7, #12]
 8006198:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800619c:	695b      	ldr	r3, [r3, #20]
 800619e:	7afa      	ldrb	r2, [r7, #11]
 80061a0:	4611      	mov	r1, r2
 80061a2:	68f8      	ldr	r0, [r7, #12]
 80061a4:	4798      	blx	r3
 80061a6:	e001      	b.n	80061ac <USBD_LL_DataInStage+0x140>
  }
  else
  {
    /* should never be in this condition */
    return USBD_FAIL;
 80061a8:	2302      	movs	r3, #2
 80061aa:	e000      	b.n	80061ae <USBD_LL_DataInStage+0x142>
  }

  return USBD_OK;
 80061ac:	2300      	movs	r3, #0
}
 80061ae:	4618      	mov	r0, r3
 80061b0:	3718      	adds	r7, #24
 80061b2:	46bd      	mov	sp, r7
 80061b4:	bd80      	pop	{r7, pc}

080061b6 <USBD_LL_Reset>:
* @param  pdev: device instance
* @retval status
*/

USBD_StatusTypeDef USBD_LL_Reset(USBD_HandleTypeDef *pdev)
{
 80061b6:	b580      	push	{r7, lr}
 80061b8:	b082      	sub	sp, #8
 80061ba:	af00      	add	r7, sp, #0
 80061bc:	6078      	str	r0, [r7, #4]
  /* Open EP0 OUT */
  USBD_LL_OpenEP(pdev, 0x00U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 80061be:	2340      	movs	r3, #64	; 0x40
 80061c0:	2200      	movs	r2, #0
 80061c2:	2100      	movs	r1, #0
 80061c4:	6878      	ldr	r0, [r7, #4]
 80061c6:	f001 f948 	bl	800745a <USBD_LL_OpenEP>
  pdev->ep_out[0x00U & 0xFU].is_used = 1U;
 80061ca:	687b      	ldr	r3, [r7, #4]
 80061cc:	2201      	movs	r2, #1
 80061ce:	f8c3 2158 	str.w	r2, [r3, #344]	; 0x158

  pdev->ep_out[0].maxpacket = USB_MAX_EP0_SIZE;
 80061d2:	687b      	ldr	r3, [r7, #4]
 80061d4:	2240      	movs	r2, #64	; 0x40
 80061d6:	f8c3 2164 	str.w	r2, [r3, #356]	; 0x164

  /* Open EP0 IN */
  USBD_LL_OpenEP(pdev, 0x80U, USBD_EP_TYPE_CTRL, USB_MAX_EP0_SIZE);
 80061da:	2340      	movs	r3, #64	; 0x40
 80061dc:	2200      	movs	r2, #0
 80061de:	2180      	movs	r1, #128	; 0x80
 80061e0:	6878      	ldr	r0, [r7, #4]
 80061e2:	f001 f93a 	bl	800745a <USBD_LL_OpenEP>
  pdev->ep_in[0x80U & 0xFU].is_used = 1U;
 80061e6:	687b      	ldr	r3, [r7, #4]
 80061e8:	2201      	movs	r2, #1
 80061ea:	619a      	str	r2, [r3, #24]

  pdev->ep_in[0].maxpacket = USB_MAX_EP0_SIZE;
 80061ec:	687b      	ldr	r3, [r7, #4]
 80061ee:	2240      	movs	r2, #64	; 0x40
 80061f0:	625a      	str	r2, [r3, #36]	; 0x24

  /* Upon Reset call user call back */
  pdev->dev_state = USBD_STATE_DEFAULT;
 80061f2:	687b      	ldr	r3, [r7, #4]
 80061f4:	2201      	movs	r2, #1
 80061f6:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
  pdev->ep0_state = USBD_EP0_IDLE;
 80061fa:	687b      	ldr	r3, [r7, #4]
 80061fc:	2200      	movs	r2, #0
 80061fe:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  pdev->dev_config = 0U;
 8006202:	687b      	ldr	r3, [r7, #4]
 8006204:	2200      	movs	r2, #0
 8006206:	605a      	str	r2, [r3, #4]
  pdev->dev_remote_wakeup = 0U;
 8006208:	687b      	ldr	r3, [r7, #4]
 800620a:	2200      	movs	r2, #0
 800620c:	f8c3 22a4 	str.w	r2, [r3, #676]	; 0x2a4

  if (pdev->pClassData)
 8006210:	687b      	ldr	r3, [r7, #4]
 8006212:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8006216:	2b00      	cmp	r3, #0
 8006218:	d009      	beq.n	800622e <USBD_LL_Reset+0x78>
  {
    pdev->pClass->DeInit(pdev, (uint8_t)pdev->dev_config);
 800621a:	687b      	ldr	r3, [r7, #4]
 800621c:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8006220:	685b      	ldr	r3, [r3, #4]
 8006222:	687a      	ldr	r2, [r7, #4]
 8006224:	6852      	ldr	r2, [r2, #4]
 8006226:	b2d2      	uxtb	r2, r2
 8006228:	4611      	mov	r1, r2
 800622a:	6878      	ldr	r0, [r7, #4]
 800622c:	4798      	blx	r3
  }

  return USBD_OK;
 800622e:	2300      	movs	r3, #0
}
 8006230:	4618      	mov	r0, r3
 8006232:	3708      	adds	r7, #8
 8006234:	46bd      	mov	sp, r7
 8006236:	bd80      	pop	{r7, pc}

08006238 <USBD_LL_SetSpeed>:
* @param  pdev: device instance
* @retval status
*/
USBD_StatusTypeDef USBD_LL_SetSpeed(USBD_HandleTypeDef *pdev,
                                    USBD_SpeedTypeDef speed)
{
 8006238:	b480      	push	{r7}
 800623a:	b083      	sub	sp, #12
 800623c:	af00      	add	r7, sp, #0
 800623e:	6078      	str	r0, [r7, #4]
 8006240:	460b      	mov	r3, r1
 8006242:	70fb      	strb	r3, [r7, #3]
  pdev->dev_speed = speed;
 8006244:	687b      	ldr	r3, [r7, #4]
 8006246:	78fa      	ldrb	r2, [r7, #3]
 8006248:	741a      	strb	r2, [r3, #16]

  return USBD_OK;
 800624a:	2300      	movs	r3, #0
}
 800624c:	4618      	mov	r0, r3
 800624e:	370c      	adds	r7, #12
 8006250:	46bd      	mov	sp, r7
 8006252:	bc80      	pop	{r7}
 8006254:	4770      	bx	lr

08006256 <USBD_LL_Suspend>:
* @param  pdev: device instance
* @retval status
*/

USBD_StatusTypeDef USBD_LL_Suspend(USBD_HandleTypeDef *pdev)
{
 8006256:	b480      	push	{r7}
 8006258:	b083      	sub	sp, #12
 800625a:	af00      	add	r7, sp, #0
 800625c:	6078      	str	r0, [r7, #4]
  pdev->dev_old_state =  pdev->dev_state;
 800625e:	687b      	ldr	r3, [r7, #4]
 8006260:	f893 229c 	ldrb.w	r2, [r3, #668]	; 0x29c
 8006264:	687b      	ldr	r3, [r7, #4]
 8006266:	f883 229d 	strb.w	r2, [r3, #669]	; 0x29d
  pdev->dev_state  = USBD_STATE_SUSPENDED;
 800626a:	687b      	ldr	r3, [r7, #4]
 800626c:	2204      	movs	r2, #4
 800626e:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c

  return USBD_OK;
 8006272:	2300      	movs	r3, #0
}
 8006274:	4618      	mov	r0, r3
 8006276:	370c      	adds	r7, #12
 8006278:	46bd      	mov	sp, r7
 800627a:	bc80      	pop	{r7}
 800627c:	4770      	bx	lr

0800627e <USBD_LL_Resume>:
* @param  pdev: device instance
* @retval status
*/

USBD_StatusTypeDef USBD_LL_Resume(USBD_HandleTypeDef *pdev)
{
 800627e:	b480      	push	{r7}
 8006280:	b083      	sub	sp, #12
 8006282:	af00      	add	r7, sp, #0
 8006284:	6078      	str	r0, [r7, #4]
  if (pdev->dev_state == USBD_STATE_SUSPENDED)
 8006286:	687b      	ldr	r3, [r7, #4]
 8006288:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800628c:	2b04      	cmp	r3, #4
 800628e:	d105      	bne.n	800629c <USBD_LL_Resume+0x1e>
  {
    pdev->dev_state = pdev->dev_old_state;
 8006290:	687b      	ldr	r3, [r7, #4]
 8006292:	f893 229d 	ldrb.w	r2, [r3, #669]	; 0x29d
 8006296:	687b      	ldr	r3, [r7, #4]
 8006298:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
  }

  return USBD_OK;
 800629c:	2300      	movs	r3, #0
}
 800629e:	4618      	mov	r0, r3
 80062a0:	370c      	adds	r7, #12
 80062a2:	46bd      	mov	sp, r7
 80062a4:	bc80      	pop	{r7}
 80062a6:	4770      	bx	lr

080062a8 <USBD_LL_SOF>:
* @param  pdev: device instance
* @retval status
*/

USBD_StatusTypeDef USBD_LL_SOF(USBD_HandleTypeDef *pdev)
{
 80062a8:	b580      	push	{r7, lr}
 80062aa:	b082      	sub	sp, #8
 80062ac:	af00      	add	r7, sp, #0
 80062ae:	6078      	str	r0, [r7, #4]
  if (pdev->dev_state == USBD_STATE_CONFIGURED)
 80062b0:	687b      	ldr	r3, [r7, #4]
 80062b2:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 80062b6:	2b03      	cmp	r3, #3
 80062b8:	d10b      	bne.n	80062d2 <USBD_LL_SOF+0x2a>
  {
    if (pdev->pClass->SOF != NULL)
 80062ba:	687b      	ldr	r3, [r7, #4]
 80062bc:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 80062c0:	69db      	ldr	r3, [r3, #28]
 80062c2:	2b00      	cmp	r3, #0
 80062c4:	d005      	beq.n	80062d2 <USBD_LL_SOF+0x2a>
    {
      pdev->pClass->SOF(pdev);
 80062c6:	687b      	ldr	r3, [r7, #4]
 80062c8:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 80062cc:	69db      	ldr	r3, [r3, #28]
 80062ce:	6878      	ldr	r0, [r7, #4]
 80062d0:	4798      	blx	r3
    }
  }

  return USBD_OK;
 80062d2:	2300      	movs	r3, #0
}
 80062d4:	4618      	mov	r0, r3
 80062d6:	3708      	adds	r7, #8
 80062d8:	46bd      	mov	sp, r7
 80062da:	bd80      	pop	{r7, pc}

080062dc <USBD_StdDevReq>:
* @param  req: usb request
* @retval status
*/
USBD_StatusTypeDef  USBD_StdDevReq(USBD_HandleTypeDef *pdev,
                                   USBD_SetupReqTypedef *req)
{
 80062dc:	b580      	push	{r7, lr}
 80062de:	b084      	sub	sp, #16
 80062e0:	af00      	add	r7, sp, #0
 80062e2:	6078      	str	r0, [r7, #4]
 80062e4:	6039      	str	r1, [r7, #0]
  USBD_StatusTypeDef ret = USBD_OK;
 80062e6:	2300      	movs	r3, #0
 80062e8:	73fb      	strb	r3, [r7, #15]

  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 80062ea:	683b      	ldr	r3, [r7, #0]
 80062ec:	781b      	ldrb	r3, [r3, #0]
 80062ee:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80062f2:	2b40      	cmp	r3, #64	; 0x40
 80062f4:	d005      	beq.n	8006302 <USBD_StdDevReq+0x26>
 80062f6:	2b40      	cmp	r3, #64	; 0x40
 80062f8:	d84f      	bhi.n	800639a <USBD_StdDevReq+0xbe>
 80062fa:	2b00      	cmp	r3, #0
 80062fc:	d009      	beq.n	8006312 <USBD_StdDevReq+0x36>
 80062fe:	2b20      	cmp	r3, #32
 8006300:	d14b      	bne.n	800639a <USBD_StdDevReq+0xbe>
  {
    case USB_REQ_TYPE_CLASS:
    case USB_REQ_TYPE_VENDOR:
      pdev->pClass->Setup(pdev, req);
 8006302:	687b      	ldr	r3, [r7, #4]
 8006304:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8006308:	689b      	ldr	r3, [r3, #8]
 800630a:	6839      	ldr	r1, [r7, #0]
 800630c:	6878      	ldr	r0, [r7, #4]
 800630e:	4798      	blx	r3
      break;
 8006310:	e048      	b.n	80063a4 <USBD_StdDevReq+0xc8>

    case USB_REQ_TYPE_STANDARD:
      switch (req->bRequest)
 8006312:	683b      	ldr	r3, [r7, #0]
 8006314:	785b      	ldrb	r3, [r3, #1]
 8006316:	2b09      	cmp	r3, #9
 8006318:	d839      	bhi.n	800638e <USBD_StdDevReq+0xb2>
 800631a:	a201      	add	r2, pc, #4	; (adr r2, 8006320 <USBD_StdDevReq+0x44>)
 800631c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006320:	08006371 	.word	0x08006371
 8006324:	08006385 	.word	0x08006385
 8006328:	0800638f 	.word	0x0800638f
 800632c:	0800637b 	.word	0x0800637b
 8006330:	0800638f 	.word	0x0800638f
 8006334:	08006353 	.word	0x08006353
 8006338:	08006349 	.word	0x08006349
 800633c:	0800638f 	.word	0x0800638f
 8006340:	08006367 	.word	0x08006367
 8006344:	0800635d 	.word	0x0800635d
      {
        case USB_REQ_GET_DESCRIPTOR:
          USBD_GetDescriptor(pdev, req);
 8006348:	6839      	ldr	r1, [r7, #0]
 800634a:	6878      	ldr	r0, [r7, #4]
 800634c:	f000 f9dc 	bl	8006708 <USBD_GetDescriptor>
          break;
 8006350:	e022      	b.n	8006398 <USBD_StdDevReq+0xbc>

        case USB_REQ_SET_ADDRESS:
          USBD_SetAddress(pdev, req);
 8006352:	6839      	ldr	r1, [r7, #0]
 8006354:	6878      	ldr	r0, [r7, #4]
 8006356:	f000 fb3f 	bl	80069d8 <USBD_SetAddress>
          break;
 800635a:	e01d      	b.n	8006398 <USBD_StdDevReq+0xbc>

        case USB_REQ_SET_CONFIGURATION:
          USBD_SetConfig(pdev, req);
 800635c:	6839      	ldr	r1, [r7, #0]
 800635e:	6878      	ldr	r0, [r7, #4]
 8006360:	f000 fb7e 	bl	8006a60 <USBD_SetConfig>
          break;
 8006364:	e018      	b.n	8006398 <USBD_StdDevReq+0xbc>

        case USB_REQ_GET_CONFIGURATION:
          USBD_GetConfig(pdev, req);
 8006366:	6839      	ldr	r1, [r7, #0]
 8006368:	6878      	ldr	r0, [r7, #4]
 800636a:	f000 fc07 	bl	8006b7c <USBD_GetConfig>
          break;
 800636e:	e013      	b.n	8006398 <USBD_StdDevReq+0xbc>

        case USB_REQ_GET_STATUS:
          USBD_GetStatus(pdev, req);
 8006370:	6839      	ldr	r1, [r7, #0]
 8006372:	6878      	ldr	r0, [r7, #4]
 8006374:	f000 fc37 	bl	8006be6 <USBD_GetStatus>
          break;
 8006378:	e00e      	b.n	8006398 <USBD_StdDevReq+0xbc>

        case USB_REQ_SET_FEATURE:
          USBD_SetFeature(pdev, req);
 800637a:	6839      	ldr	r1, [r7, #0]
 800637c:	6878      	ldr	r0, [r7, #4]
 800637e:	f000 fc65 	bl	8006c4c <USBD_SetFeature>
          break;
 8006382:	e009      	b.n	8006398 <USBD_StdDevReq+0xbc>

        case USB_REQ_CLEAR_FEATURE:
          USBD_ClrFeature(pdev, req);
 8006384:	6839      	ldr	r1, [r7, #0]
 8006386:	6878      	ldr	r0, [r7, #4]
 8006388:	f000 fc74 	bl	8006c74 <USBD_ClrFeature>
          break;
 800638c:	e004      	b.n	8006398 <USBD_StdDevReq+0xbc>

        default:
          USBD_CtlError(pdev, req);
 800638e:	6839      	ldr	r1, [r7, #0]
 8006390:	6878      	ldr	r0, [r7, #4]
 8006392:	f000 fccc 	bl	8006d2e <USBD_CtlError>
          break;
 8006396:	bf00      	nop
      }
      break;
 8006398:	e004      	b.n	80063a4 <USBD_StdDevReq+0xc8>

    default:
      USBD_CtlError(pdev, req);
 800639a:	6839      	ldr	r1, [r7, #0]
 800639c:	6878      	ldr	r0, [r7, #4]
 800639e:	f000 fcc6 	bl	8006d2e <USBD_CtlError>
      break;
 80063a2:	bf00      	nop
  }

  return ret;
 80063a4:	7bfb      	ldrb	r3, [r7, #15]
}
 80063a6:	4618      	mov	r0, r3
 80063a8:	3710      	adds	r7, #16
 80063aa:	46bd      	mov	sp, r7
 80063ac:	bd80      	pop	{r7, pc}
 80063ae:	bf00      	nop

080063b0 <USBD_StdItfReq>:
* @param  req: usb request
* @retval status
*/
USBD_StatusTypeDef  USBD_StdItfReq(USBD_HandleTypeDef *pdev,
                                   USBD_SetupReqTypedef  *req)
{
 80063b0:	b580      	push	{r7, lr}
 80063b2:	b084      	sub	sp, #16
 80063b4:	af00      	add	r7, sp, #0
 80063b6:	6078      	str	r0, [r7, #4]
 80063b8:	6039      	str	r1, [r7, #0]
  USBD_StatusTypeDef ret = USBD_OK;
 80063ba:	2300      	movs	r3, #0
 80063bc:	73fb      	strb	r3, [r7, #15]

  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 80063be:	683b      	ldr	r3, [r7, #0]
 80063c0:	781b      	ldrb	r3, [r3, #0]
 80063c2:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80063c6:	2b40      	cmp	r3, #64	; 0x40
 80063c8:	d005      	beq.n	80063d6 <USBD_StdItfReq+0x26>
 80063ca:	2b40      	cmp	r3, #64	; 0x40
 80063cc:	d82e      	bhi.n	800642c <USBD_StdItfReq+0x7c>
 80063ce:	2b00      	cmp	r3, #0
 80063d0:	d001      	beq.n	80063d6 <USBD_StdItfReq+0x26>
 80063d2:	2b20      	cmp	r3, #32
 80063d4:	d12a      	bne.n	800642c <USBD_StdItfReq+0x7c>
  {
    case USB_REQ_TYPE_CLASS:
    case USB_REQ_TYPE_VENDOR:
    case USB_REQ_TYPE_STANDARD:
      switch (pdev->dev_state)
 80063d6:	687b      	ldr	r3, [r7, #4]
 80063d8:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 80063dc:	3b01      	subs	r3, #1
 80063de:	2b02      	cmp	r3, #2
 80063e0:	d81d      	bhi.n	800641e <USBD_StdItfReq+0x6e>
      {
        case USBD_STATE_DEFAULT:
        case USBD_STATE_ADDRESSED:
        case USBD_STATE_CONFIGURED:

          if (LOBYTE(req->wIndex) <= USBD_MAX_NUM_INTERFACES)
 80063e2:	683b      	ldr	r3, [r7, #0]
 80063e4:	889b      	ldrh	r3, [r3, #4]
 80063e6:	b2db      	uxtb	r3, r3
 80063e8:	2b01      	cmp	r3, #1
 80063ea:	d813      	bhi.n	8006414 <USBD_StdItfReq+0x64>
          {
            ret = (USBD_StatusTypeDef)pdev->pClass->Setup(pdev, req);
 80063ec:	687b      	ldr	r3, [r7, #4]
 80063ee:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 80063f2:	689b      	ldr	r3, [r3, #8]
 80063f4:	6839      	ldr	r1, [r7, #0]
 80063f6:	6878      	ldr	r0, [r7, #4]
 80063f8:	4798      	blx	r3
 80063fa:	4603      	mov	r3, r0
 80063fc:	73fb      	strb	r3, [r7, #15]

            if ((req->wLength == 0U) && (ret == USBD_OK))
 80063fe:	683b      	ldr	r3, [r7, #0]
 8006400:	88db      	ldrh	r3, [r3, #6]
 8006402:	2b00      	cmp	r3, #0
 8006404:	d110      	bne.n	8006428 <USBD_StdItfReq+0x78>
 8006406:	7bfb      	ldrb	r3, [r7, #15]
 8006408:	2b00      	cmp	r3, #0
 800640a:	d10d      	bne.n	8006428 <USBD_StdItfReq+0x78>
            {
              USBD_CtlSendStatus(pdev);
 800640c:	6878      	ldr	r0, [r7, #4]
 800640e:	f000 fd56 	bl	8006ebe <USBD_CtlSendStatus>
          }
          else
          {
            USBD_CtlError(pdev, req);
          }
          break;
 8006412:	e009      	b.n	8006428 <USBD_StdItfReq+0x78>
            USBD_CtlError(pdev, req);
 8006414:	6839      	ldr	r1, [r7, #0]
 8006416:	6878      	ldr	r0, [r7, #4]
 8006418:	f000 fc89 	bl	8006d2e <USBD_CtlError>
          break;
 800641c:	e004      	b.n	8006428 <USBD_StdItfReq+0x78>

        default:
          USBD_CtlError(pdev, req);
 800641e:	6839      	ldr	r1, [r7, #0]
 8006420:	6878      	ldr	r0, [r7, #4]
 8006422:	f000 fc84 	bl	8006d2e <USBD_CtlError>
          break;
 8006426:	e000      	b.n	800642a <USBD_StdItfReq+0x7a>
          break;
 8006428:	bf00      	nop
      }
      break;
 800642a:	e004      	b.n	8006436 <USBD_StdItfReq+0x86>

    default:
      USBD_CtlError(pdev, req);
 800642c:	6839      	ldr	r1, [r7, #0]
 800642e:	6878      	ldr	r0, [r7, #4]
 8006430:	f000 fc7d 	bl	8006d2e <USBD_CtlError>
      break;
 8006434:	bf00      	nop
  }

  return USBD_OK;
 8006436:	2300      	movs	r3, #0
}
 8006438:	4618      	mov	r0, r3
 800643a:	3710      	adds	r7, #16
 800643c:	46bd      	mov	sp, r7
 800643e:	bd80      	pop	{r7, pc}

08006440 <USBD_StdEPReq>:
* @param  req: usb request
* @retval status
*/
USBD_StatusTypeDef  USBD_StdEPReq(USBD_HandleTypeDef *pdev,
                                  USBD_SetupReqTypedef  *req)
{
 8006440:	b580      	push	{r7, lr}
 8006442:	b084      	sub	sp, #16
 8006444:	af00      	add	r7, sp, #0
 8006446:	6078      	str	r0, [r7, #4]
 8006448:	6039      	str	r1, [r7, #0]
  USBD_EndpointTypeDef *pep;
  uint8_t   ep_addr;
  USBD_StatusTypeDef ret = USBD_OK;
 800644a:	2300      	movs	r3, #0
 800644c:	73fb      	strb	r3, [r7, #15]
  ep_addr  = LOBYTE(req->wIndex);
 800644e:	683b      	ldr	r3, [r7, #0]
 8006450:	889b      	ldrh	r3, [r3, #4]
 8006452:	73bb      	strb	r3, [r7, #14]

  switch (req->bmRequest & USB_REQ_TYPE_MASK)
 8006454:	683b      	ldr	r3, [r7, #0]
 8006456:	781b      	ldrb	r3, [r3, #0]
 8006458:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800645c:	2b40      	cmp	r3, #64	; 0x40
 800645e:	d007      	beq.n	8006470 <USBD_StdEPReq+0x30>
 8006460:	2b40      	cmp	r3, #64	; 0x40
 8006462:	f200 8146 	bhi.w	80066f2 <USBD_StdEPReq+0x2b2>
 8006466:	2b00      	cmp	r3, #0
 8006468:	d00a      	beq.n	8006480 <USBD_StdEPReq+0x40>
 800646a:	2b20      	cmp	r3, #32
 800646c:	f040 8141 	bne.w	80066f2 <USBD_StdEPReq+0x2b2>
  {
    case USB_REQ_TYPE_CLASS:
    case USB_REQ_TYPE_VENDOR:
      pdev->pClass->Setup(pdev, req);
 8006470:	687b      	ldr	r3, [r7, #4]
 8006472:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8006476:	689b      	ldr	r3, [r3, #8]
 8006478:	6839      	ldr	r1, [r7, #0]
 800647a:	6878      	ldr	r0, [r7, #4]
 800647c:	4798      	blx	r3
      break;
 800647e:	e13d      	b.n	80066fc <USBD_StdEPReq+0x2bc>

    case USB_REQ_TYPE_STANDARD:
      /* Check if it is a class request */
      if ((req->bmRequest & 0x60U) == 0x20U)
 8006480:	683b      	ldr	r3, [r7, #0]
 8006482:	781b      	ldrb	r3, [r3, #0]
 8006484:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8006488:	2b20      	cmp	r3, #32
 800648a:	d10a      	bne.n	80064a2 <USBD_StdEPReq+0x62>
      {
        ret = (USBD_StatusTypeDef)pdev->pClass->Setup(pdev, req);
 800648c:	687b      	ldr	r3, [r7, #4]
 800648e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8006492:	689b      	ldr	r3, [r3, #8]
 8006494:	6839      	ldr	r1, [r7, #0]
 8006496:	6878      	ldr	r0, [r7, #4]
 8006498:	4798      	blx	r3
 800649a:	4603      	mov	r3, r0
 800649c:	73fb      	strb	r3, [r7, #15]

        return ret;
 800649e:	7bfb      	ldrb	r3, [r7, #15]
 80064a0:	e12d      	b.n	80066fe <USBD_StdEPReq+0x2be>
      }

      switch (req->bRequest)
 80064a2:	683b      	ldr	r3, [r7, #0]
 80064a4:	785b      	ldrb	r3, [r3, #1]
 80064a6:	2b03      	cmp	r3, #3
 80064a8:	d007      	beq.n	80064ba <USBD_StdEPReq+0x7a>
 80064aa:	2b03      	cmp	r3, #3
 80064ac:	f300 811b 	bgt.w	80066e6 <USBD_StdEPReq+0x2a6>
 80064b0:	2b00      	cmp	r3, #0
 80064b2:	d072      	beq.n	800659a <USBD_StdEPReq+0x15a>
 80064b4:	2b01      	cmp	r3, #1
 80064b6:	d03a      	beq.n	800652e <USBD_StdEPReq+0xee>
 80064b8:	e115      	b.n	80066e6 <USBD_StdEPReq+0x2a6>
      {
        case USB_REQ_SET_FEATURE:
          switch (pdev->dev_state)
 80064ba:	687b      	ldr	r3, [r7, #4]
 80064bc:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 80064c0:	2b02      	cmp	r3, #2
 80064c2:	d002      	beq.n	80064ca <USBD_StdEPReq+0x8a>
 80064c4:	2b03      	cmp	r3, #3
 80064c6:	d015      	beq.n	80064f4 <USBD_StdEPReq+0xb4>
 80064c8:	e02b      	b.n	8006522 <USBD_StdEPReq+0xe2>
          {
            case USBD_STATE_ADDRESSED:
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 80064ca:	7bbb      	ldrb	r3, [r7, #14]
 80064cc:	2b00      	cmp	r3, #0
 80064ce:	d00c      	beq.n	80064ea <USBD_StdEPReq+0xaa>
 80064d0:	7bbb      	ldrb	r3, [r7, #14]
 80064d2:	2b80      	cmp	r3, #128	; 0x80
 80064d4:	d009      	beq.n	80064ea <USBD_StdEPReq+0xaa>
              {
                USBD_LL_StallEP(pdev, ep_addr);
 80064d6:	7bbb      	ldrb	r3, [r7, #14]
 80064d8:	4619      	mov	r1, r3
 80064da:	6878      	ldr	r0, [r7, #4]
 80064dc:	f001 f802 	bl	80074e4 <USBD_LL_StallEP>
                USBD_LL_StallEP(pdev, 0x80U);
 80064e0:	2180      	movs	r1, #128	; 0x80
 80064e2:	6878      	ldr	r0, [r7, #4]
 80064e4:	f000 fffe 	bl	80074e4 <USBD_LL_StallEP>
              }
              else
              {
                USBD_CtlError(pdev, req);
              }
              break;
 80064e8:	e020      	b.n	800652c <USBD_StdEPReq+0xec>
                USBD_CtlError(pdev, req);
 80064ea:	6839      	ldr	r1, [r7, #0]
 80064ec:	6878      	ldr	r0, [r7, #4]
 80064ee:	f000 fc1e 	bl	8006d2e <USBD_CtlError>
              break;
 80064f2:	e01b      	b.n	800652c <USBD_StdEPReq+0xec>

            case USBD_STATE_CONFIGURED:
              if (req->wValue == USB_FEATURE_EP_HALT)
 80064f4:	683b      	ldr	r3, [r7, #0]
 80064f6:	885b      	ldrh	r3, [r3, #2]
 80064f8:	2b00      	cmp	r3, #0
 80064fa:	d10e      	bne.n	800651a <USBD_StdEPReq+0xda>
              {
                if ((ep_addr != 0x00U) &&
 80064fc:	7bbb      	ldrb	r3, [r7, #14]
 80064fe:	2b00      	cmp	r3, #0
 8006500:	d00b      	beq.n	800651a <USBD_StdEPReq+0xda>
 8006502:	7bbb      	ldrb	r3, [r7, #14]
 8006504:	2b80      	cmp	r3, #128	; 0x80
 8006506:	d008      	beq.n	800651a <USBD_StdEPReq+0xda>
                    (ep_addr != 0x80U) && (req->wLength == 0x00U))
 8006508:	683b      	ldr	r3, [r7, #0]
 800650a:	88db      	ldrh	r3, [r3, #6]
 800650c:	2b00      	cmp	r3, #0
 800650e:	d104      	bne.n	800651a <USBD_StdEPReq+0xda>
                {
                  USBD_LL_StallEP(pdev, ep_addr);
 8006510:	7bbb      	ldrb	r3, [r7, #14]
 8006512:	4619      	mov	r1, r3
 8006514:	6878      	ldr	r0, [r7, #4]
 8006516:	f000 ffe5 	bl	80074e4 <USBD_LL_StallEP>
                }
              }
              USBD_CtlSendStatus(pdev);
 800651a:	6878      	ldr	r0, [r7, #4]
 800651c:	f000 fccf 	bl	8006ebe <USBD_CtlSendStatus>

              break;
 8006520:	e004      	b.n	800652c <USBD_StdEPReq+0xec>

            default:
              USBD_CtlError(pdev, req);
 8006522:	6839      	ldr	r1, [r7, #0]
 8006524:	6878      	ldr	r0, [r7, #4]
 8006526:	f000 fc02 	bl	8006d2e <USBD_CtlError>
              break;
 800652a:	bf00      	nop
          }
          break;
 800652c:	e0e0      	b.n	80066f0 <USBD_StdEPReq+0x2b0>

        case USB_REQ_CLEAR_FEATURE:

          switch (pdev->dev_state)
 800652e:	687b      	ldr	r3, [r7, #4]
 8006530:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8006534:	2b02      	cmp	r3, #2
 8006536:	d002      	beq.n	800653e <USBD_StdEPReq+0xfe>
 8006538:	2b03      	cmp	r3, #3
 800653a:	d015      	beq.n	8006568 <USBD_StdEPReq+0x128>
 800653c:	e026      	b.n	800658c <USBD_StdEPReq+0x14c>
          {
            case USBD_STATE_ADDRESSED:
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 800653e:	7bbb      	ldrb	r3, [r7, #14]
 8006540:	2b00      	cmp	r3, #0
 8006542:	d00c      	beq.n	800655e <USBD_StdEPReq+0x11e>
 8006544:	7bbb      	ldrb	r3, [r7, #14]
 8006546:	2b80      	cmp	r3, #128	; 0x80
 8006548:	d009      	beq.n	800655e <USBD_StdEPReq+0x11e>
              {
                USBD_LL_StallEP(pdev, ep_addr);
 800654a:	7bbb      	ldrb	r3, [r7, #14]
 800654c:	4619      	mov	r1, r3
 800654e:	6878      	ldr	r0, [r7, #4]
 8006550:	f000 ffc8 	bl	80074e4 <USBD_LL_StallEP>
                USBD_LL_StallEP(pdev, 0x80U);
 8006554:	2180      	movs	r1, #128	; 0x80
 8006556:	6878      	ldr	r0, [r7, #4]
 8006558:	f000 ffc4 	bl	80074e4 <USBD_LL_StallEP>
              }
              else
              {
                USBD_CtlError(pdev, req);
              }
              break;
 800655c:	e01c      	b.n	8006598 <USBD_StdEPReq+0x158>
                USBD_CtlError(pdev, req);
 800655e:	6839      	ldr	r1, [r7, #0]
 8006560:	6878      	ldr	r0, [r7, #4]
 8006562:	f000 fbe4 	bl	8006d2e <USBD_CtlError>
              break;
 8006566:	e017      	b.n	8006598 <USBD_StdEPReq+0x158>

            case USBD_STATE_CONFIGURED:
              if (req->wValue == USB_FEATURE_EP_HALT)
 8006568:	683b      	ldr	r3, [r7, #0]
 800656a:	885b      	ldrh	r3, [r3, #2]
 800656c:	2b00      	cmp	r3, #0
 800656e:	d112      	bne.n	8006596 <USBD_StdEPReq+0x156>
              {
                if ((ep_addr & 0x7FU) != 0x00U)
 8006570:	7bbb      	ldrb	r3, [r7, #14]
 8006572:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8006576:	2b00      	cmp	r3, #0
 8006578:	d004      	beq.n	8006584 <USBD_StdEPReq+0x144>
                {
                  USBD_LL_ClearStallEP(pdev, ep_addr);
 800657a:	7bbb      	ldrb	r3, [r7, #14]
 800657c:	4619      	mov	r1, r3
 800657e:	6878      	ldr	r0, [r7, #4]
 8006580:	f000 ffcf 	bl	8007522 <USBD_LL_ClearStallEP>
                }
                USBD_CtlSendStatus(pdev);
 8006584:	6878      	ldr	r0, [r7, #4]
 8006586:	f000 fc9a 	bl	8006ebe <USBD_CtlSendStatus>
              }
              break;
 800658a:	e004      	b.n	8006596 <USBD_StdEPReq+0x156>

            default:
              USBD_CtlError(pdev, req);
 800658c:	6839      	ldr	r1, [r7, #0]
 800658e:	6878      	ldr	r0, [r7, #4]
 8006590:	f000 fbcd 	bl	8006d2e <USBD_CtlError>
              break;
 8006594:	e000      	b.n	8006598 <USBD_StdEPReq+0x158>
              break;
 8006596:	bf00      	nop
          }
          break;
 8006598:	e0aa      	b.n	80066f0 <USBD_StdEPReq+0x2b0>

        case USB_REQ_GET_STATUS:
          switch (pdev->dev_state)
 800659a:	687b      	ldr	r3, [r7, #4]
 800659c:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 80065a0:	2b02      	cmp	r3, #2
 80065a2:	d002      	beq.n	80065aa <USBD_StdEPReq+0x16a>
 80065a4:	2b03      	cmp	r3, #3
 80065a6:	d032      	beq.n	800660e <USBD_StdEPReq+0x1ce>
 80065a8:	e097      	b.n	80066da <USBD_StdEPReq+0x29a>
          {
            case USBD_STATE_ADDRESSED:
              if ((ep_addr != 0x00U) && (ep_addr != 0x80U))
 80065aa:	7bbb      	ldrb	r3, [r7, #14]
 80065ac:	2b00      	cmp	r3, #0
 80065ae:	d007      	beq.n	80065c0 <USBD_StdEPReq+0x180>
 80065b0:	7bbb      	ldrb	r3, [r7, #14]
 80065b2:	2b80      	cmp	r3, #128	; 0x80
 80065b4:	d004      	beq.n	80065c0 <USBD_StdEPReq+0x180>
              {
                USBD_CtlError(pdev, req);
 80065b6:	6839      	ldr	r1, [r7, #0]
 80065b8:	6878      	ldr	r0, [r7, #4]
 80065ba:	f000 fbb8 	bl	8006d2e <USBD_CtlError>
                break;
 80065be:	e091      	b.n	80066e4 <USBD_StdEPReq+0x2a4>
              }
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 80065c0:	f997 300e 	ldrsb.w	r3, [r7, #14]
 80065c4:	2b00      	cmp	r3, #0
 80065c6:	da0b      	bge.n	80065e0 <USBD_StdEPReq+0x1a0>
 80065c8:	7bbb      	ldrb	r3, [r7, #14]
 80065ca:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 80065ce:	4613      	mov	r3, r2
 80065d0:	009b      	lsls	r3, r3, #2
 80065d2:	4413      	add	r3, r2
 80065d4:	009b      	lsls	r3, r3, #2
 80065d6:	3310      	adds	r3, #16
 80065d8:	687a      	ldr	r2, [r7, #4]
 80065da:	4413      	add	r3, r2
 80065dc:	3304      	adds	r3, #4
 80065de:	e00b      	b.n	80065f8 <USBD_StdEPReq+0x1b8>
                    &pdev->ep_out[ep_addr & 0x7FU];
 80065e0:	7bbb      	ldrb	r3, [r7, #14]
 80065e2:	f003 027f 	and.w	r2, r3, #127	; 0x7f
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 80065e6:	4613      	mov	r3, r2
 80065e8:	009b      	lsls	r3, r3, #2
 80065ea:	4413      	add	r3, r2
 80065ec:	009b      	lsls	r3, r3, #2
 80065ee:	f503 73a8 	add.w	r3, r3, #336	; 0x150
 80065f2:	687a      	ldr	r2, [r7, #4]
 80065f4:	4413      	add	r3, r2
 80065f6:	3304      	adds	r3, #4
 80065f8:	60bb      	str	r3, [r7, #8]

              pep->status = 0x0000U;
 80065fa:	68bb      	ldr	r3, [r7, #8]
 80065fc:	2200      	movs	r2, #0
 80065fe:	601a      	str	r2, [r3, #0]

              USBD_CtlSendData(pdev, (uint8_t *)(void *)&pep->status, 2U);
 8006600:	68bb      	ldr	r3, [r7, #8]
 8006602:	2202      	movs	r2, #2
 8006604:	4619      	mov	r1, r3
 8006606:	6878      	ldr	r0, [r7, #4]
 8006608:	f000 fbfb 	bl	8006e02 <USBD_CtlSendData>
              break;
 800660c:	e06a      	b.n	80066e4 <USBD_StdEPReq+0x2a4>

            case USBD_STATE_CONFIGURED:
              if ((ep_addr & 0x80U) == 0x80U)
 800660e:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8006612:	2b00      	cmp	r3, #0
 8006614:	da11      	bge.n	800663a <USBD_StdEPReq+0x1fa>
              {
                if (pdev->ep_in[ep_addr & 0xFU].is_used == 0U)
 8006616:	7bbb      	ldrb	r3, [r7, #14]
 8006618:	f003 020f 	and.w	r2, r3, #15
 800661c:	6879      	ldr	r1, [r7, #4]
 800661e:	4613      	mov	r3, r2
 8006620:	009b      	lsls	r3, r3, #2
 8006622:	4413      	add	r3, r2
 8006624:	009b      	lsls	r3, r3, #2
 8006626:	440b      	add	r3, r1
 8006628:	3318      	adds	r3, #24
 800662a:	681b      	ldr	r3, [r3, #0]
 800662c:	2b00      	cmp	r3, #0
 800662e:	d117      	bne.n	8006660 <USBD_StdEPReq+0x220>
                {
                  USBD_CtlError(pdev, req);
 8006630:	6839      	ldr	r1, [r7, #0]
 8006632:	6878      	ldr	r0, [r7, #4]
 8006634:	f000 fb7b 	bl	8006d2e <USBD_CtlError>
                  break;
 8006638:	e054      	b.n	80066e4 <USBD_StdEPReq+0x2a4>
                }
              }
              else
              {
                if (pdev->ep_out[ep_addr & 0xFU].is_used == 0U)
 800663a:	7bbb      	ldrb	r3, [r7, #14]
 800663c:	f003 020f 	and.w	r2, r3, #15
 8006640:	6879      	ldr	r1, [r7, #4]
 8006642:	4613      	mov	r3, r2
 8006644:	009b      	lsls	r3, r3, #2
 8006646:	4413      	add	r3, r2
 8006648:	009b      	lsls	r3, r3, #2
 800664a:	440b      	add	r3, r1
 800664c:	f503 73ac 	add.w	r3, r3, #344	; 0x158
 8006650:	681b      	ldr	r3, [r3, #0]
 8006652:	2b00      	cmp	r3, #0
 8006654:	d104      	bne.n	8006660 <USBD_StdEPReq+0x220>
                {
                  USBD_CtlError(pdev, req);
 8006656:	6839      	ldr	r1, [r7, #0]
 8006658:	6878      	ldr	r0, [r7, #4]
 800665a:	f000 fb68 	bl	8006d2e <USBD_CtlError>
                  break;
 800665e:	e041      	b.n	80066e4 <USBD_StdEPReq+0x2a4>
                }
              }

              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8006660:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8006664:	2b00      	cmp	r3, #0
 8006666:	da0b      	bge.n	8006680 <USBD_StdEPReq+0x240>
 8006668:	7bbb      	ldrb	r3, [r7, #14]
 800666a:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800666e:	4613      	mov	r3, r2
 8006670:	009b      	lsls	r3, r3, #2
 8006672:	4413      	add	r3, r2
 8006674:	009b      	lsls	r3, r3, #2
 8006676:	3310      	adds	r3, #16
 8006678:	687a      	ldr	r2, [r7, #4]
 800667a:	4413      	add	r3, r2
 800667c:	3304      	adds	r3, #4
 800667e:	e00b      	b.n	8006698 <USBD_StdEPReq+0x258>
                    &pdev->ep_out[ep_addr & 0x7FU];
 8006680:	7bbb      	ldrb	r3, [r7, #14]
 8006682:	f003 027f 	and.w	r2, r3, #127	; 0x7f
              pep = ((ep_addr & 0x80U) == 0x80U) ? &pdev->ep_in[ep_addr & 0x7FU] : \
 8006686:	4613      	mov	r3, r2
 8006688:	009b      	lsls	r3, r3, #2
 800668a:	4413      	add	r3, r2
 800668c:	009b      	lsls	r3, r3, #2
 800668e:	f503 73a8 	add.w	r3, r3, #336	; 0x150
 8006692:	687a      	ldr	r2, [r7, #4]
 8006694:	4413      	add	r3, r2
 8006696:	3304      	adds	r3, #4
 8006698:	60bb      	str	r3, [r7, #8]

              if ((ep_addr == 0x00U) || (ep_addr == 0x80U))
 800669a:	7bbb      	ldrb	r3, [r7, #14]
 800669c:	2b00      	cmp	r3, #0
 800669e:	d002      	beq.n	80066a6 <USBD_StdEPReq+0x266>
 80066a0:	7bbb      	ldrb	r3, [r7, #14]
 80066a2:	2b80      	cmp	r3, #128	; 0x80
 80066a4:	d103      	bne.n	80066ae <USBD_StdEPReq+0x26e>
              {
                pep->status = 0x0000U;
 80066a6:	68bb      	ldr	r3, [r7, #8]
 80066a8:	2200      	movs	r2, #0
 80066aa:	601a      	str	r2, [r3, #0]
 80066ac:	e00e      	b.n	80066cc <USBD_StdEPReq+0x28c>
              }
              else if (USBD_LL_IsStallEP(pdev, ep_addr))
 80066ae:	7bbb      	ldrb	r3, [r7, #14]
 80066b0:	4619      	mov	r1, r3
 80066b2:	6878      	ldr	r0, [r7, #4]
 80066b4:	f000 ff54 	bl	8007560 <USBD_LL_IsStallEP>
 80066b8:	4603      	mov	r3, r0
 80066ba:	2b00      	cmp	r3, #0
 80066bc:	d003      	beq.n	80066c6 <USBD_StdEPReq+0x286>
              {
                pep->status = 0x0001U;
 80066be:	68bb      	ldr	r3, [r7, #8]
 80066c0:	2201      	movs	r2, #1
 80066c2:	601a      	str	r2, [r3, #0]
 80066c4:	e002      	b.n	80066cc <USBD_StdEPReq+0x28c>
              }
              else
              {
                pep->status = 0x0000U;
 80066c6:	68bb      	ldr	r3, [r7, #8]
 80066c8:	2200      	movs	r2, #0
 80066ca:	601a      	str	r2, [r3, #0]
              }

              USBD_CtlSendData(pdev, (uint8_t *)(void *)&pep->status, 2U);
 80066cc:	68bb      	ldr	r3, [r7, #8]
 80066ce:	2202      	movs	r2, #2
 80066d0:	4619      	mov	r1, r3
 80066d2:	6878      	ldr	r0, [r7, #4]
 80066d4:	f000 fb95 	bl	8006e02 <USBD_CtlSendData>
              break;
 80066d8:	e004      	b.n	80066e4 <USBD_StdEPReq+0x2a4>

            default:
              USBD_CtlError(pdev, req);
 80066da:	6839      	ldr	r1, [r7, #0]
 80066dc:	6878      	ldr	r0, [r7, #4]
 80066de:	f000 fb26 	bl	8006d2e <USBD_CtlError>
              break;
 80066e2:	bf00      	nop
          }
          break;
 80066e4:	e004      	b.n	80066f0 <USBD_StdEPReq+0x2b0>

        default:
          USBD_CtlError(pdev, req);
 80066e6:	6839      	ldr	r1, [r7, #0]
 80066e8:	6878      	ldr	r0, [r7, #4]
 80066ea:	f000 fb20 	bl	8006d2e <USBD_CtlError>
          break;
 80066ee:	bf00      	nop
      }
      break;
 80066f0:	e004      	b.n	80066fc <USBD_StdEPReq+0x2bc>

    default:
      USBD_CtlError(pdev, req);
 80066f2:	6839      	ldr	r1, [r7, #0]
 80066f4:	6878      	ldr	r0, [r7, #4]
 80066f6:	f000 fb1a 	bl	8006d2e <USBD_CtlError>
      break;
 80066fa:	bf00      	nop
  }

  return ret;
 80066fc:	7bfb      	ldrb	r3, [r7, #15]
}
 80066fe:	4618      	mov	r0, r3
 8006700:	3710      	adds	r7, #16
 8006702:	46bd      	mov	sp, r7
 8006704:	bd80      	pop	{r7, pc}
	...

08006708 <USBD_GetDescriptor>:
* @param  req: usb request
* @retval status
*/
static void USBD_GetDescriptor(USBD_HandleTypeDef *pdev,
                               USBD_SetupReqTypedef *req)
{
 8006708:	b580      	push	{r7, lr}
 800670a:	b084      	sub	sp, #16
 800670c:	af00      	add	r7, sp, #0
 800670e:	6078      	str	r0, [r7, #4]
 8006710:	6039      	str	r1, [r7, #0]
  uint16_t len = 0U;
 8006712:	2300      	movs	r3, #0
 8006714:	813b      	strh	r3, [r7, #8]
  uint8_t *pbuf = NULL;
 8006716:	2300      	movs	r3, #0
 8006718:	60fb      	str	r3, [r7, #12]
  uint8_t err = 0U;
 800671a:	2300      	movs	r3, #0
 800671c:	72fb      	strb	r3, [r7, #11]

  switch (req->wValue >> 8)
 800671e:	683b      	ldr	r3, [r7, #0]
 8006720:	885b      	ldrh	r3, [r3, #2]
 8006722:	0a1b      	lsrs	r3, r3, #8
 8006724:	b29b      	uxth	r3, r3
 8006726:	3b01      	subs	r3, #1
 8006728:	2b06      	cmp	r3, #6
 800672a:	f200 8128 	bhi.w	800697e <USBD_GetDescriptor+0x276>
 800672e:	a201      	add	r2, pc, #4	; (adr r2, 8006734 <USBD_GetDescriptor+0x2c>)
 8006730:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006734:	08006751 	.word	0x08006751
 8006738:	08006769 	.word	0x08006769
 800673c:	080067a9 	.word	0x080067a9
 8006740:	0800697f 	.word	0x0800697f
 8006744:	0800697f 	.word	0x0800697f
 8006748:	0800691f 	.word	0x0800691f
 800674c:	0800694b 	.word	0x0800694b
        err++;
      }
      break;
#endif
    case USB_DESC_TYPE_DEVICE:
      pbuf = pdev->pDesc->GetDeviceDescriptor(pdev->dev_speed, &len);
 8006750:	687b      	ldr	r3, [r7, #4]
 8006752:	f8d3 32b0 	ldr.w	r3, [r3, #688]	; 0x2b0
 8006756:	681b      	ldr	r3, [r3, #0]
 8006758:	687a      	ldr	r2, [r7, #4]
 800675a:	7c12      	ldrb	r2, [r2, #16]
 800675c:	f107 0108 	add.w	r1, r7, #8
 8006760:	4610      	mov	r0, r2
 8006762:	4798      	blx	r3
 8006764:	60f8      	str	r0, [r7, #12]
      break;
 8006766:	e112      	b.n	800698e <USBD_GetDescriptor+0x286>

    case USB_DESC_TYPE_CONFIGURATION:
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 8006768:	687b      	ldr	r3, [r7, #4]
 800676a:	7c1b      	ldrb	r3, [r3, #16]
 800676c:	2b00      	cmp	r3, #0
 800676e:	d10d      	bne.n	800678c <USBD_GetDescriptor+0x84>
      {
        pbuf = pdev->pClass->GetHSConfigDescriptor(&len);
 8006770:	687b      	ldr	r3, [r7, #4]
 8006772:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8006776:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006778:	f107 0208 	add.w	r2, r7, #8
 800677c:	4610      	mov	r0, r2
 800677e:	4798      	blx	r3
 8006780:	60f8      	str	r0, [r7, #12]
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
 8006782:	68fb      	ldr	r3, [r7, #12]
 8006784:	3301      	adds	r3, #1
 8006786:	2202      	movs	r2, #2
 8006788:	701a      	strb	r2, [r3, #0]
      else
      {
        pbuf = pdev->pClass->GetFSConfigDescriptor(&len);
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
      }
      break;
 800678a:	e100      	b.n	800698e <USBD_GetDescriptor+0x286>
        pbuf = pdev->pClass->GetFSConfigDescriptor(&len);
 800678c:	687b      	ldr	r3, [r7, #4]
 800678e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8006792:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006794:	f107 0208 	add.w	r2, r7, #8
 8006798:	4610      	mov	r0, r2
 800679a:	4798      	blx	r3
 800679c:	60f8      	str	r0, [r7, #12]
        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
 800679e:	68fb      	ldr	r3, [r7, #12]
 80067a0:	3301      	adds	r3, #1
 80067a2:	2202      	movs	r2, #2
 80067a4:	701a      	strb	r2, [r3, #0]
      break;
 80067a6:	e0f2      	b.n	800698e <USBD_GetDescriptor+0x286>

    case USB_DESC_TYPE_STRING:
      switch ((uint8_t)(req->wValue))
 80067a8:	683b      	ldr	r3, [r7, #0]
 80067aa:	885b      	ldrh	r3, [r3, #2]
 80067ac:	b2db      	uxtb	r3, r3
 80067ae:	2b05      	cmp	r3, #5
 80067b0:	f200 80ac 	bhi.w	800690c <USBD_GetDescriptor+0x204>
 80067b4:	a201      	add	r2, pc, #4	; (adr r2, 80067bc <USBD_GetDescriptor+0xb4>)
 80067b6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80067ba:	bf00      	nop
 80067bc:	080067d5 	.word	0x080067d5
 80067c0:	08006809 	.word	0x08006809
 80067c4:	0800683d 	.word	0x0800683d
 80067c8:	08006871 	.word	0x08006871
 80067cc:	080068a5 	.word	0x080068a5
 80067d0:	080068d9 	.word	0x080068d9
      {
        case USBD_IDX_LANGID_STR:
          if (pdev->pDesc->GetLangIDStrDescriptor != NULL)
 80067d4:	687b      	ldr	r3, [r7, #4]
 80067d6:	f8d3 32b0 	ldr.w	r3, [r3, #688]	; 0x2b0
 80067da:	685b      	ldr	r3, [r3, #4]
 80067dc:	2b00      	cmp	r3, #0
 80067de:	d00b      	beq.n	80067f8 <USBD_GetDescriptor+0xf0>
          {
            pbuf = pdev->pDesc->GetLangIDStrDescriptor(pdev->dev_speed, &len);
 80067e0:	687b      	ldr	r3, [r7, #4]
 80067e2:	f8d3 32b0 	ldr.w	r3, [r3, #688]	; 0x2b0
 80067e6:	685b      	ldr	r3, [r3, #4]
 80067e8:	687a      	ldr	r2, [r7, #4]
 80067ea:	7c12      	ldrb	r2, [r2, #16]
 80067ec:	f107 0108 	add.w	r1, r7, #8
 80067f0:	4610      	mov	r0, r2
 80067f2:	4798      	blx	r3
 80067f4:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 80067f6:	e091      	b.n	800691c <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
 80067f8:	6839      	ldr	r1, [r7, #0]
 80067fa:	6878      	ldr	r0, [r7, #4]
 80067fc:	f000 fa97 	bl	8006d2e <USBD_CtlError>
            err++;
 8006800:	7afb      	ldrb	r3, [r7, #11]
 8006802:	3301      	adds	r3, #1
 8006804:	72fb      	strb	r3, [r7, #11]
          break;
 8006806:	e089      	b.n	800691c <USBD_GetDescriptor+0x214>

        case USBD_IDX_MFC_STR:
          if (pdev->pDesc->GetManufacturerStrDescriptor != NULL)
 8006808:	687b      	ldr	r3, [r7, #4]
 800680a:	f8d3 32b0 	ldr.w	r3, [r3, #688]	; 0x2b0
 800680e:	689b      	ldr	r3, [r3, #8]
 8006810:	2b00      	cmp	r3, #0
 8006812:	d00b      	beq.n	800682c <USBD_GetDescriptor+0x124>
          {
            pbuf = pdev->pDesc->GetManufacturerStrDescriptor(pdev->dev_speed, &len);
 8006814:	687b      	ldr	r3, [r7, #4]
 8006816:	f8d3 32b0 	ldr.w	r3, [r3, #688]	; 0x2b0
 800681a:	689b      	ldr	r3, [r3, #8]
 800681c:	687a      	ldr	r2, [r7, #4]
 800681e:	7c12      	ldrb	r2, [r2, #16]
 8006820:	f107 0108 	add.w	r1, r7, #8
 8006824:	4610      	mov	r0, r2
 8006826:	4798      	blx	r3
 8006828:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 800682a:	e077      	b.n	800691c <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
 800682c:	6839      	ldr	r1, [r7, #0]
 800682e:	6878      	ldr	r0, [r7, #4]
 8006830:	f000 fa7d 	bl	8006d2e <USBD_CtlError>
            err++;
 8006834:	7afb      	ldrb	r3, [r7, #11]
 8006836:	3301      	adds	r3, #1
 8006838:	72fb      	strb	r3, [r7, #11]
          break;
 800683a:	e06f      	b.n	800691c <USBD_GetDescriptor+0x214>

        case USBD_IDX_PRODUCT_STR:
          if (pdev->pDesc->GetProductStrDescriptor != NULL)
 800683c:	687b      	ldr	r3, [r7, #4]
 800683e:	f8d3 32b0 	ldr.w	r3, [r3, #688]	; 0x2b0
 8006842:	68db      	ldr	r3, [r3, #12]
 8006844:	2b00      	cmp	r3, #0
 8006846:	d00b      	beq.n	8006860 <USBD_GetDescriptor+0x158>
          {
            pbuf = pdev->pDesc->GetProductStrDescriptor(pdev->dev_speed, &len);
 8006848:	687b      	ldr	r3, [r7, #4]
 800684a:	f8d3 32b0 	ldr.w	r3, [r3, #688]	; 0x2b0
 800684e:	68db      	ldr	r3, [r3, #12]
 8006850:	687a      	ldr	r2, [r7, #4]
 8006852:	7c12      	ldrb	r2, [r2, #16]
 8006854:	f107 0108 	add.w	r1, r7, #8
 8006858:	4610      	mov	r0, r2
 800685a:	4798      	blx	r3
 800685c:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 800685e:	e05d      	b.n	800691c <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
 8006860:	6839      	ldr	r1, [r7, #0]
 8006862:	6878      	ldr	r0, [r7, #4]
 8006864:	f000 fa63 	bl	8006d2e <USBD_CtlError>
            err++;
 8006868:	7afb      	ldrb	r3, [r7, #11]
 800686a:	3301      	adds	r3, #1
 800686c:	72fb      	strb	r3, [r7, #11]
          break;
 800686e:	e055      	b.n	800691c <USBD_GetDescriptor+0x214>

        case USBD_IDX_SERIAL_STR:
          if (pdev->pDesc->GetSerialStrDescriptor != NULL)
 8006870:	687b      	ldr	r3, [r7, #4]
 8006872:	f8d3 32b0 	ldr.w	r3, [r3, #688]	; 0x2b0
 8006876:	691b      	ldr	r3, [r3, #16]
 8006878:	2b00      	cmp	r3, #0
 800687a:	d00b      	beq.n	8006894 <USBD_GetDescriptor+0x18c>
          {
            pbuf = pdev->pDesc->GetSerialStrDescriptor(pdev->dev_speed, &len);
 800687c:	687b      	ldr	r3, [r7, #4]
 800687e:	f8d3 32b0 	ldr.w	r3, [r3, #688]	; 0x2b0
 8006882:	691b      	ldr	r3, [r3, #16]
 8006884:	687a      	ldr	r2, [r7, #4]
 8006886:	7c12      	ldrb	r2, [r2, #16]
 8006888:	f107 0108 	add.w	r1, r7, #8
 800688c:	4610      	mov	r0, r2
 800688e:	4798      	blx	r3
 8006890:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 8006892:	e043      	b.n	800691c <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
 8006894:	6839      	ldr	r1, [r7, #0]
 8006896:	6878      	ldr	r0, [r7, #4]
 8006898:	f000 fa49 	bl	8006d2e <USBD_CtlError>
            err++;
 800689c:	7afb      	ldrb	r3, [r7, #11]
 800689e:	3301      	adds	r3, #1
 80068a0:	72fb      	strb	r3, [r7, #11]
          break;
 80068a2:	e03b      	b.n	800691c <USBD_GetDescriptor+0x214>

        case USBD_IDX_CONFIG_STR:
          if (pdev->pDesc->GetConfigurationStrDescriptor != NULL)
 80068a4:	687b      	ldr	r3, [r7, #4]
 80068a6:	f8d3 32b0 	ldr.w	r3, [r3, #688]	; 0x2b0
 80068aa:	695b      	ldr	r3, [r3, #20]
 80068ac:	2b00      	cmp	r3, #0
 80068ae:	d00b      	beq.n	80068c8 <USBD_GetDescriptor+0x1c0>
          {
            pbuf = pdev->pDesc->GetConfigurationStrDescriptor(pdev->dev_speed, &len);
 80068b0:	687b      	ldr	r3, [r7, #4]
 80068b2:	f8d3 32b0 	ldr.w	r3, [r3, #688]	; 0x2b0
 80068b6:	695b      	ldr	r3, [r3, #20]
 80068b8:	687a      	ldr	r2, [r7, #4]
 80068ba:	7c12      	ldrb	r2, [r2, #16]
 80068bc:	f107 0108 	add.w	r1, r7, #8
 80068c0:	4610      	mov	r0, r2
 80068c2:	4798      	blx	r3
 80068c4:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 80068c6:	e029      	b.n	800691c <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
 80068c8:	6839      	ldr	r1, [r7, #0]
 80068ca:	6878      	ldr	r0, [r7, #4]
 80068cc:	f000 fa2f 	bl	8006d2e <USBD_CtlError>
            err++;
 80068d0:	7afb      	ldrb	r3, [r7, #11]
 80068d2:	3301      	adds	r3, #1
 80068d4:	72fb      	strb	r3, [r7, #11]
          break;
 80068d6:	e021      	b.n	800691c <USBD_GetDescriptor+0x214>

        case USBD_IDX_INTERFACE_STR:
          if (pdev->pDesc->GetInterfaceStrDescriptor != NULL)
 80068d8:	687b      	ldr	r3, [r7, #4]
 80068da:	f8d3 32b0 	ldr.w	r3, [r3, #688]	; 0x2b0
 80068de:	699b      	ldr	r3, [r3, #24]
 80068e0:	2b00      	cmp	r3, #0
 80068e2:	d00b      	beq.n	80068fc <USBD_GetDescriptor+0x1f4>
          {
            pbuf = pdev->pDesc->GetInterfaceStrDescriptor(pdev->dev_speed, &len);
 80068e4:	687b      	ldr	r3, [r7, #4]
 80068e6:	f8d3 32b0 	ldr.w	r3, [r3, #688]	; 0x2b0
 80068ea:	699b      	ldr	r3, [r3, #24]
 80068ec:	687a      	ldr	r2, [r7, #4]
 80068ee:	7c12      	ldrb	r2, [r2, #16]
 80068f0:	f107 0108 	add.w	r1, r7, #8
 80068f4:	4610      	mov	r0, r2
 80068f6:	4798      	blx	r3
 80068f8:	60f8      	str	r0, [r7, #12]
          else
          {
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
 80068fa:	e00f      	b.n	800691c <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
 80068fc:	6839      	ldr	r1, [r7, #0]
 80068fe:	6878      	ldr	r0, [r7, #4]
 8006900:	f000 fa15 	bl	8006d2e <USBD_CtlError>
            err++;
 8006904:	7afb      	ldrb	r3, [r7, #11]
 8006906:	3301      	adds	r3, #1
 8006908:	72fb      	strb	r3, [r7, #11]
          break;
 800690a:	e007      	b.n	800691c <USBD_GetDescriptor+0x214>
            USBD_CtlError(pdev, req);
            err++;
          }
          break;
#else
          USBD_CtlError(pdev, req);
 800690c:	6839      	ldr	r1, [r7, #0]
 800690e:	6878      	ldr	r0, [r7, #4]
 8006910:	f000 fa0d 	bl	8006d2e <USBD_CtlError>
          err++;
 8006914:	7afb      	ldrb	r3, [r7, #11]
 8006916:	3301      	adds	r3, #1
 8006918:	72fb      	strb	r3, [r7, #11]
#endif
      }
      break;
 800691a:	e038      	b.n	800698e <USBD_GetDescriptor+0x286>
 800691c:	e037      	b.n	800698e <USBD_GetDescriptor+0x286>

    case USB_DESC_TYPE_DEVICE_QUALIFIER:
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800691e:	687b      	ldr	r3, [r7, #4]
 8006920:	7c1b      	ldrb	r3, [r3, #16]
 8006922:	2b00      	cmp	r3, #0
 8006924:	d109      	bne.n	800693a <USBD_GetDescriptor+0x232>
      {
        pbuf = pdev->pClass->GetDeviceQualifierDescriptor(&len);
 8006926:	687b      	ldr	r3, [r7, #4]
 8006928:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800692c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800692e:	f107 0208 	add.w	r2, r7, #8
 8006932:	4610      	mov	r0, r2
 8006934:	4798      	blx	r3
 8006936:	60f8      	str	r0, [r7, #12]
      else
      {
        USBD_CtlError(pdev, req);
        err++;
      }
      break;
 8006938:	e029      	b.n	800698e <USBD_GetDescriptor+0x286>
        USBD_CtlError(pdev, req);
 800693a:	6839      	ldr	r1, [r7, #0]
 800693c:	6878      	ldr	r0, [r7, #4]
 800693e:	f000 f9f6 	bl	8006d2e <USBD_CtlError>
        err++;
 8006942:	7afb      	ldrb	r3, [r7, #11]
 8006944:	3301      	adds	r3, #1
 8006946:	72fb      	strb	r3, [r7, #11]
      break;
 8006948:	e021      	b.n	800698e <USBD_GetDescriptor+0x286>

    case USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION:
      if (pdev->dev_speed == USBD_SPEED_HIGH)
 800694a:	687b      	ldr	r3, [r7, #4]
 800694c:	7c1b      	ldrb	r3, [r3, #16]
 800694e:	2b00      	cmp	r3, #0
 8006950:	d10d      	bne.n	800696e <USBD_GetDescriptor+0x266>
      {
        pbuf = pdev->pClass->GetOtherSpeedConfigDescriptor(&len);
 8006952:	687b      	ldr	r3, [r7, #4]
 8006954:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 8006958:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800695a:	f107 0208 	add.w	r2, r7, #8
 800695e:	4610      	mov	r0, r2
 8006960:	4798      	blx	r3
 8006962:	60f8      	str	r0, [r7, #12]
        pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
 8006964:	68fb      	ldr	r3, [r7, #12]
 8006966:	3301      	adds	r3, #1
 8006968:	2207      	movs	r2, #7
 800696a:	701a      	strb	r2, [r3, #0]
      else
      {
        USBD_CtlError(pdev, req);
        err++;
      }
      break;
 800696c:	e00f      	b.n	800698e <USBD_GetDescriptor+0x286>
        USBD_CtlError(pdev, req);
 800696e:	6839      	ldr	r1, [r7, #0]
 8006970:	6878      	ldr	r0, [r7, #4]
 8006972:	f000 f9dc 	bl	8006d2e <USBD_CtlError>
        err++;
 8006976:	7afb      	ldrb	r3, [r7, #11]
 8006978:	3301      	adds	r3, #1
 800697a:	72fb      	strb	r3, [r7, #11]
      break;
 800697c:	e007      	b.n	800698e <USBD_GetDescriptor+0x286>

    default:
      USBD_CtlError(pdev, req);
 800697e:	6839      	ldr	r1, [r7, #0]
 8006980:	6878      	ldr	r0, [r7, #4]
 8006982:	f000 f9d4 	bl	8006d2e <USBD_CtlError>
      err++;
 8006986:	7afb      	ldrb	r3, [r7, #11]
 8006988:	3301      	adds	r3, #1
 800698a:	72fb      	strb	r3, [r7, #11]
      break;
 800698c:	bf00      	nop
  }

  if (err != 0U)
 800698e:	7afb      	ldrb	r3, [r7, #11]
 8006990:	2b00      	cmp	r3, #0
 8006992:	d11c      	bne.n	80069ce <USBD_GetDescriptor+0x2c6>
  {
    return;
  }
  else
  {
    if ((len != 0U) && (req->wLength != 0U))
 8006994:	893b      	ldrh	r3, [r7, #8]
 8006996:	2b00      	cmp	r3, #0
 8006998:	d011      	beq.n	80069be <USBD_GetDescriptor+0x2b6>
 800699a:	683b      	ldr	r3, [r7, #0]
 800699c:	88db      	ldrh	r3, [r3, #6]
 800699e:	2b00      	cmp	r3, #0
 80069a0:	d00d      	beq.n	80069be <USBD_GetDescriptor+0x2b6>
    {
      len = MIN(len, req->wLength);
 80069a2:	683b      	ldr	r3, [r7, #0]
 80069a4:	88da      	ldrh	r2, [r3, #6]
 80069a6:	893b      	ldrh	r3, [r7, #8]
 80069a8:	4293      	cmp	r3, r2
 80069aa:	bf28      	it	cs
 80069ac:	4613      	movcs	r3, r2
 80069ae:	b29b      	uxth	r3, r3
 80069b0:	813b      	strh	r3, [r7, #8]
      (void)USBD_CtlSendData(pdev, pbuf, len);
 80069b2:	893b      	ldrh	r3, [r7, #8]
 80069b4:	461a      	mov	r2, r3
 80069b6:	68f9      	ldr	r1, [r7, #12]
 80069b8:	6878      	ldr	r0, [r7, #4]
 80069ba:	f000 fa22 	bl	8006e02 <USBD_CtlSendData>
    }

    if (req->wLength == 0U)
 80069be:	683b      	ldr	r3, [r7, #0]
 80069c0:	88db      	ldrh	r3, [r3, #6]
 80069c2:	2b00      	cmp	r3, #0
 80069c4:	d104      	bne.n	80069d0 <USBD_GetDescriptor+0x2c8>
    {
      (void)USBD_CtlSendStatus(pdev);
 80069c6:	6878      	ldr	r0, [r7, #4]
 80069c8:	f000 fa79 	bl	8006ebe <USBD_CtlSendStatus>
 80069cc:	e000      	b.n	80069d0 <USBD_GetDescriptor+0x2c8>
    return;
 80069ce:	bf00      	nop
    }
  }
}
 80069d0:	3710      	adds	r7, #16
 80069d2:	46bd      	mov	sp, r7
 80069d4:	bd80      	pop	{r7, pc}
 80069d6:	bf00      	nop

080069d8 <USBD_SetAddress>:
* @param  req: usb request
* @retval status
*/
static void USBD_SetAddress(USBD_HandleTypeDef *pdev,
                            USBD_SetupReqTypedef *req)
{
 80069d8:	b580      	push	{r7, lr}
 80069da:	b084      	sub	sp, #16
 80069dc:	af00      	add	r7, sp, #0
 80069de:	6078      	str	r0, [r7, #4]
 80069e0:	6039      	str	r1, [r7, #0]
  uint8_t  dev_addr;

  if ((req->wIndex == 0U) && (req->wLength == 0U) && (req->wValue < 128U))
 80069e2:	683b      	ldr	r3, [r7, #0]
 80069e4:	889b      	ldrh	r3, [r3, #4]
 80069e6:	2b00      	cmp	r3, #0
 80069e8:	d130      	bne.n	8006a4c <USBD_SetAddress+0x74>
 80069ea:	683b      	ldr	r3, [r7, #0]
 80069ec:	88db      	ldrh	r3, [r3, #6]
 80069ee:	2b00      	cmp	r3, #0
 80069f0:	d12c      	bne.n	8006a4c <USBD_SetAddress+0x74>
 80069f2:	683b      	ldr	r3, [r7, #0]
 80069f4:	885b      	ldrh	r3, [r3, #2]
 80069f6:	2b7f      	cmp	r3, #127	; 0x7f
 80069f8:	d828      	bhi.n	8006a4c <USBD_SetAddress+0x74>
  {
    dev_addr = (uint8_t)(req->wValue) & 0x7FU;
 80069fa:	683b      	ldr	r3, [r7, #0]
 80069fc:	885b      	ldrh	r3, [r3, #2]
 80069fe:	b2db      	uxtb	r3, r3
 8006a00:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8006a04:	73fb      	strb	r3, [r7, #15]

    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8006a06:	687b      	ldr	r3, [r7, #4]
 8006a08:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8006a0c:	2b03      	cmp	r3, #3
 8006a0e:	d104      	bne.n	8006a1a <USBD_SetAddress+0x42>
    {
      USBD_CtlError(pdev, req);
 8006a10:	6839      	ldr	r1, [r7, #0]
 8006a12:	6878      	ldr	r0, [r7, #4]
 8006a14:	f000 f98b 	bl	8006d2e <USBD_CtlError>
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8006a18:	e01d      	b.n	8006a56 <USBD_SetAddress+0x7e>
    }
    else
    {
      pdev->dev_address = dev_addr;
 8006a1a:	687b      	ldr	r3, [r7, #4]
 8006a1c:	7bfa      	ldrb	r2, [r7, #15]
 8006a1e:	f883 229e 	strb.w	r2, [r3, #670]	; 0x29e
      USBD_LL_SetUSBAddress(pdev, dev_addr);
 8006a22:	7bfb      	ldrb	r3, [r7, #15]
 8006a24:	4619      	mov	r1, r3
 8006a26:	6878      	ldr	r0, [r7, #4]
 8006a28:	f000 fdc6 	bl	80075b8 <USBD_LL_SetUSBAddress>
      USBD_CtlSendStatus(pdev);
 8006a2c:	6878      	ldr	r0, [r7, #4]
 8006a2e:	f000 fa46 	bl	8006ebe <USBD_CtlSendStatus>

      if (dev_addr != 0U)
 8006a32:	7bfb      	ldrb	r3, [r7, #15]
 8006a34:	2b00      	cmp	r3, #0
 8006a36:	d004      	beq.n	8006a42 <USBD_SetAddress+0x6a>
      {
        pdev->dev_state = USBD_STATE_ADDRESSED;
 8006a38:	687b      	ldr	r3, [r7, #4]
 8006a3a:	2202      	movs	r2, #2
 8006a3c:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8006a40:	e009      	b.n	8006a56 <USBD_SetAddress+0x7e>
      }
      else
      {
        pdev->dev_state = USBD_STATE_DEFAULT;
 8006a42:	687b      	ldr	r3, [r7, #4]
 8006a44:	2201      	movs	r2, #1
 8006a46:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
    if (pdev->dev_state == USBD_STATE_CONFIGURED)
 8006a4a:	e004      	b.n	8006a56 <USBD_SetAddress+0x7e>
      }
    }
  }
  else
  {
    USBD_CtlError(pdev, req);
 8006a4c:	6839      	ldr	r1, [r7, #0]
 8006a4e:	6878      	ldr	r0, [r7, #4]
 8006a50:	f000 f96d 	bl	8006d2e <USBD_CtlError>
  }
}
 8006a54:	bf00      	nop
 8006a56:	bf00      	nop
 8006a58:	3710      	adds	r7, #16
 8006a5a:	46bd      	mov	sp, r7
 8006a5c:	bd80      	pop	{r7, pc}
	...

08006a60 <USBD_SetConfig>:
* @param  pdev: device instance
* @param  req: usb request
* @retval status
*/
static void USBD_SetConfig(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 8006a60:	b580      	push	{r7, lr}
 8006a62:	b082      	sub	sp, #8
 8006a64:	af00      	add	r7, sp, #0
 8006a66:	6078      	str	r0, [r7, #4]
 8006a68:	6039      	str	r1, [r7, #0]
  static uint8_t cfgidx;

  cfgidx = (uint8_t)(req->wValue);
 8006a6a:	683b      	ldr	r3, [r7, #0]
 8006a6c:	885b      	ldrh	r3, [r3, #2]
 8006a6e:	b2da      	uxtb	r2, r3
 8006a70:	4b41      	ldr	r3, [pc, #260]	; (8006b78 <USBD_SetConfig+0x118>)
 8006a72:	701a      	strb	r2, [r3, #0]

  if (cfgidx > USBD_MAX_NUM_CONFIGURATION)
 8006a74:	4b40      	ldr	r3, [pc, #256]	; (8006b78 <USBD_SetConfig+0x118>)
 8006a76:	781b      	ldrb	r3, [r3, #0]
 8006a78:	2b01      	cmp	r3, #1
 8006a7a:	d904      	bls.n	8006a86 <USBD_SetConfig+0x26>
  {
    USBD_CtlError(pdev, req);
 8006a7c:	6839      	ldr	r1, [r7, #0]
 8006a7e:	6878      	ldr	r0, [r7, #4]
 8006a80:	f000 f955 	bl	8006d2e <USBD_CtlError>
 8006a84:	e075      	b.n	8006b72 <USBD_SetConfig+0x112>
  }
  else
  {
    switch (pdev->dev_state)
 8006a86:	687b      	ldr	r3, [r7, #4]
 8006a88:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8006a8c:	2b02      	cmp	r3, #2
 8006a8e:	d002      	beq.n	8006a96 <USBD_SetConfig+0x36>
 8006a90:	2b03      	cmp	r3, #3
 8006a92:	d023      	beq.n	8006adc <USBD_SetConfig+0x7c>
 8006a94:	e062      	b.n	8006b5c <USBD_SetConfig+0xfc>
    {
      case USBD_STATE_ADDRESSED:
        if (cfgidx)
 8006a96:	4b38      	ldr	r3, [pc, #224]	; (8006b78 <USBD_SetConfig+0x118>)
 8006a98:	781b      	ldrb	r3, [r3, #0]
 8006a9a:	2b00      	cmp	r3, #0
 8006a9c:	d01a      	beq.n	8006ad4 <USBD_SetConfig+0x74>
        {
          pdev->dev_config = cfgidx;
 8006a9e:	4b36      	ldr	r3, [pc, #216]	; (8006b78 <USBD_SetConfig+0x118>)
 8006aa0:	781b      	ldrb	r3, [r3, #0]
 8006aa2:	461a      	mov	r2, r3
 8006aa4:	687b      	ldr	r3, [r7, #4]
 8006aa6:	605a      	str	r2, [r3, #4]
          pdev->dev_state = USBD_STATE_CONFIGURED;
 8006aa8:	687b      	ldr	r3, [r7, #4]
 8006aaa:	2203      	movs	r2, #3
 8006aac:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
          if (USBD_SetClassConfig(pdev, cfgidx) == USBD_FAIL)
 8006ab0:	4b31      	ldr	r3, [pc, #196]	; (8006b78 <USBD_SetConfig+0x118>)
 8006ab2:	781b      	ldrb	r3, [r3, #0]
 8006ab4:	4619      	mov	r1, r3
 8006ab6:	6878      	ldr	r0, [r7, #4]
 8006ab8:	f7ff f9e8 	bl	8005e8c <USBD_SetClassConfig>
 8006abc:	4603      	mov	r3, r0
 8006abe:	2b02      	cmp	r3, #2
 8006ac0:	d104      	bne.n	8006acc <USBD_SetConfig+0x6c>
          {
            USBD_CtlError(pdev, req);
 8006ac2:	6839      	ldr	r1, [r7, #0]
 8006ac4:	6878      	ldr	r0, [r7, #4]
 8006ac6:	f000 f932 	bl	8006d2e <USBD_CtlError>
            return;
 8006aca:	e052      	b.n	8006b72 <USBD_SetConfig+0x112>
          }
          USBD_CtlSendStatus(pdev);
 8006acc:	6878      	ldr	r0, [r7, #4]
 8006ace:	f000 f9f6 	bl	8006ebe <USBD_CtlSendStatus>
        }
        else
        {
          USBD_CtlSendStatus(pdev);
        }
        break;
 8006ad2:	e04e      	b.n	8006b72 <USBD_SetConfig+0x112>
          USBD_CtlSendStatus(pdev);
 8006ad4:	6878      	ldr	r0, [r7, #4]
 8006ad6:	f000 f9f2 	bl	8006ebe <USBD_CtlSendStatus>
        break;
 8006ada:	e04a      	b.n	8006b72 <USBD_SetConfig+0x112>

      case USBD_STATE_CONFIGURED:
        if (cfgidx == 0U)
 8006adc:	4b26      	ldr	r3, [pc, #152]	; (8006b78 <USBD_SetConfig+0x118>)
 8006ade:	781b      	ldrb	r3, [r3, #0]
 8006ae0:	2b00      	cmp	r3, #0
 8006ae2:	d112      	bne.n	8006b0a <USBD_SetConfig+0xaa>
        {
          pdev->dev_state = USBD_STATE_ADDRESSED;
 8006ae4:	687b      	ldr	r3, [r7, #4]
 8006ae6:	2202      	movs	r2, #2
 8006ae8:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
          pdev->dev_config = cfgidx;
 8006aec:	4b22      	ldr	r3, [pc, #136]	; (8006b78 <USBD_SetConfig+0x118>)
 8006aee:	781b      	ldrb	r3, [r3, #0]
 8006af0:	461a      	mov	r2, r3
 8006af2:	687b      	ldr	r3, [r7, #4]
 8006af4:	605a      	str	r2, [r3, #4]
          USBD_ClrClassConfig(pdev, cfgidx);
 8006af6:	4b20      	ldr	r3, [pc, #128]	; (8006b78 <USBD_SetConfig+0x118>)
 8006af8:	781b      	ldrb	r3, [r3, #0]
 8006afa:	4619      	mov	r1, r3
 8006afc:	6878      	ldr	r0, [r7, #4]
 8006afe:	f7ff f9e4 	bl	8005eca <USBD_ClrClassConfig>
          USBD_CtlSendStatus(pdev);
 8006b02:	6878      	ldr	r0, [r7, #4]
 8006b04:	f000 f9db 	bl	8006ebe <USBD_CtlSendStatus>
        }
        else
        {
          USBD_CtlSendStatus(pdev);
        }
        break;
 8006b08:	e033      	b.n	8006b72 <USBD_SetConfig+0x112>
        else if (cfgidx != pdev->dev_config)
 8006b0a:	4b1b      	ldr	r3, [pc, #108]	; (8006b78 <USBD_SetConfig+0x118>)
 8006b0c:	781b      	ldrb	r3, [r3, #0]
 8006b0e:	461a      	mov	r2, r3
 8006b10:	687b      	ldr	r3, [r7, #4]
 8006b12:	685b      	ldr	r3, [r3, #4]
 8006b14:	429a      	cmp	r2, r3
 8006b16:	d01d      	beq.n	8006b54 <USBD_SetConfig+0xf4>
          USBD_ClrClassConfig(pdev, (uint8_t)pdev->dev_config);
 8006b18:	687b      	ldr	r3, [r7, #4]
 8006b1a:	685b      	ldr	r3, [r3, #4]
 8006b1c:	b2db      	uxtb	r3, r3
 8006b1e:	4619      	mov	r1, r3
 8006b20:	6878      	ldr	r0, [r7, #4]
 8006b22:	f7ff f9d2 	bl	8005eca <USBD_ClrClassConfig>
          pdev->dev_config = cfgidx;
 8006b26:	4b14      	ldr	r3, [pc, #80]	; (8006b78 <USBD_SetConfig+0x118>)
 8006b28:	781b      	ldrb	r3, [r3, #0]
 8006b2a:	461a      	mov	r2, r3
 8006b2c:	687b      	ldr	r3, [r7, #4]
 8006b2e:	605a      	str	r2, [r3, #4]
          if (USBD_SetClassConfig(pdev, cfgidx) == USBD_FAIL)
 8006b30:	4b11      	ldr	r3, [pc, #68]	; (8006b78 <USBD_SetConfig+0x118>)
 8006b32:	781b      	ldrb	r3, [r3, #0]
 8006b34:	4619      	mov	r1, r3
 8006b36:	6878      	ldr	r0, [r7, #4]
 8006b38:	f7ff f9a8 	bl	8005e8c <USBD_SetClassConfig>
 8006b3c:	4603      	mov	r3, r0
 8006b3e:	2b02      	cmp	r3, #2
 8006b40:	d104      	bne.n	8006b4c <USBD_SetConfig+0xec>
            USBD_CtlError(pdev, req);
 8006b42:	6839      	ldr	r1, [r7, #0]
 8006b44:	6878      	ldr	r0, [r7, #4]
 8006b46:	f000 f8f2 	bl	8006d2e <USBD_CtlError>
            return;
 8006b4a:	e012      	b.n	8006b72 <USBD_SetConfig+0x112>
          USBD_CtlSendStatus(pdev);
 8006b4c:	6878      	ldr	r0, [r7, #4]
 8006b4e:	f000 f9b6 	bl	8006ebe <USBD_CtlSendStatus>
        break;
 8006b52:	e00e      	b.n	8006b72 <USBD_SetConfig+0x112>
          USBD_CtlSendStatus(pdev);
 8006b54:	6878      	ldr	r0, [r7, #4]
 8006b56:	f000 f9b2 	bl	8006ebe <USBD_CtlSendStatus>
        break;
 8006b5a:	e00a      	b.n	8006b72 <USBD_SetConfig+0x112>

      default:
        USBD_CtlError(pdev, req);
 8006b5c:	6839      	ldr	r1, [r7, #0]
 8006b5e:	6878      	ldr	r0, [r7, #4]
 8006b60:	f000 f8e5 	bl	8006d2e <USBD_CtlError>
        USBD_ClrClassConfig(pdev, cfgidx);
 8006b64:	4b04      	ldr	r3, [pc, #16]	; (8006b78 <USBD_SetConfig+0x118>)
 8006b66:	781b      	ldrb	r3, [r3, #0]
 8006b68:	4619      	mov	r1, r3
 8006b6a:	6878      	ldr	r0, [r7, #4]
 8006b6c:	f7ff f9ad 	bl	8005eca <USBD_ClrClassConfig>
        break;
 8006b70:	bf00      	nop
    }
  }
}
 8006b72:	3708      	adds	r7, #8
 8006b74:	46bd      	mov	sp, r7
 8006b76:	bd80      	pop	{r7, pc}
 8006b78:	20000210 	.word	0x20000210

08006b7c <USBD_GetConfig>:
* @param  pdev: device instance
* @param  req: usb request
* @retval status
*/
static void USBD_GetConfig(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 8006b7c:	b580      	push	{r7, lr}
 8006b7e:	b082      	sub	sp, #8
 8006b80:	af00      	add	r7, sp, #0
 8006b82:	6078      	str	r0, [r7, #4]
 8006b84:	6039      	str	r1, [r7, #0]
  if (req->wLength != 1U)
 8006b86:	683b      	ldr	r3, [r7, #0]
 8006b88:	88db      	ldrh	r3, [r3, #6]
 8006b8a:	2b01      	cmp	r3, #1
 8006b8c:	d004      	beq.n	8006b98 <USBD_GetConfig+0x1c>
  {
    USBD_CtlError(pdev, req);
 8006b8e:	6839      	ldr	r1, [r7, #0]
 8006b90:	6878      	ldr	r0, [r7, #4]
 8006b92:	f000 f8cc 	bl	8006d2e <USBD_CtlError>
      default:
        USBD_CtlError(pdev, req);
        break;
    }
  }
}
 8006b96:	e022      	b.n	8006bde <USBD_GetConfig+0x62>
    switch (pdev->dev_state)
 8006b98:	687b      	ldr	r3, [r7, #4]
 8006b9a:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8006b9e:	2b02      	cmp	r3, #2
 8006ba0:	dc02      	bgt.n	8006ba8 <USBD_GetConfig+0x2c>
 8006ba2:	2b00      	cmp	r3, #0
 8006ba4:	dc03      	bgt.n	8006bae <USBD_GetConfig+0x32>
 8006ba6:	e015      	b.n	8006bd4 <USBD_GetConfig+0x58>
 8006ba8:	2b03      	cmp	r3, #3
 8006baa:	d00b      	beq.n	8006bc4 <USBD_GetConfig+0x48>
 8006bac:	e012      	b.n	8006bd4 <USBD_GetConfig+0x58>
        pdev->dev_default_config = 0U;
 8006bae:	687b      	ldr	r3, [r7, #4]
 8006bb0:	2200      	movs	r2, #0
 8006bb2:	609a      	str	r2, [r3, #8]
        USBD_CtlSendData(pdev, (uint8_t *)(void *)&pdev->dev_default_config, 1U);
 8006bb4:	687b      	ldr	r3, [r7, #4]
 8006bb6:	3308      	adds	r3, #8
 8006bb8:	2201      	movs	r2, #1
 8006bba:	4619      	mov	r1, r3
 8006bbc:	6878      	ldr	r0, [r7, #4]
 8006bbe:	f000 f920 	bl	8006e02 <USBD_CtlSendData>
        break;
 8006bc2:	e00c      	b.n	8006bde <USBD_GetConfig+0x62>
        USBD_CtlSendData(pdev, (uint8_t *)(void *)&pdev->dev_config, 1U);
 8006bc4:	687b      	ldr	r3, [r7, #4]
 8006bc6:	3304      	adds	r3, #4
 8006bc8:	2201      	movs	r2, #1
 8006bca:	4619      	mov	r1, r3
 8006bcc:	6878      	ldr	r0, [r7, #4]
 8006bce:	f000 f918 	bl	8006e02 <USBD_CtlSendData>
        break;
 8006bd2:	e004      	b.n	8006bde <USBD_GetConfig+0x62>
        USBD_CtlError(pdev, req);
 8006bd4:	6839      	ldr	r1, [r7, #0]
 8006bd6:	6878      	ldr	r0, [r7, #4]
 8006bd8:	f000 f8a9 	bl	8006d2e <USBD_CtlError>
        break;
 8006bdc:	bf00      	nop
}
 8006bde:	bf00      	nop
 8006be0:	3708      	adds	r7, #8
 8006be2:	46bd      	mov	sp, r7
 8006be4:	bd80      	pop	{r7, pc}

08006be6 <USBD_GetStatus>:
* @param  pdev: device instance
* @param  req: usb request
* @retval status
*/
static void USBD_GetStatus(USBD_HandleTypeDef *pdev, USBD_SetupReqTypedef *req)
{
 8006be6:	b580      	push	{r7, lr}
 8006be8:	b082      	sub	sp, #8
 8006bea:	af00      	add	r7, sp, #0
 8006bec:	6078      	str	r0, [r7, #4]
 8006bee:	6039      	str	r1, [r7, #0]
  switch (pdev->dev_state)
 8006bf0:	687b      	ldr	r3, [r7, #4]
 8006bf2:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8006bf6:	3b01      	subs	r3, #1
 8006bf8:	2b02      	cmp	r3, #2
 8006bfa:	d81e      	bhi.n	8006c3a <USBD_GetStatus+0x54>
  {
    case USBD_STATE_DEFAULT:
    case USBD_STATE_ADDRESSED:
    case USBD_STATE_CONFIGURED:
      if (req->wLength != 0x2U)
 8006bfc:	683b      	ldr	r3, [r7, #0]
 8006bfe:	88db      	ldrh	r3, [r3, #6]
 8006c00:	2b02      	cmp	r3, #2
 8006c02:	d004      	beq.n	8006c0e <USBD_GetStatus+0x28>
      {
        USBD_CtlError(pdev, req);
 8006c04:	6839      	ldr	r1, [r7, #0]
 8006c06:	6878      	ldr	r0, [r7, #4]
 8006c08:	f000 f891 	bl	8006d2e <USBD_CtlError>
        break;
 8006c0c:	e01a      	b.n	8006c44 <USBD_GetStatus+0x5e>
      }

#if (USBD_SELF_POWERED == 1U)
      pdev->dev_config_status = USB_CONFIG_SELF_POWERED;
 8006c0e:	687b      	ldr	r3, [r7, #4]
 8006c10:	2201      	movs	r2, #1
 8006c12:	60da      	str	r2, [r3, #12]
#else
      pdev->dev_config_status = 0U;
#endif

      if (pdev->dev_remote_wakeup)
 8006c14:	687b      	ldr	r3, [r7, #4]
 8006c16:	f8d3 32a4 	ldr.w	r3, [r3, #676]	; 0x2a4
 8006c1a:	2b00      	cmp	r3, #0
 8006c1c:	d005      	beq.n	8006c2a <USBD_GetStatus+0x44>
      {
        pdev->dev_config_status |= USB_CONFIG_REMOTE_WAKEUP;
 8006c1e:	687b      	ldr	r3, [r7, #4]
 8006c20:	68db      	ldr	r3, [r3, #12]
 8006c22:	f043 0202 	orr.w	r2, r3, #2
 8006c26:	687b      	ldr	r3, [r7, #4]
 8006c28:	60da      	str	r2, [r3, #12]
      }

      USBD_CtlSendData(pdev, (uint8_t *)(void *)&pdev->dev_config_status, 2U);
 8006c2a:	687b      	ldr	r3, [r7, #4]
 8006c2c:	330c      	adds	r3, #12
 8006c2e:	2202      	movs	r2, #2
 8006c30:	4619      	mov	r1, r3
 8006c32:	6878      	ldr	r0, [r7, #4]
 8006c34:	f000 f8e5 	bl	8006e02 <USBD_CtlSendData>
      break;
 8006c38:	e004      	b.n	8006c44 <USBD_GetStatus+0x5e>

    default:
      USBD_CtlError(pdev, req);
 8006c3a:	6839      	ldr	r1, [r7, #0]
 8006c3c:	6878      	ldr	r0, [r7, #4]
 8006c3e:	f000 f876 	bl	8006d2e <USBD_CtlError>
      break;
 8006c42:	bf00      	nop
  }
}
 8006c44:	bf00      	nop
 8006c46:	3708      	adds	r7, #8
 8006c48:	46bd      	mov	sp, r7
 8006c4a:	bd80      	pop	{r7, pc}

08006c4c <USBD_SetFeature>:
* @param  req: usb request
* @retval status
*/
static void USBD_SetFeature(USBD_HandleTypeDef *pdev,
                            USBD_SetupReqTypedef *req)
{
 8006c4c:	b580      	push	{r7, lr}
 8006c4e:	b082      	sub	sp, #8
 8006c50:	af00      	add	r7, sp, #0
 8006c52:	6078      	str	r0, [r7, #4]
 8006c54:	6039      	str	r1, [r7, #0]
  if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 8006c56:	683b      	ldr	r3, [r7, #0]
 8006c58:	885b      	ldrh	r3, [r3, #2]
 8006c5a:	2b01      	cmp	r3, #1
 8006c5c:	d106      	bne.n	8006c6c <USBD_SetFeature+0x20>
  {
    pdev->dev_remote_wakeup = 1U;
 8006c5e:	687b      	ldr	r3, [r7, #4]
 8006c60:	2201      	movs	r2, #1
 8006c62:	f8c3 22a4 	str.w	r2, [r3, #676]	; 0x2a4
    USBD_CtlSendStatus(pdev);
 8006c66:	6878      	ldr	r0, [r7, #4]
 8006c68:	f000 f929 	bl	8006ebe <USBD_CtlSendStatus>
  }
}
 8006c6c:	bf00      	nop
 8006c6e:	3708      	adds	r7, #8
 8006c70:	46bd      	mov	sp, r7
 8006c72:	bd80      	pop	{r7, pc}

08006c74 <USBD_ClrFeature>:
* @param  req: usb request
* @retval status
*/
static void USBD_ClrFeature(USBD_HandleTypeDef *pdev,
                            USBD_SetupReqTypedef *req)
{
 8006c74:	b580      	push	{r7, lr}
 8006c76:	b082      	sub	sp, #8
 8006c78:	af00      	add	r7, sp, #0
 8006c7a:	6078      	str	r0, [r7, #4]
 8006c7c:	6039      	str	r1, [r7, #0]
  switch (pdev->dev_state)
 8006c7e:	687b      	ldr	r3, [r7, #4]
 8006c80:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 8006c84:	3b01      	subs	r3, #1
 8006c86:	2b02      	cmp	r3, #2
 8006c88:	d80b      	bhi.n	8006ca2 <USBD_ClrFeature+0x2e>
  {
    case USBD_STATE_DEFAULT:
    case USBD_STATE_ADDRESSED:
    case USBD_STATE_CONFIGURED:
      if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
 8006c8a:	683b      	ldr	r3, [r7, #0]
 8006c8c:	885b      	ldrh	r3, [r3, #2]
 8006c8e:	2b01      	cmp	r3, #1
 8006c90:	d10c      	bne.n	8006cac <USBD_ClrFeature+0x38>
      {
        pdev->dev_remote_wakeup = 0U;
 8006c92:	687b      	ldr	r3, [r7, #4]
 8006c94:	2200      	movs	r2, #0
 8006c96:	f8c3 22a4 	str.w	r2, [r3, #676]	; 0x2a4
        USBD_CtlSendStatus(pdev);
 8006c9a:	6878      	ldr	r0, [r7, #4]
 8006c9c:	f000 f90f 	bl	8006ebe <USBD_CtlSendStatus>
      }
      break;
 8006ca0:	e004      	b.n	8006cac <USBD_ClrFeature+0x38>

    default:
      USBD_CtlError(pdev, req);
 8006ca2:	6839      	ldr	r1, [r7, #0]
 8006ca4:	6878      	ldr	r0, [r7, #4]
 8006ca6:	f000 f842 	bl	8006d2e <USBD_CtlError>
      break;
 8006caa:	e000      	b.n	8006cae <USBD_ClrFeature+0x3a>
      break;
 8006cac:	bf00      	nop
  }
}
 8006cae:	bf00      	nop
 8006cb0:	3708      	adds	r7, #8
 8006cb2:	46bd      	mov	sp, r7
 8006cb4:	bd80      	pop	{r7, pc}

08006cb6 <USBD_ParseSetupRequest>:
* @param  req: usb request
* @retval None
*/

void USBD_ParseSetupRequest(USBD_SetupReqTypedef *req, uint8_t *pdata)
{
 8006cb6:	b480      	push	{r7}
 8006cb8:	b083      	sub	sp, #12
 8006cba:	af00      	add	r7, sp, #0
 8006cbc:	6078      	str	r0, [r7, #4]
 8006cbe:	6039      	str	r1, [r7, #0]
  req->bmRequest = *(uint8_t *)(pdata);
 8006cc0:	683b      	ldr	r3, [r7, #0]
 8006cc2:	781a      	ldrb	r2, [r3, #0]
 8006cc4:	687b      	ldr	r3, [r7, #4]
 8006cc6:	701a      	strb	r2, [r3, #0]
  req->bRequest = *(uint8_t *)(pdata + 1U);
 8006cc8:	683b      	ldr	r3, [r7, #0]
 8006cca:	785a      	ldrb	r2, [r3, #1]
 8006ccc:	687b      	ldr	r3, [r7, #4]
 8006cce:	705a      	strb	r2, [r3, #1]
  req->wValue = SWAPBYTE(pdata + 2U);
 8006cd0:	683b      	ldr	r3, [r7, #0]
 8006cd2:	3302      	adds	r3, #2
 8006cd4:	781b      	ldrb	r3, [r3, #0]
 8006cd6:	b29a      	uxth	r2, r3
 8006cd8:	683b      	ldr	r3, [r7, #0]
 8006cda:	3303      	adds	r3, #3
 8006cdc:	781b      	ldrb	r3, [r3, #0]
 8006cde:	b29b      	uxth	r3, r3
 8006ce0:	021b      	lsls	r3, r3, #8
 8006ce2:	b29b      	uxth	r3, r3
 8006ce4:	4413      	add	r3, r2
 8006ce6:	b29a      	uxth	r2, r3
 8006ce8:	687b      	ldr	r3, [r7, #4]
 8006cea:	805a      	strh	r2, [r3, #2]
  req->wIndex = SWAPBYTE(pdata + 4U);
 8006cec:	683b      	ldr	r3, [r7, #0]
 8006cee:	3304      	adds	r3, #4
 8006cf0:	781b      	ldrb	r3, [r3, #0]
 8006cf2:	b29a      	uxth	r2, r3
 8006cf4:	683b      	ldr	r3, [r7, #0]
 8006cf6:	3305      	adds	r3, #5
 8006cf8:	781b      	ldrb	r3, [r3, #0]
 8006cfa:	b29b      	uxth	r3, r3
 8006cfc:	021b      	lsls	r3, r3, #8
 8006cfe:	b29b      	uxth	r3, r3
 8006d00:	4413      	add	r3, r2
 8006d02:	b29a      	uxth	r2, r3
 8006d04:	687b      	ldr	r3, [r7, #4]
 8006d06:	809a      	strh	r2, [r3, #4]
  req->wLength = SWAPBYTE(pdata + 6U);
 8006d08:	683b      	ldr	r3, [r7, #0]
 8006d0a:	3306      	adds	r3, #6
 8006d0c:	781b      	ldrb	r3, [r3, #0]
 8006d0e:	b29a      	uxth	r2, r3
 8006d10:	683b      	ldr	r3, [r7, #0]
 8006d12:	3307      	adds	r3, #7
 8006d14:	781b      	ldrb	r3, [r3, #0]
 8006d16:	b29b      	uxth	r3, r3
 8006d18:	021b      	lsls	r3, r3, #8
 8006d1a:	b29b      	uxth	r3, r3
 8006d1c:	4413      	add	r3, r2
 8006d1e:	b29a      	uxth	r2, r3
 8006d20:	687b      	ldr	r3, [r7, #4]
 8006d22:	80da      	strh	r2, [r3, #6]

}
 8006d24:	bf00      	nop
 8006d26:	370c      	adds	r7, #12
 8006d28:	46bd      	mov	sp, r7
 8006d2a:	bc80      	pop	{r7}
 8006d2c:	4770      	bx	lr

08006d2e <USBD_CtlError>:
* @retval None
*/

void USBD_CtlError(USBD_HandleTypeDef *pdev,
                   USBD_SetupReqTypedef *req)
{
 8006d2e:	b580      	push	{r7, lr}
 8006d30:	b082      	sub	sp, #8
 8006d32:	af00      	add	r7, sp, #0
 8006d34:	6078      	str	r0, [r7, #4]
 8006d36:	6039      	str	r1, [r7, #0]
  USBD_LL_StallEP(pdev, 0x80U);
 8006d38:	2180      	movs	r1, #128	; 0x80
 8006d3a:	6878      	ldr	r0, [r7, #4]
 8006d3c:	f000 fbd2 	bl	80074e4 <USBD_LL_StallEP>
  USBD_LL_StallEP(pdev, 0U);
 8006d40:	2100      	movs	r1, #0
 8006d42:	6878      	ldr	r0, [r7, #4]
 8006d44:	f000 fbce 	bl	80074e4 <USBD_LL_StallEP>
}
 8006d48:	bf00      	nop
 8006d4a:	3708      	adds	r7, #8
 8006d4c:	46bd      	mov	sp, r7
 8006d4e:	bd80      	pop	{r7, pc}

08006d50 <USBD_GetString>:
  * @param  unicode : Formatted string buffer (unicode)
  * @param  len : descriptor length
  * @retval None
  */
void USBD_GetString(uint8_t *desc, uint8_t *unicode, uint16_t *len)
{
 8006d50:	b580      	push	{r7, lr}
 8006d52:	b086      	sub	sp, #24
 8006d54:	af00      	add	r7, sp, #0
 8006d56:	60f8      	str	r0, [r7, #12]
 8006d58:	60b9      	str	r1, [r7, #8]
 8006d5a:	607a      	str	r2, [r7, #4]
  uint8_t idx = 0U;
 8006d5c:	2300      	movs	r3, #0
 8006d5e:	75fb      	strb	r3, [r7, #23]

  if (desc != NULL)
 8006d60:	68fb      	ldr	r3, [r7, #12]
 8006d62:	2b00      	cmp	r3, #0
 8006d64:	d032      	beq.n	8006dcc <USBD_GetString+0x7c>
  {
    *len = (uint16_t)USBD_GetLen(desc) * 2U + 2U;
 8006d66:	68f8      	ldr	r0, [r7, #12]
 8006d68:	f000 f834 	bl	8006dd4 <USBD_GetLen>
 8006d6c:	4603      	mov	r3, r0
 8006d6e:	3301      	adds	r3, #1
 8006d70:	b29b      	uxth	r3, r3
 8006d72:	005b      	lsls	r3, r3, #1
 8006d74:	b29a      	uxth	r2, r3
 8006d76:	687b      	ldr	r3, [r7, #4]
 8006d78:	801a      	strh	r2, [r3, #0]
    unicode[idx++] = *(uint8_t *)(void *)len;
 8006d7a:	7dfb      	ldrb	r3, [r7, #23]
 8006d7c:	1c5a      	adds	r2, r3, #1
 8006d7e:	75fa      	strb	r2, [r7, #23]
 8006d80:	461a      	mov	r2, r3
 8006d82:	68bb      	ldr	r3, [r7, #8]
 8006d84:	4413      	add	r3, r2
 8006d86:	687a      	ldr	r2, [r7, #4]
 8006d88:	7812      	ldrb	r2, [r2, #0]
 8006d8a:	701a      	strb	r2, [r3, #0]
    unicode[idx++] = USB_DESC_TYPE_STRING;
 8006d8c:	7dfb      	ldrb	r3, [r7, #23]
 8006d8e:	1c5a      	adds	r2, r3, #1
 8006d90:	75fa      	strb	r2, [r7, #23]
 8006d92:	461a      	mov	r2, r3
 8006d94:	68bb      	ldr	r3, [r7, #8]
 8006d96:	4413      	add	r3, r2
 8006d98:	2203      	movs	r2, #3
 8006d9a:	701a      	strb	r2, [r3, #0]

    while (*desc != '\0')
 8006d9c:	e012      	b.n	8006dc4 <USBD_GetString+0x74>
    {
      unicode[idx++] = *desc++;
 8006d9e:	68fb      	ldr	r3, [r7, #12]
 8006da0:	1c5a      	adds	r2, r3, #1
 8006da2:	60fa      	str	r2, [r7, #12]
 8006da4:	7dfa      	ldrb	r2, [r7, #23]
 8006da6:	1c51      	adds	r1, r2, #1
 8006da8:	75f9      	strb	r1, [r7, #23]
 8006daa:	4611      	mov	r1, r2
 8006dac:	68ba      	ldr	r2, [r7, #8]
 8006dae:	440a      	add	r2, r1
 8006db0:	781b      	ldrb	r3, [r3, #0]
 8006db2:	7013      	strb	r3, [r2, #0]
      unicode[idx++] =  0U;
 8006db4:	7dfb      	ldrb	r3, [r7, #23]
 8006db6:	1c5a      	adds	r2, r3, #1
 8006db8:	75fa      	strb	r2, [r7, #23]
 8006dba:	461a      	mov	r2, r3
 8006dbc:	68bb      	ldr	r3, [r7, #8]
 8006dbe:	4413      	add	r3, r2
 8006dc0:	2200      	movs	r2, #0
 8006dc2:	701a      	strb	r2, [r3, #0]
    while (*desc != '\0')
 8006dc4:	68fb      	ldr	r3, [r7, #12]
 8006dc6:	781b      	ldrb	r3, [r3, #0]
 8006dc8:	2b00      	cmp	r3, #0
 8006dca:	d1e8      	bne.n	8006d9e <USBD_GetString+0x4e>
    }
  }
}
 8006dcc:	bf00      	nop
 8006dce:	3718      	adds	r7, #24
 8006dd0:	46bd      	mov	sp, r7
 8006dd2:	bd80      	pop	{r7, pc}

08006dd4 <USBD_GetLen>:
  *         return the string length
   * @param  buf : pointer to the ascii string buffer
  * @retval string length
  */
static uint8_t USBD_GetLen(uint8_t *buf)
{
 8006dd4:	b480      	push	{r7}
 8006dd6:	b085      	sub	sp, #20
 8006dd8:	af00      	add	r7, sp, #0
 8006dda:	6078      	str	r0, [r7, #4]
  uint8_t  len = 0U;
 8006ddc:	2300      	movs	r3, #0
 8006dde:	73fb      	strb	r3, [r7, #15]

  while (*buf != '\0')
 8006de0:	e005      	b.n	8006dee <USBD_GetLen+0x1a>
  {
    len++;
 8006de2:	7bfb      	ldrb	r3, [r7, #15]
 8006de4:	3301      	adds	r3, #1
 8006de6:	73fb      	strb	r3, [r7, #15]
    buf++;
 8006de8:	687b      	ldr	r3, [r7, #4]
 8006dea:	3301      	adds	r3, #1
 8006dec:	607b      	str	r3, [r7, #4]
  while (*buf != '\0')
 8006dee:	687b      	ldr	r3, [r7, #4]
 8006df0:	781b      	ldrb	r3, [r3, #0]
 8006df2:	2b00      	cmp	r3, #0
 8006df4:	d1f5      	bne.n	8006de2 <USBD_GetLen+0xe>
  }

  return len;
 8006df6:	7bfb      	ldrb	r3, [r7, #15]
}
 8006df8:	4618      	mov	r0, r3
 8006dfa:	3714      	adds	r7, #20
 8006dfc:	46bd      	mov	sp, r7
 8006dfe:	bc80      	pop	{r7}
 8006e00:	4770      	bx	lr

08006e02 <USBD_CtlSendData>:
* @param  len: length of data to be sent
* @retval status
*/
USBD_StatusTypeDef USBD_CtlSendData(USBD_HandleTypeDef *pdev,
                                    uint8_t *pbuf, uint16_t len)
{
 8006e02:	b580      	push	{r7, lr}
 8006e04:	b084      	sub	sp, #16
 8006e06:	af00      	add	r7, sp, #0
 8006e08:	60f8      	str	r0, [r7, #12]
 8006e0a:	60b9      	str	r1, [r7, #8]
 8006e0c:	4613      	mov	r3, r2
 8006e0e:	80fb      	strh	r3, [r7, #6]
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_DATA_IN;
 8006e10:	68fb      	ldr	r3, [r7, #12]
 8006e12:	2202      	movs	r2, #2
 8006e14:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  pdev->ep_in[0].total_length = len;
 8006e18:	88fa      	ldrh	r2, [r7, #6]
 8006e1a:	68fb      	ldr	r3, [r7, #12]
 8006e1c:	61da      	str	r2, [r3, #28]
  pdev->ep_in[0].rem_length   = len;
 8006e1e:	88fa      	ldrh	r2, [r7, #6]
 8006e20:	68fb      	ldr	r3, [r7, #12]
 8006e22:	621a      	str	r2, [r3, #32]

  /* Start the transfer */
  USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 8006e24:	88fb      	ldrh	r3, [r7, #6]
 8006e26:	68ba      	ldr	r2, [r7, #8]
 8006e28:	2100      	movs	r1, #0
 8006e2a:	68f8      	ldr	r0, [r7, #12]
 8006e2c:	f000 fbe3 	bl	80075f6 <USBD_LL_Transmit>

  return USBD_OK;
 8006e30:	2300      	movs	r3, #0
}
 8006e32:	4618      	mov	r0, r3
 8006e34:	3710      	adds	r7, #16
 8006e36:	46bd      	mov	sp, r7
 8006e38:	bd80      	pop	{r7, pc}

08006e3a <USBD_CtlContinueSendData>:
* @param  len: length of data to be sent
* @retval status
*/
USBD_StatusTypeDef USBD_CtlContinueSendData(USBD_HandleTypeDef *pdev,
                                            uint8_t *pbuf, uint16_t len)
{
 8006e3a:	b580      	push	{r7, lr}
 8006e3c:	b084      	sub	sp, #16
 8006e3e:	af00      	add	r7, sp, #0
 8006e40:	60f8      	str	r0, [r7, #12]
 8006e42:	60b9      	str	r1, [r7, #8]
 8006e44:	4613      	mov	r3, r2
 8006e46:	80fb      	strh	r3, [r7, #6]
  /* Start the next transfer */
  USBD_LL_Transmit(pdev, 0x00U, pbuf, len);
 8006e48:	88fb      	ldrh	r3, [r7, #6]
 8006e4a:	68ba      	ldr	r2, [r7, #8]
 8006e4c:	2100      	movs	r1, #0
 8006e4e:	68f8      	ldr	r0, [r7, #12]
 8006e50:	f000 fbd1 	bl	80075f6 <USBD_LL_Transmit>

  return USBD_OK;
 8006e54:	2300      	movs	r3, #0
}
 8006e56:	4618      	mov	r0, r3
 8006e58:	3710      	adds	r7, #16
 8006e5a:	46bd      	mov	sp, r7
 8006e5c:	bd80      	pop	{r7, pc}

08006e5e <USBD_CtlPrepareRx>:
* @param  len: length of data to be received
* @retval status
*/
USBD_StatusTypeDef USBD_CtlPrepareRx(USBD_HandleTypeDef *pdev,
                                     uint8_t *pbuf, uint16_t len)
{
 8006e5e:	b580      	push	{r7, lr}
 8006e60:	b084      	sub	sp, #16
 8006e62:	af00      	add	r7, sp, #0
 8006e64:	60f8      	str	r0, [r7, #12]
 8006e66:	60b9      	str	r1, [r7, #8]
 8006e68:	4613      	mov	r3, r2
 8006e6a:	80fb      	strh	r3, [r7, #6]
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_DATA_OUT;
 8006e6c:	68fb      	ldr	r3, [r7, #12]
 8006e6e:	2203      	movs	r2, #3
 8006e70:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  pdev->ep_out[0].total_length = len;
 8006e74:	88fa      	ldrh	r2, [r7, #6]
 8006e76:	68fb      	ldr	r3, [r7, #12]
 8006e78:	f8c3 215c 	str.w	r2, [r3, #348]	; 0x15c
  pdev->ep_out[0].rem_length   = len;
 8006e7c:	88fa      	ldrh	r2, [r7, #6]
 8006e7e:	68fb      	ldr	r3, [r7, #12]
 8006e80:	f8c3 2160 	str.w	r2, [r3, #352]	; 0x160

  /* Start the transfer */
  USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
 8006e84:	88fb      	ldrh	r3, [r7, #6]
 8006e86:	68ba      	ldr	r2, [r7, #8]
 8006e88:	2100      	movs	r1, #0
 8006e8a:	68f8      	ldr	r0, [r7, #12]
 8006e8c:	f000 fbd6 	bl	800763c <USBD_LL_PrepareReceive>

  return USBD_OK;
 8006e90:	2300      	movs	r3, #0
}
 8006e92:	4618      	mov	r0, r3
 8006e94:	3710      	adds	r7, #16
 8006e96:	46bd      	mov	sp, r7
 8006e98:	bd80      	pop	{r7, pc}

08006e9a <USBD_CtlContinueRx>:
* @param  len: length of data to be received
* @retval status
*/
USBD_StatusTypeDef USBD_CtlContinueRx(USBD_HandleTypeDef *pdev,
                                      uint8_t *pbuf, uint16_t len)
{
 8006e9a:	b580      	push	{r7, lr}
 8006e9c:	b084      	sub	sp, #16
 8006e9e:	af00      	add	r7, sp, #0
 8006ea0:	60f8      	str	r0, [r7, #12]
 8006ea2:	60b9      	str	r1, [r7, #8]
 8006ea4:	4613      	mov	r3, r2
 8006ea6:	80fb      	strh	r3, [r7, #6]
  USBD_LL_PrepareReceive(pdev, 0U, pbuf, len);
 8006ea8:	88fb      	ldrh	r3, [r7, #6]
 8006eaa:	68ba      	ldr	r2, [r7, #8]
 8006eac:	2100      	movs	r1, #0
 8006eae:	68f8      	ldr	r0, [r7, #12]
 8006eb0:	f000 fbc4 	bl	800763c <USBD_LL_PrepareReceive>

  return USBD_OK;
 8006eb4:	2300      	movs	r3, #0
}
 8006eb6:	4618      	mov	r0, r3
 8006eb8:	3710      	adds	r7, #16
 8006eba:	46bd      	mov	sp, r7
 8006ebc:	bd80      	pop	{r7, pc}

08006ebe <USBD_CtlSendStatus>:
*         send zero lzngth packet on the ctl pipe
* @param  pdev: device instance
* @retval status
*/
USBD_StatusTypeDef USBD_CtlSendStatus(USBD_HandleTypeDef *pdev)
{
 8006ebe:	b580      	push	{r7, lr}
 8006ec0:	b082      	sub	sp, #8
 8006ec2:	af00      	add	r7, sp, #0
 8006ec4:	6078      	str	r0, [r7, #4]
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_IN;
 8006ec6:	687b      	ldr	r3, [r7, #4]
 8006ec8:	2204      	movs	r2, #4
 8006eca:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294

  /* Start the transfer */
  USBD_LL_Transmit(pdev, 0x00U, NULL, 0U);
 8006ece:	2300      	movs	r3, #0
 8006ed0:	2200      	movs	r2, #0
 8006ed2:	2100      	movs	r1, #0
 8006ed4:	6878      	ldr	r0, [r7, #4]
 8006ed6:	f000 fb8e 	bl	80075f6 <USBD_LL_Transmit>

  return USBD_OK;
 8006eda:	2300      	movs	r3, #0
}
 8006edc:	4618      	mov	r0, r3
 8006ede:	3708      	adds	r7, #8
 8006ee0:	46bd      	mov	sp, r7
 8006ee2:	bd80      	pop	{r7, pc}

08006ee4 <USBD_CtlReceiveStatus>:
*         receive zero lzngth packet on the ctl pipe
* @param  pdev: device instance
* @retval status
*/
USBD_StatusTypeDef USBD_CtlReceiveStatus(USBD_HandleTypeDef *pdev)
{
 8006ee4:	b580      	push	{r7, lr}
 8006ee6:	b082      	sub	sp, #8
 8006ee8:	af00      	add	r7, sp, #0
 8006eea:	6078      	str	r0, [r7, #4]
  /* Set EP0 State */
  pdev->ep0_state = USBD_EP0_STATUS_OUT;
 8006eec:	687b      	ldr	r3, [r7, #4]
 8006eee:	2205      	movs	r2, #5
 8006ef0:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294

  /* Start the transfer */
  USBD_LL_PrepareReceive(pdev, 0U, NULL, 0U);
 8006ef4:	2300      	movs	r3, #0
 8006ef6:	2200      	movs	r2, #0
 8006ef8:	2100      	movs	r1, #0
 8006efa:	6878      	ldr	r0, [r7, #4]
 8006efc:	f000 fb9e 	bl	800763c <USBD_LL_PrepareReceive>

  return USBD_OK;
 8006f00:	2300      	movs	r3, #0
}
 8006f02:	4618      	mov	r0, r3
 8006f04:	3708      	adds	r7, #8
 8006f06:	46bd      	mov	sp, r7
 8006f08:	bd80      	pop	{r7, pc}
	...

08006f0c <MX_USB_DEVICE_Init>:
/**
  * Init USB device Library, add supported class and start the library
  * @retval None
  */
void MX_USB_DEVICE_Init(void)
{
 8006f0c:	b580      	push	{r7, lr}
 8006f0e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USB_DEVICE_Init_PreTreatment */

  /* USER CODE END USB_DEVICE_Init_PreTreatment */

  /* Init Device Library, add supported class and start the library. */
  if (USBD_Init(&hUsbDeviceFS, &FS_Desc, DEVICE_FS) != USBD_OK)
 8006f10:	2200      	movs	r2, #0
 8006f12:	4912      	ldr	r1, [pc, #72]	; (8006f5c <MX_USB_DEVICE_Init+0x50>)
 8006f14:	4812      	ldr	r0, [pc, #72]	; (8006f60 <MX_USB_DEVICE_Init+0x54>)
 8006f16:	f7fe ff5f 	bl	8005dd8 <USBD_Init>
 8006f1a:	4603      	mov	r3, r0
 8006f1c:	2b00      	cmp	r3, #0
 8006f1e:	d001      	beq.n	8006f24 <MX_USB_DEVICE_Init+0x18>
  {
    Error_Handler();
 8006f20:	f7f9 fa26 	bl	8000370 <Error_Handler>
  }
  if (USBD_RegisterClass(&hUsbDeviceFS, &USBD_CUSTOM_HID) != USBD_OK)
 8006f24:	490f      	ldr	r1, [pc, #60]	; (8006f64 <MX_USB_DEVICE_Init+0x58>)
 8006f26:	480e      	ldr	r0, [pc, #56]	; (8006f60 <MX_USB_DEVICE_Init+0x54>)
 8006f28:	f7fe ff81 	bl	8005e2e <USBD_RegisterClass>
 8006f2c:	4603      	mov	r3, r0
 8006f2e:	2b00      	cmp	r3, #0
 8006f30:	d001      	beq.n	8006f36 <MX_USB_DEVICE_Init+0x2a>
  {
    Error_Handler();
 8006f32:	f7f9 fa1d 	bl	8000370 <Error_Handler>
  }
  if (USBD_CUSTOM_HID_RegisterInterface(&hUsbDeviceFS, &USBD_CustomHID_fops_FS) != USBD_OK)
 8006f36:	490c      	ldr	r1, [pc, #48]	; (8006f68 <MX_USB_DEVICE_Init+0x5c>)
 8006f38:	4809      	ldr	r0, [pc, #36]	; (8006f60 <MX_USB_DEVICE_Init+0x54>)
 8006f3a:	f7fe ff37 	bl	8005dac <USBD_CUSTOM_HID_RegisterInterface>
 8006f3e:	4603      	mov	r3, r0
 8006f40:	2b00      	cmp	r3, #0
 8006f42:	d001      	beq.n	8006f48 <MX_USB_DEVICE_Init+0x3c>
  {
    Error_Handler();
 8006f44:	f7f9 fa14 	bl	8000370 <Error_Handler>
  }
  if (USBD_Start(&hUsbDeviceFS) != USBD_OK)
 8006f48:	4805      	ldr	r0, [pc, #20]	; (8006f60 <MX_USB_DEVICE_Init+0x54>)
 8006f4a:	f7fe ff89 	bl	8005e60 <USBD_Start>
 8006f4e:	4603      	mov	r3, r0
 8006f50:	2b00      	cmp	r3, #0
 8006f52:	d001      	beq.n	8006f58 <MX_USB_DEVICE_Init+0x4c>
  {
    Error_Handler();
 8006f54:	f7f9 fa0c 	bl	8000370 <Error_Handler>
  }

  /* USER CODE BEGIN USB_DEVICE_Init_PostTreatment */

  /* USER CODE END USB_DEVICE_Init_PostTreatment */
}
 8006f58:	bf00      	nop
 8006f5a:	bd80      	pop	{r7, pc}
 8006f5c:	20000114 	.word	0x20000114
 8006f60:	20000214 	.word	0x20000214
 8006f64:	2000000c 	.word	0x2000000c
 8006f68:	20000104 	.word	0x20000104

08006f6c <CUSTOM_HID_Init_FS>:
/**
  * @brief  Initializes the CUSTOM HID media low layer
  * @retval USBD_OK if all operations are OK else USBD_FAIL
  */
static int8_t CUSTOM_HID_Init_FS(void)
{
 8006f6c:	b480      	push	{r7}
 8006f6e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN 4 */
  return (USBD_OK);
 8006f70:	2300      	movs	r3, #0
  /* USER CODE END 4 */
}
 8006f72:	4618      	mov	r0, r3
 8006f74:	46bd      	mov	sp, r7
 8006f76:	bc80      	pop	{r7}
 8006f78:	4770      	bx	lr

08006f7a <CUSTOM_HID_DeInit_FS>:
/**
  * @brief  DeInitializes the CUSTOM HID media low layer
  * @retval USBD_OK if all operations are OK else USBD_FAIL
  */
static int8_t CUSTOM_HID_DeInit_FS(void)
{
 8006f7a:	b480      	push	{r7}
 8006f7c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN 5 */
  return (USBD_OK);
 8006f7e:	2300      	movs	r3, #0
  /* USER CODE END 5 */
}
 8006f80:	4618      	mov	r0, r3
 8006f82:	46bd      	mov	sp, r7
 8006f84:	bc80      	pop	{r7}
 8006f86:	4770      	bx	lr

08006f88 <CUSTOM_HID_OutEvent_FS>:
  * @param  event_idx: Event index
  * @param  state: Event state
  * @retval USBD_OK if all operations are OK else USBD_FAIL
  */
static int8_t CUSTOM_HID_OutEvent_FS(uint8_t event_idx, uint8_t state)
{
 8006f88:	b480      	push	{r7}
 8006f8a:	b085      	sub	sp, #20
 8006f8c:	af00      	add	r7, sp, #0
 8006f8e:	4603      	mov	r3, r0
 8006f90:	460a      	mov	r2, r1
 8006f92:	71fb      	strb	r3, [r7, #7]
 8006f94:	4613      	mov	r3, r2
 8006f96:	71bb      	strb	r3, [r7, #6]
  /* USER CODE BEGIN 6 */
	USBD_CUSTOM_HID_HandleTypeDef *hhid = (USBD_CUSTOM_HID_HandleTypeDef*)hUsbDeviceFS.pClassData;
 8006f98:	4b0f      	ldr	r3, [pc, #60]	; (8006fd8 <CUSTOM_HID_OutEvent_FS+0x50>)
 8006f9a:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 8006f9e:	60bb      	str	r3, [r7, #8]
	for(int i = 0; i < 65; i++)
 8006fa0:	2300      	movs	r3, #0
 8006fa2:	60fb      	str	r3, [r7, #12]
 8006fa4:	e00b      	b.n	8006fbe <CUSTOM_HID_OutEvent_FS+0x36>
	{
		USB_RX_Buffer[i] = hhid->Report_buf[i];
 8006fa6:	68ba      	ldr	r2, [r7, #8]
 8006fa8:	68fb      	ldr	r3, [r7, #12]
 8006faa:	4413      	add	r3, r2
 8006fac:	7819      	ldrb	r1, [r3, #0]
 8006fae:	4a0b      	ldr	r2, [pc, #44]	; (8006fdc <CUSTOM_HID_OutEvent_FS+0x54>)
 8006fb0:	68fb      	ldr	r3, [r7, #12]
 8006fb2:	4413      	add	r3, r2
 8006fb4:	460a      	mov	r2, r1
 8006fb6:	701a      	strb	r2, [r3, #0]
	for(int i = 0; i < 65; i++)
 8006fb8:	68fb      	ldr	r3, [r7, #12]
 8006fba:	3301      	adds	r3, #1
 8006fbc:	60fb      	str	r3, [r7, #12]
 8006fbe:	68fb      	ldr	r3, [r7, #12]
 8006fc0:	2b40      	cmp	r3, #64	; 0x40
 8006fc2:	ddf0      	ble.n	8006fa6 <CUSTOM_HID_OutEvent_FS+0x1e>
	}

	USB_packet_enable = 1;
 8006fc4:	4b06      	ldr	r3, [pc, #24]	; (8006fe0 <CUSTOM_HID_OutEvent_FS+0x58>)
 8006fc6:	2201      	movs	r2, #1
 8006fc8:	601a      	str	r2, [r3, #0]

	return (USBD_OK);
 8006fca:	2300      	movs	r3, #0
  /* USER CODE END 6 */
}
 8006fcc:	4618      	mov	r0, r3
 8006fce:	3714      	adds	r7, #20
 8006fd0:	46bd      	mov	sp, r7
 8006fd2:	bc80      	pop	{r7}
 8006fd4:	4770      	bx	lr
 8006fd6:	bf00      	nop
 8006fd8:	20000214 	.word	0x20000214
 8006fdc:	20000180 	.word	0x20000180
 8006fe0:	200001c4 	.word	0x200001c4

08006fe4 <USBD_FS_DeviceDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_DeviceDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 8006fe4:	b480      	push	{r7}
 8006fe6:	b083      	sub	sp, #12
 8006fe8:	af00      	add	r7, sp, #0
 8006fea:	4603      	mov	r3, r0
 8006fec:	6039      	str	r1, [r7, #0]
 8006fee:	71fb      	strb	r3, [r7, #7]
  UNUSED(speed);
  *length = sizeof(USBD_FS_DeviceDesc);
 8006ff0:	683b      	ldr	r3, [r7, #0]
 8006ff2:	2212      	movs	r2, #18
 8006ff4:	801a      	strh	r2, [r3, #0]
  return USBD_FS_DeviceDesc;
 8006ff6:	4b03      	ldr	r3, [pc, #12]	; (8007004 <USBD_FS_DeviceDescriptor+0x20>)
}
 8006ff8:	4618      	mov	r0, r3
 8006ffa:	370c      	adds	r7, #12
 8006ffc:	46bd      	mov	sp, r7
 8006ffe:	bc80      	pop	{r7}
 8007000:	4770      	bx	lr
 8007002:	bf00      	nop
 8007004:	20000130 	.word	0x20000130

08007008 <USBD_FS_LangIDStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_LangIDStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 8007008:	b480      	push	{r7}
 800700a:	b083      	sub	sp, #12
 800700c:	af00      	add	r7, sp, #0
 800700e:	4603      	mov	r3, r0
 8007010:	6039      	str	r1, [r7, #0]
 8007012:	71fb      	strb	r3, [r7, #7]
  UNUSED(speed);
  *length = sizeof(USBD_LangIDDesc);
 8007014:	683b      	ldr	r3, [r7, #0]
 8007016:	2204      	movs	r2, #4
 8007018:	801a      	strh	r2, [r3, #0]
  return USBD_LangIDDesc;
 800701a:	4b03      	ldr	r3, [pc, #12]	; (8007028 <USBD_FS_LangIDStrDescriptor+0x20>)
}
 800701c:	4618      	mov	r0, r3
 800701e:	370c      	adds	r7, #12
 8007020:	46bd      	mov	sp, r7
 8007022:	bc80      	pop	{r7}
 8007024:	4770      	bx	lr
 8007026:	bf00      	nop
 8007028:	20000144 	.word	0x20000144

0800702c <USBD_FS_ProductStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_ProductStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 800702c:	b580      	push	{r7, lr}
 800702e:	b082      	sub	sp, #8
 8007030:	af00      	add	r7, sp, #0
 8007032:	4603      	mov	r3, r0
 8007034:	6039      	str	r1, [r7, #0]
 8007036:	71fb      	strb	r3, [r7, #7]
  if(speed == 0)
 8007038:	79fb      	ldrb	r3, [r7, #7]
 800703a:	2b00      	cmp	r3, #0
 800703c:	d105      	bne.n	800704a <USBD_FS_ProductStrDescriptor+0x1e>
  {
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 800703e:	683a      	ldr	r2, [r7, #0]
 8007040:	4907      	ldr	r1, [pc, #28]	; (8007060 <USBD_FS_ProductStrDescriptor+0x34>)
 8007042:	4808      	ldr	r0, [pc, #32]	; (8007064 <USBD_FS_ProductStrDescriptor+0x38>)
 8007044:	f7ff fe84 	bl	8006d50 <USBD_GetString>
 8007048:	e004      	b.n	8007054 <USBD_FS_ProductStrDescriptor+0x28>
  }
  else
  {
    USBD_GetString((uint8_t *)USBD_PRODUCT_STRING_FS, USBD_StrDesc, length);
 800704a:	683a      	ldr	r2, [r7, #0]
 800704c:	4904      	ldr	r1, [pc, #16]	; (8007060 <USBD_FS_ProductStrDescriptor+0x34>)
 800704e:	4805      	ldr	r0, [pc, #20]	; (8007064 <USBD_FS_ProductStrDescriptor+0x38>)
 8007050:	f7ff fe7e 	bl	8006d50 <USBD_GetString>
  }
  return USBD_StrDesc;
 8007054:	4b02      	ldr	r3, [pc, #8]	; (8007060 <USBD_FS_ProductStrDescriptor+0x34>)
}
 8007056:	4618      	mov	r0, r3
 8007058:	3708      	adds	r7, #8
 800705a:	46bd      	mov	sp, r7
 800705c:	bd80      	pop	{r7, pc}
 800705e:	bf00      	nop
 8007060:	200004d8 	.word	0x200004d8
 8007064:	0800779c 	.word	0x0800779c

08007068 <USBD_FS_ManufacturerStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_ManufacturerStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 8007068:	b580      	push	{r7, lr}
 800706a:	b082      	sub	sp, #8
 800706c:	af00      	add	r7, sp, #0
 800706e:	4603      	mov	r3, r0
 8007070:	6039      	str	r1, [r7, #0]
 8007072:	71fb      	strb	r3, [r7, #7]
  UNUSED(speed);
  USBD_GetString((uint8_t *)USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
 8007074:	683a      	ldr	r2, [r7, #0]
 8007076:	4904      	ldr	r1, [pc, #16]	; (8007088 <USBD_FS_ManufacturerStrDescriptor+0x20>)
 8007078:	4804      	ldr	r0, [pc, #16]	; (800708c <USBD_FS_ManufacturerStrDescriptor+0x24>)
 800707a:	f7ff fe69 	bl	8006d50 <USBD_GetString>
  return USBD_StrDesc;
 800707e:	4b02      	ldr	r3, [pc, #8]	; (8007088 <USBD_FS_ManufacturerStrDescriptor+0x20>)
}
 8007080:	4618      	mov	r0, r3
 8007082:	3708      	adds	r7, #8
 8007084:	46bd      	mov	sp, r7
 8007086:	bd80      	pop	{r7, pc}
 8007088:	200004d8 	.word	0x200004d8
 800708c:	080077bc 	.word	0x080077bc

08007090 <USBD_FS_SerialStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_SerialStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 8007090:	b580      	push	{r7, lr}
 8007092:	b082      	sub	sp, #8
 8007094:	af00      	add	r7, sp, #0
 8007096:	4603      	mov	r3, r0
 8007098:	6039      	str	r1, [r7, #0]
 800709a:	71fb      	strb	r3, [r7, #7]
  UNUSED(speed);
  *length = USB_SIZ_STRING_SERIAL;
 800709c:	683b      	ldr	r3, [r7, #0]
 800709e:	221a      	movs	r2, #26
 80070a0:	801a      	strh	r2, [r3, #0]

  /* Update the serial number string descriptor with the data from the unique
   * ID */
  Get_SerialNum();
 80070a2:	f000 f843 	bl	800712c <Get_SerialNum>
  /* USER CODE BEGIN USBD_FS_SerialStrDescriptor */

  /* USER CODE END USBD_FS_SerialStrDescriptor */
  return (uint8_t *) USBD_StringSerial;
 80070a6:	4b02      	ldr	r3, [pc, #8]	; (80070b0 <USBD_FS_SerialStrDescriptor+0x20>)
}
 80070a8:	4618      	mov	r0, r3
 80070aa:	3708      	adds	r7, #8
 80070ac:	46bd      	mov	sp, r7
 80070ae:	bd80      	pop	{r7, pc}
 80070b0:	20000148 	.word	0x20000148

080070b4 <USBD_FS_ConfigStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_ConfigStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 80070b4:	b580      	push	{r7, lr}
 80070b6:	b082      	sub	sp, #8
 80070b8:	af00      	add	r7, sp, #0
 80070ba:	4603      	mov	r3, r0
 80070bc:	6039      	str	r1, [r7, #0]
 80070be:	71fb      	strb	r3, [r7, #7]
  if(speed == USBD_SPEED_HIGH)
 80070c0:	79fb      	ldrb	r3, [r7, #7]
 80070c2:	2b00      	cmp	r3, #0
 80070c4:	d105      	bne.n	80070d2 <USBD_FS_ConfigStrDescriptor+0x1e>
  {
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 80070c6:	683a      	ldr	r2, [r7, #0]
 80070c8:	4907      	ldr	r1, [pc, #28]	; (80070e8 <USBD_FS_ConfigStrDescriptor+0x34>)
 80070ca:	4808      	ldr	r0, [pc, #32]	; (80070ec <USBD_FS_ConfigStrDescriptor+0x38>)
 80070cc:	f7ff fe40 	bl	8006d50 <USBD_GetString>
 80070d0:	e004      	b.n	80070dc <USBD_FS_ConfigStrDescriptor+0x28>
  }
  else
  {
    USBD_GetString((uint8_t *)USBD_CONFIGURATION_STRING_FS, USBD_StrDesc, length);
 80070d2:	683a      	ldr	r2, [r7, #0]
 80070d4:	4904      	ldr	r1, [pc, #16]	; (80070e8 <USBD_FS_ConfigStrDescriptor+0x34>)
 80070d6:	4805      	ldr	r0, [pc, #20]	; (80070ec <USBD_FS_ConfigStrDescriptor+0x38>)
 80070d8:	f7ff fe3a 	bl	8006d50 <USBD_GetString>
  }
  return USBD_StrDesc;
 80070dc:	4b02      	ldr	r3, [pc, #8]	; (80070e8 <USBD_FS_ConfigStrDescriptor+0x34>)
}
 80070de:	4618      	mov	r0, r3
 80070e0:	3708      	adds	r7, #8
 80070e2:	46bd      	mov	sp, r7
 80070e4:	bd80      	pop	{r7, pc}
 80070e6:	bf00      	nop
 80070e8:	200004d8 	.word	0x200004d8
 80070ec:	080077d0 	.word	0x080077d0

080070f0 <USBD_FS_InterfaceStrDescriptor>:
  * @param  speed : Current device speed
  * @param  length : Pointer to data length variable
  * @retval Pointer to descriptor buffer
  */
uint8_t * USBD_FS_InterfaceStrDescriptor(USBD_SpeedTypeDef speed, uint16_t *length)
{
 80070f0:	b580      	push	{r7, lr}
 80070f2:	b082      	sub	sp, #8
 80070f4:	af00      	add	r7, sp, #0
 80070f6:	4603      	mov	r3, r0
 80070f8:	6039      	str	r1, [r7, #0]
 80070fa:	71fb      	strb	r3, [r7, #7]
  if(speed == 0)
 80070fc:	79fb      	ldrb	r3, [r7, #7]
 80070fe:	2b00      	cmp	r3, #0
 8007100:	d105      	bne.n	800710e <USBD_FS_InterfaceStrDescriptor+0x1e>
  {
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 8007102:	683a      	ldr	r2, [r7, #0]
 8007104:	4907      	ldr	r1, [pc, #28]	; (8007124 <USBD_FS_InterfaceStrDescriptor+0x34>)
 8007106:	4808      	ldr	r0, [pc, #32]	; (8007128 <USBD_FS_InterfaceStrDescriptor+0x38>)
 8007108:	f7ff fe22 	bl	8006d50 <USBD_GetString>
 800710c:	e004      	b.n	8007118 <USBD_FS_InterfaceStrDescriptor+0x28>
  }
  else
  {
    USBD_GetString((uint8_t *)USBD_INTERFACE_STRING_FS, USBD_StrDesc, length);
 800710e:	683a      	ldr	r2, [r7, #0]
 8007110:	4904      	ldr	r1, [pc, #16]	; (8007124 <USBD_FS_InterfaceStrDescriptor+0x34>)
 8007112:	4805      	ldr	r0, [pc, #20]	; (8007128 <USBD_FS_InterfaceStrDescriptor+0x38>)
 8007114:	f7ff fe1c 	bl	8006d50 <USBD_GetString>
  }
  return USBD_StrDesc;
 8007118:	4b02      	ldr	r3, [pc, #8]	; (8007124 <USBD_FS_InterfaceStrDescriptor+0x34>)
}
 800711a:	4618      	mov	r0, r3
 800711c:	3708      	adds	r7, #8
 800711e:	46bd      	mov	sp, r7
 8007120:	bd80      	pop	{r7, pc}
 8007122:	bf00      	nop
 8007124:	200004d8 	.word	0x200004d8
 8007128:	080077e4 	.word	0x080077e4

0800712c <Get_SerialNum>:
  * @brief  Create the serial number string descriptor
  * @param  None
  * @retval None
  */
static void Get_SerialNum(void)
{
 800712c:	b580      	push	{r7, lr}
 800712e:	b084      	sub	sp, #16
 8007130:	af00      	add	r7, sp, #0
  uint32_t deviceserial0, deviceserial1, deviceserial2;

  deviceserial0 = *(uint32_t *) DEVICE_ID1;
 8007132:	4b0f      	ldr	r3, [pc, #60]	; (8007170 <Get_SerialNum+0x44>)
 8007134:	681b      	ldr	r3, [r3, #0]
 8007136:	60fb      	str	r3, [r7, #12]
  deviceserial1 = *(uint32_t *) DEVICE_ID2;
 8007138:	4b0e      	ldr	r3, [pc, #56]	; (8007174 <Get_SerialNum+0x48>)
 800713a:	681b      	ldr	r3, [r3, #0]
 800713c:	60bb      	str	r3, [r7, #8]
  deviceserial2 = *(uint32_t *) DEVICE_ID3;
 800713e:	4b0e      	ldr	r3, [pc, #56]	; (8007178 <Get_SerialNum+0x4c>)
 8007140:	681b      	ldr	r3, [r3, #0]
 8007142:	607b      	str	r3, [r7, #4]

  deviceserial0 += deviceserial2;
 8007144:	68fa      	ldr	r2, [r7, #12]
 8007146:	687b      	ldr	r3, [r7, #4]
 8007148:	4413      	add	r3, r2
 800714a:	60fb      	str	r3, [r7, #12]

  if (deviceserial0 != 0)
 800714c:	68fb      	ldr	r3, [r7, #12]
 800714e:	2b00      	cmp	r3, #0
 8007150:	d009      	beq.n	8007166 <Get_SerialNum+0x3a>
  {
    IntToUnicode(deviceserial0, &USBD_StringSerial[2], 8);
 8007152:	2208      	movs	r2, #8
 8007154:	4909      	ldr	r1, [pc, #36]	; (800717c <Get_SerialNum+0x50>)
 8007156:	68f8      	ldr	r0, [r7, #12]
 8007158:	f000 f814 	bl	8007184 <IntToUnicode>
    IntToUnicode(deviceserial1, &USBD_StringSerial[18], 4);
 800715c:	2204      	movs	r2, #4
 800715e:	4908      	ldr	r1, [pc, #32]	; (8007180 <Get_SerialNum+0x54>)
 8007160:	68b8      	ldr	r0, [r7, #8]
 8007162:	f000 f80f 	bl	8007184 <IntToUnicode>
  }
}
 8007166:	bf00      	nop
 8007168:	3710      	adds	r7, #16
 800716a:	46bd      	mov	sp, r7
 800716c:	bd80      	pop	{r7, pc}
 800716e:	bf00      	nop
 8007170:	1ffff7e8 	.word	0x1ffff7e8
 8007174:	1ffff7ec 	.word	0x1ffff7ec
 8007178:	1ffff7f0 	.word	0x1ffff7f0
 800717c:	2000014a 	.word	0x2000014a
 8007180:	2000015a 	.word	0x2000015a

08007184 <IntToUnicode>:
  * @param  pbuf: pointer to the buffer
  * @param  len: buffer length
  * @retval None
  */
static void IntToUnicode(uint32_t value, uint8_t * pbuf, uint8_t len)
{
 8007184:	b480      	push	{r7}
 8007186:	b087      	sub	sp, #28
 8007188:	af00      	add	r7, sp, #0
 800718a:	60f8      	str	r0, [r7, #12]
 800718c:	60b9      	str	r1, [r7, #8]
 800718e:	4613      	mov	r3, r2
 8007190:	71fb      	strb	r3, [r7, #7]
  uint8_t idx = 0;
 8007192:	2300      	movs	r3, #0
 8007194:	75fb      	strb	r3, [r7, #23]

  for (idx = 0; idx < len; idx++)
 8007196:	2300      	movs	r3, #0
 8007198:	75fb      	strb	r3, [r7, #23]
 800719a:	e027      	b.n	80071ec <IntToUnicode+0x68>
  {
    if (((value >> 28)) < 0xA)
 800719c:	68fb      	ldr	r3, [r7, #12]
 800719e:	0f1b      	lsrs	r3, r3, #28
 80071a0:	2b09      	cmp	r3, #9
 80071a2:	d80b      	bhi.n	80071bc <IntToUnicode+0x38>
    {
      pbuf[2 * idx] = (value >> 28) + '0';
 80071a4:	68fb      	ldr	r3, [r7, #12]
 80071a6:	0f1b      	lsrs	r3, r3, #28
 80071a8:	b2da      	uxtb	r2, r3
 80071aa:	7dfb      	ldrb	r3, [r7, #23]
 80071ac:	005b      	lsls	r3, r3, #1
 80071ae:	4619      	mov	r1, r3
 80071b0:	68bb      	ldr	r3, [r7, #8]
 80071b2:	440b      	add	r3, r1
 80071b4:	3230      	adds	r2, #48	; 0x30
 80071b6:	b2d2      	uxtb	r2, r2
 80071b8:	701a      	strb	r2, [r3, #0]
 80071ba:	e00a      	b.n	80071d2 <IntToUnicode+0x4e>
    }
    else
    {
      pbuf[2 * idx] = (value >> 28) + 'A' - 10;
 80071bc:	68fb      	ldr	r3, [r7, #12]
 80071be:	0f1b      	lsrs	r3, r3, #28
 80071c0:	b2da      	uxtb	r2, r3
 80071c2:	7dfb      	ldrb	r3, [r7, #23]
 80071c4:	005b      	lsls	r3, r3, #1
 80071c6:	4619      	mov	r1, r3
 80071c8:	68bb      	ldr	r3, [r7, #8]
 80071ca:	440b      	add	r3, r1
 80071cc:	3237      	adds	r2, #55	; 0x37
 80071ce:	b2d2      	uxtb	r2, r2
 80071d0:	701a      	strb	r2, [r3, #0]
    }

    value = value << 4;
 80071d2:	68fb      	ldr	r3, [r7, #12]
 80071d4:	011b      	lsls	r3, r3, #4
 80071d6:	60fb      	str	r3, [r7, #12]

    pbuf[2 * idx + 1] = 0;
 80071d8:	7dfb      	ldrb	r3, [r7, #23]
 80071da:	005b      	lsls	r3, r3, #1
 80071dc:	3301      	adds	r3, #1
 80071de:	68ba      	ldr	r2, [r7, #8]
 80071e0:	4413      	add	r3, r2
 80071e2:	2200      	movs	r2, #0
 80071e4:	701a      	strb	r2, [r3, #0]
  for (idx = 0; idx < len; idx++)
 80071e6:	7dfb      	ldrb	r3, [r7, #23]
 80071e8:	3301      	adds	r3, #1
 80071ea:	75fb      	strb	r3, [r7, #23]
 80071ec:	7dfa      	ldrb	r2, [r7, #23]
 80071ee:	79fb      	ldrb	r3, [r7, #7]
 80071f0:	429a      	cmp	r2, r3
 80071f2:	d3d3      	bcc.n	800719c <IntToUnicode+0x18>
  }
}
 80071f4:	bf00      	nop
 80071f6:	bf00      	nop
 80071f8:	371c      	adds	r7, #28
 80071fa:	46bd      	mov	sp, r7
 80071fc:	bc80      	pop	{r7}
 80071fe:	4770      	bx	lr

08007200 <HAL_PCD_MspInit>:
                       LL Driver Callbacks (PCD -> USB Device Library)
*******************************************************************************/
/* MSP Init */

void HAL_PCD_MspInit(PCD_HandleTypeDef* pcdHandle)
{
 8007200:	b580      	push	{r7, lr}
 8007202:	b084      	sub	sp, #16
 8007204:	af00      	add	r7, sp, #0
 8007206:	6078      	str	r0, [r7, #4]
  if(pcdHandle->Instance==USB)
 8007208:	687b      	ldr	r3, [r7, #4]
 800720a:	681b      	ldr	r3, [r3, #0]
 800720c:	4a0d      	ldr	r2, [pc, #52]	; (8007244 <HAL_PCD_MspInit+0x44>)
 800720e:	4293      	cmp	r3, r2
 8007210:	d113      	bne.n	800723a <HAL_PCD_MspInit+0x3a>
  {
  /* USER CODE BEGIN USB_MspInit 0 */

  /* USER CODE END USB_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USB_CLK_ENABLE();
 8007212:	4b0d      	ldr	r3, [pc, #52]	; (8007248 <HAL_PCD_MspInit+0x48>)
 8007214:	69db      	ldr	r3, [r3, #28]
 8007216:	4a0c      	ldr	r2, [pc, #48]	; (8007248 <HAL_PCD_MspInit+0x48>)
 8007218:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800721c:	61d3      	str	r3, [r2, #28]
 800721e:	4b0a      	ldr	r3, [pc, #40]	; (8007248 <HAL_PCD_MspInit+0x48>)
 8007220:	69db      	ldr	r3, [r3, #28]
 8007222:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8007226:	60fb      	str	r3, [r7, #12]
 8007228:	68fb      	ldr	r3, [r7, #12]

    /* Peripheral interrupt init */
    HAL_NVIC_SetPriority(USB_LP_CAN1_RX0_IRQn, 0, 0);
 800722a:	2200      	movs	r2, #0
 800722c:	2100      	movs	r1, #0
 800722e:	2014      	movs	r0, #20
 8007230:	f7f9 fa91 	bl	8000756 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USB_LP_CAN1_RX0_IRQn);
 8007234:	2014      	movs	r0, #20
 8007236:	f7f9 faaa 	bl	800078e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USB_MspInit 1 */

  /* USER CODE END USB_MspInit 1 */
  }
}
 800723a:	bf00      	nop
 800723c:	3710      	adds	r7, #16
 800723e:	46bd      	mov	sp, r7
 8007240:	bd80      	pop	{r7, pc}
 8007242:	bf00      	nop
 8007244:	40005c00 	.word	0x40005c00
 8007248:	40021000 	.word	0x40021000

0800724c <HAL_PCD_SetupStageCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SetupStageCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 800724c:	b580      	push	{r7, lr}
 800724e:	b082      	sub	sp, #8
 8007250:	af00      	add	r7, sp, #0
 8007252:	6078      	str	r0, [r7, #4]
  USBD_LL_SetupStage((USBD_HandleTypeDef*)hpcd->pData, (uint8_t *)hpcd->Setup);
 8007254:	687b      	ldr	r3, [r7, #4]
 8007256:	f8d3 22e8 	ldr.w	r2, [r3, #744]	; 0x2e8
 800725a:	687b      	ldr	r3, [r7, #4]
 800725c:	f503 732c 	add.w	r3, r3, #688	; 0x2b0
 8007260:	4619      	mov	r1, r3
 8007262:	4610      	mov	r0, r2
 8007264:	f7fe fe44 	bl	8005ef0 <USBD_LL_SetupStage>
}
 8007268:	bf00      	nop
 800726a:	3708      	adds	r7, #8
 800726c:	46bd      	mov	sp, r7
 800726e:	bd80      	pop	{r7, pc}

08007270 <HAL_PCD_DataOutStageCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataOutStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 8007270:	b580      	push	{r7, lr}
 8007272:	b082      	sub	sp, #8
 8007274:	af00      	add	r7, sp, #0
 8007276:	6078      	str	r0, [r7, #4]
 8007278:	460b      	mov	r3, r1
 800727a:	70fb      	strb	r3, [r7, #3]
  USBD_LL_DataOutStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->OUT_ep[epnum].xfer_buff);
 800727c:	687b      	ldr	r3, [r7, #4]
 800727e:	f8d3 02e8 	ldr.w	r0, [r3, #744]	; 0x2e8
 8007282:	78fa      	ldrb	r2, [r7, #3]
 8007284:	6879      	ldr	r1, [r7, #4]
 8007286:	4613      	mov	r3, r2
 8007288:	009b      	lsls	r3, r3, #2
 800728a:	4413      	add	r3, r2
 800728c:	00db      	lsls	r3, r3, #3
 800728e:	440b      	add	r3, r1
 8007290:	f503 73be 	add.w	r3, r3, #380	; 0x17c
 8007294:	681a      	ldr	r2, [r3, #0]
 8007296:	78fb      	ldrb	r3, [r7, #3]
 8007298:	4619      	mov	r1, r3
 800729a:	f7fe fe76 	bl	8005f8a <USBD_LL_DataOutStage>
}
 800729e:	bf00      	nop
 80072a0:	3708      	adds	r7, #8
 80072a2:	46bd      	mov	sp, r7
 80072a4:	bd80      	pop	{r7, pc}

080072a6 <HAL_PCD_DataInStageCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#else
void HAL_PCD_DataInStageCallback(PCD_HandleTypeDef *hpcd, uint8_t epnum)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 80072a6:	b580      	push	{r7, lr}
 80072a8:	b082      	sub	sp, #8
 80072aa:	af00      	add	r7, sp, #0
 80072ac:	6078      	str	r0, [r7, #4]
 80072ae:	460b      	mov	r3, r1
 80072b0:	70fb      	strb	r3, [r7, #3]
  USBD_LL_DataInStage((USBD_HandleTypeDef*)hpcd->pData, epnum, hpcd->IN_ep[epnum].xfer_buff);
 80072b2:	687b      	ldr	r3, [r7, #4]
 80072b4:	f8d3 02e8 	ldr.w	r0, [r3, #744]	; 0x2e8
 80072b8:	78fa      	ldrb	r2, [r7, #3]
 80072ba:	6879      	ldr	r1, [r7, #4]
 80072bc:	4613      	mov	r3, r2
 80072be:	009b      	lsls	r3, r3, #2
 80072c0:	4413      	add	r3, r2
 80072c2:	00db      	lsls	r3, r3, #3
 80072c4:	440b      	add	r3, r1
 80072c6:	333c      	adds	r3, #60	; 0x3c
 80072c8:	681a      	ldr	r2, [r3, #0]
 80072ca:	78fb      	ldrb	r3, [r7, #3]
 80072cc:	4619      	mov	r1, r3
 80072ce:	f7fe fecd 	bl	800606c <USBD_LL_DataInStage>
}
 80072d2:	bf00      	nop
 80072d4:	3708      	adds	r7, #8
 80072d6:	46bd      	mov	sp, r7
 80072d8:	bd80      	pop	{r7, pc}

080072da <HAL_PCD_SOFCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SOFCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 80072da:	b580      	push	{r7, lr}
 80072dc:	b082      	sub	sp, #8
 80072de:	af00      	add	r7, sp, #0
 80072e0:	6078      	str	r0, [r7, #4]
  USBD_LL_SOF((USBD_HandleTypeDef*)hpcd->pData);
 80072e2:	687b      	ldr	r3, [r7, #4]
 80072e4:	f8d3 32e8 	ldr.w	r3, [r3, #744]	; 0x2e8
 80072e8:	4618      	mov	r0, r3
 80072ea:	f7fe ffdd 	bl	80062a8 <USBD_LL_SOF>
}
 80072ee:	bf00      	nop
 80072f0:	3708      	adds	r7, #8
 80072f2:	46bd      	mov	sp, r7
 80072f4:	bd80      	pop	{r7, pc}

080072f6 <HAL_PCD_ResetCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ResetCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 80072f6:	b580      	push	{r7, lr}
 80072f8:	b084      	sub	sp, #16
 80072fa:	af00      	add	r7, sp, #0
 80072fc:	6078      	str	r0, [r7, #4]
  USBD_SpeedTypeDef speed = USBD_SPEED_FULL;
 80072fe:	2301      	movs	r3, #1
 8007300:	73fb      	strb	r3, [r7, #15]

  if ( hpcd->Init.speed != PCD_SPEED_FULL)
 8007302:	687b      	ldr	r3, [r7, #4]
 8007304:	689b      	ldr	r3, [r3, #8]
 8007306:	2b02      	cmp	r3, #2
 8007308:	d001      	beq.n	800730e <HAL_PCD_ResetCallback+0x18>
  {
    Error_Handler();
 800730a:	f7f9 f831 	bl	8000370 <Error_Handler>
  }
    /* Set Speed. */
  USBD_LL_SetSpeed((USBD_HandleTypeDef*)hpcd->pData, speed);
 800730e:	687b      	ldr	r3, [r7, #4]
 8007310:	f8d3 32e8 	ldr.w	r3, [r3, #744]	; 0x2e8
 8007314:	7bfa      	ldrb	r2, [r7, #15]
 8007316:	4611      	mov	r1, r2
 8007318:	4618      	mov	r0, r3
 800731a:	f7fe ff8d 	bl	8006238 <USBD_LL_SetSpeed>

  /* Reset Device. */
  USBD_LL_Reset((USBD_HandleTypeDef*)hpcd->pData);
 800731e:	687b      	ldr	r3, [r7, #4]
 8007320:	f8d3 32e8 	ldr.w	r3, [r3, #744]	; 0x2e8
 8007324:	4618      	mov	r0, r3
 8007326:	f7fe ff46 	bl	80061b6 <USBD_LL_Reset>
}
 800732a:	bf00      	nop
 800732c:	3710      	adds	r7, #16
 800732e:	46bd      	mov	sp, r7
 8007330:	bd80      	pop	{r7, pc}
	...

08007334 <HAL_PCD_SuspendCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_SuspendCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 8007334:	b580      	push	{r7, lr}
 8007336:	b082      	sub	sp, #8
 8007338:	af00      	add	r7, sp, #0
 800733a:	6078      	str	r0, [r7, #4]
  /* Inform USB library that core enters in suspend Mode. */
  USBD_LL_Suspend((USBD_HandleTypeDef*)hpcd->pData);
 800733c:	687b      	ldr	r3, [r7, #4]
 800733e:	f8d3 32e8 	ldr.w	r3, [r3, #744]	; 0x2e8
 8007342:	4618      	mov	r0, r3
 8007344:	f7fe ff87 	bl	8006256 <USBD_LL_Suspend>
  /* Enter in STOP mode. */
  /* USER CODE BEGIN 2 */
  if (hpcd->Init.low_power_enable)
 8007348:	687b      	ldr	r3, [r7, #4]
 800734a:	699b      	ldr	r3, [r3, #24]
 800734c:	2b00      	cmp	r3, #0
 800734e:	d005      	beq.n	800735c <HAL_PCD_SuspendCallback+0x28>
  {
    /* Set SLEEPDEEP bit and SleepOnExit of Cortex System Control Register. */
    SCB->SCR |= (uint32_t)((uint32_t)(SCB_SCR_SLEEPDEEP_Msk | SCB_SCR_SLEEPONEXIT_Msk));
 8007350:	4b04      	ldr	r3, [pc, #16]	; (8007364 <HAL_PCD_SuspendCallback+0x30>)
 8007352:	691b      	ldr	r3, [r3, #16]
 8007354:	4a03      	ldr	r2, [pc, #12]	; (8007364 <HAL_PCD_SuspendCallback+0x30>)
 8007356:	f043 0306 	orr.w	r3, r3, #6
 800735a:	6113      	str	r3, [r2, #16]
  }
  /* USER CODE END 2 */
}
 800735c:	bf00      	nop
 800735e:	3708      	adds	r7, #8
 8007360:	46bd      	mov	sp, r7
 8007362:	bd80      	pop	{r7, pc}
 8007364:	e000ed00 	.word	0xe000ed00

08007368 <HAL_PCD_ResumeCallback>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCD_ResumeCallback(PCD_HandleTypeDef *hpcd)
#else
void HAL_PCD_ResumeCallback(PCD_HandleTypeDef *hpcd)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 8007368:	b580      	push	{r7, lr}
 800736a:	b082      	sub	sp, #8
 800736c:	af00      	add	r7, sp, #0
 800736e:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN 3 */

  /* USER CODE END 3 */
  USBD_LL_Resume((USBD_HandleTypeDef*)hpcd->pData);
 8007370:	687b      	ldr	r3, [r7, #4]
 8007372:	f8d3 32e8 	ldr.w	r3, [r3, #744]	; 0x2e8
 8007376:	4618      	mov	r0, r3
 8007378:	f7fe ff81 	bl	800627e <USBD_LL_Resume>
}
 800737c:	bf00      	nop
 800737e:	3708      	adds	r7, #8
 8007380:	46bd      	mov	sp, r7
 8007382:	bd80      	pop	{r7, pc}

08007384 <USBD_LL_Init>:
  * @brief  Initializes the low level portion of the device driver.
  * @param  pdev: Device handle
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_Init(USBD_HandleTypeDef *pdev)
{
 8007384:	b580      	push	{r7, lr}
 8007386:	b082      	sub	sp, #8
 8007388:	af00      	add	r7, sp, #0
 800738a:	6078      	str	r0, [r7, #4]
  /* Init USB Ip. */
  /* Link the driver to the stack. */
  hpcd_USB_FS.pData = pdev;
 800738c:	4a23      	ldr	r2, [pc, #140]	; (800741c <USBD_LL_Init+0x98>)
 800738e:	687b      	ldr	r3, [r7, #4]
 8007390:	f8c2 32e8 	str.w	r3, [r2, #744]	; 0x2e8
  pdev->pData = &hpcd_USB_FS;
 8007394:	687b      	ldr	r3, [r7, #4]
 8007396:	4a21      	ldr	r2, [pc, #132]	; (800741c <USBD_LL_Init+0x98>)
 8007398:	f8c3 22c0 	str.w	r2, [r3, #704]	; 0x2c0

  hpcd_USB_FS.Instance = USB;
 800739c:	4b1f      	ldr	r3, [pc, #124]	; (800741c <USBD_LL_Init+0x98>)
 800739e:	4a20      	ldr	r2, [pc, #128]	; (8007420 <USBD_LL_Init+0x9c>)
 80073a0:	601a      	str	r2, [r3, #0]
  hpcd_USB_FS.Init.dev_endpoints = 8;
 80073a2:	4b1e      	ldr	r3, [pc, #120]	; (800741c <USBD_LL_Init+0x98>)
 80073a4:	2208      	movs	r2, #8
 80073a6:	605a      	str	r2, [r3, #4]
  hpcd_USB_FS.Init.speed = PCD_SPEED_FULL;
 80073a8:	4b1c      	ldr	r3, [pc, #112]	; (800741c <USBD_LL_Init+0x98>)
 80073aa:	2202      	movs	r2, #2
 80073ac:	609a      	str	r2, [r3, #8]
  hpcd_USB_FS.Init.low_power_enable = DISABLE;
 80073ae:	4b1b      	ldr	r3, [pc, #108]	; (800741c <USBD_LL_Init+0x98>)
 80073b0:	2200      	movs	r2, #0
 80073b2:	619a      	str	r2, [r3, #24]
  hpcd_USB_FS.Init.lpm_enable = DISABLE;
 80073b4:	4b19      	ldr	r3, [pc, #100]	; (800741c <USBD_LL_Init+0x98>)
 80073b6:	2200      	movs	r2, #0
 80073b8:	61da      	str	r2, [r3, #28]
  hpcd_USB_FS.Init.battery_charging_enable = DISABLE;
 80073ba:	4b18      	ldr	r3, [pc, #96]	; (800741c <USBD_LL_Init+0x98>)
 80073bc:	2200      	movs	r2, #0
 80073be:	621a      	str	r2, [r3, #32]
  if (HAL_PCD_Init(&hpcd_USB_FS) != HAL_OK)
 80073c0:	4816      	ldr	r0, [pc, #88]	; (800741c <USBD_LL_Init+0x98>)
 80073c2:	f7f9 fbb4 	bl	8000b2e <HAL_PCD_Init>
 80073c6:	4603      	mov	r3, r0
 80073c8:	2b00      	cmp	r3, #0
 80073ca:	d001      	beq.n	80073d0 <USBD_LL_Init+0x4c>
  {
    Error_Handler( );
 80073cc:	f7f8 ffd0 	bl	8000370 <Error_Handler>
  HAL_PCD_RegisterDataInStageCallback(&hpcd_USB_FS, PCD_DataInStageCallback);
  HAL_PCD_RegisterIsoOutIncpltCallback(&hpcd_USB_FS, PCD_ISOOUTIncompleteCallback);
  HAL_PCD_RegisterIsoInIncpltCallback(&hpcd_USB_FS, PCD_ISOINIncompleteCallback);
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
  /* USER CODE BEGIN EndPoint_Configuration */
  HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x00 , PCD_SNG_BUF, 0x18);
 80073d0:	687b      	ldr	r3, [r7, #4]
 80073d2:	f8d3 02c0 	ldr.w	r0, [r3, #704]	; 0x2c0
 80073d6:	2318      	movs	r3, #24
 80073d8:	2200      	movs	r2, #0
 80073da:	2100      	movs	r1, #0
 80073dc:	f7fb f811 	bl	8002402 <HAL_PCDEx_PMAConfig>
  HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , 0x80 , PCD_SNG_BUF, 0x58);
 80073e0:	687b      	ldr	r3, [r7, #4]
 80073e2:	f8d3 02c0 	ldr.w	r0, [r3, #704]	; 0x2c0
 80073e6:	2358      	movs	r3, #88	; 0x58
 80073e8:	2200      	movs	r2, #0
 80073ea:	2180      	movs	r1, #128	; 0x80
 80073ec:	f7fb f809 	bl	8002402 <HAL_PCDEx_PMAConfig>
  /* USER CODE END EndPoint_Configuration */
  /* USER CODE BEGIN EndPoint_Configuration_CUSTOM_HID */
  HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , CUSTOM_HID_EPIN_ADDR , PCD_SNG_BUF, 0x98);
 80073f0:	687b      	ldr	r3, [r7, #4]
 80073f2:	f8d3 02c0 	ldr.w	r0, [r3, #704]	; 0x2c0
 80073f6:	2398      	movs	r3, #152	; 0x98
 80073f8:	2200      	movs	r2, #0
 80073fa:	2181      	movs	r1, #129	; 0x81
 80073fc:	f7fb f801 	bl	8002402 <HAL_PCDEx_PMAConfig>
  HAL_PCDEx_PMAConfig((PCD_HandleTypeDef*)pdev->pData , CUSTOM_HID_EPOUT_ADDR , PCD_SNG_BUF, 0xD8);
 8007400:	687b      	ldr	r3, [r7, #4]
 8007402:	f8d3 02c0 	ldr.w	r0, [r3, #704]	; 0x2c0
 8007406:	23d8      	movs	r3, #216	; 0xd8
 8007408:	2200      	movs	r2, #0
 800740a:	2101      	movs	r1, #1
 800740c:	f7fa fff9 	bl	8002402 <HAL_PCDEx_PMAConfig>
  /* USER CODE END EndPoint_Configuration_CUSTOM_HID */
  return USBD_OK;
 8007410:	2300      	movs	r3, #0
}
 8007412:	4618      	mov	r0, r3
 8007414:	3708      	adds	r7, #8
 8007416:	46bd      	mov	sp, r7
 8007418:	bd80      	pop	{r7, pc}
 800741a:	bf00      	nop
 800741c:	200006d8 	.word	0x200006d8
 8007420:	40005c00 	.word	0x40005c00

08007424 <USBD_LL_Start>:
  * @brief  Starts the low level portion of the device driver.
  * @param  pdev: Device handle
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_Start(USBD_HandleTypeDef *pdev)
{
 8007424:	b580      	push	{r7, lr}
 8007426:	b084      	sub	sp, #16
 8007428:	af00      	add	r7, sp, #0
 800742a:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef hal_status = HAL_OK;
 800742c:	2300      	movs	r3, #0
 800742e:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
 8007430:	2300      	movs	r3, #0
 8007432:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_PCD_Start(pdev->pData);
 8007434:	687b      	ldr	r3, [r7, #4]
 8007436:	f8d3 32c0 	ldr.w	r3, [r3, #704]	; 0x2c0
 800743a:	4618      	mov	r0, r3
 800743c:	f7f9 fc82 	bl	8000d44 <HAL_PCD_Start>
 8007440:	4603      	mov	r3, r0
 8007442:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
 8007444:	7bfb      	ldrb	r3, [r7, #15]
 8007446:	4618      	mov	r0, r3
 8007448:	f000 f93c 	bl	80076c4 <USBD_Get_USB_Status>
 800744c:	4603      	mov	r3, r0
 800744e:	73bb      	strb	r3, [r7, #14]

  return usb_status;
 8007450:	7bbb      	ldrb	r3, [r7, #14]
}
 8007452:	4618      	mov	r0, r3
 8007454:	3710      	adds	r7, #16
 8007456:	46bd      	mov	sp, r7
 8007458:	bd80      	pop	{r7, pc}

0800745a <USBD_LL_OpenEP>:
  * @param  ep_type: Endpoint type
  * @param  ep_mps: Endpoint max packet size
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_OpenEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr, uint8_t ep_type, uint16_t ep_mps)
{
 800745a:	b580      	push	{r7, lr}
 800745c:	b084      	sub	sp, #16
 800745e:	af00      	add	r7, sp, #0
 8007460:	6078      	str	r0, [r7, #4]
 8007462:	4608      	mov	r0, r1
 8007464:	4611      	mov	r1, r2
 8007466:	461a      	mov	r2, r3
 8007468:	4603      	mov	r3, r0
 800746a:	70fb      	strb	r3, [r7, #3]
 800746c:	460b      	mov	r3, r1
 800746e:	70bb      	strb	r3, [r7, #2]
 8007470:	4613      	mov	r3, r2
 8007472:	803b      	strh	r3, [r7, #0]
  HAL_StatusTypeDef hal_status = HAL_OK;
 8007474:	2300      	movs	r3, #0
 8007476:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
 8007478:	2300      	movs	r3, #0
 800747a:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_PCD_EP_Open(pdev->pData, ep_addr, ep_mps, ep_type);
 800747c:	687b      	ldr	r3, [r7, #4]
 800747e:	f8d3 02c0 	ldr.w	r0, [r3, #704]	; 0x2c0
 8007482:	78bb      	ldrb	r3, [r7, #2]
 8007484:	883a      	ldrh	r2, [r7, #0]
 8007486:	78f9      	ldrb	r1, [r7, #3]
 8007488:	f7f9 fdfa 	bl	8001080 <HAL_PCD_EP_Open>
 800748c:	4603      	mov	r3, r0
 800748e:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
 8007490:	7bfb      	ldrb	r3, [r7, #15]
 8007492:	4618      	mov	r0, r3
 8007494:	f000 f916 	bl	80076c4 <USBD_Get_USB_Status>
 8007498:	4603      	mov	r3, r0
 800749a:	73bb      	strb	r3, [r7, #14]

  return usb_status;
 800749c:	7bbb      	ldrb	r3, [r7, #14]
}
 800749e:	4618      	mov	r0, r3
 80074a0:	3710      	adds	r7, #16
 80074a2:	46bd      	mov	sp, r7
 80074a4:	bd80      	pop	{r7, pc}

080074a6 <USBD_LL_CloseEP>:
  * @param  pdev: Device handle
  * @param  ep_addr: Endpoint number
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_CloseEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
 80074a6:	b580      	push	{r7, lr}
 80074a8:	b084      	sub	sp, #16
 80074aa:	af00      	add	r7, sp, #0
 80074ac:	6078      	str	r0, [r7, #4]
 80074ae:	460b      	mov	r3, r1
 80074b0:	70fb      	strb	r3, [r7, #3]
  HAL_StatusTypeDef hal_status = HAL_OK;
 80074b2:	2300      	movs	r3, #0
 80074b4:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
 80074b6:	2300      	movs	r3, #0
 80074b8:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_PCD_EP_Close(pdev->pData, ep_addr);
 80074ba:	687b      	ldr	r3, [r7, #4]
 80074bc:	f8d3 32c0 	ldr.w	r3, [r3, #704]	; 0x2c0
 80074c0:	78fa      	ldrb	r2, [r7, #3]
 80074c2:	4611      	mov	r1, r2
 80074c4:	4618      	mov	r0, r3
 80074c6:	f7f9 fe41 	bl	800114c <HAL_PCD_EP_Close>
 80074ca:	4603      	mov	r3, r0
 80074cc:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
 80074ce:	7bfb      	ldrb	r3, [r7, #15]
 80074d0:	4618      	mov	r0, r3
 80074d2:	f000 f8f7 	bl	80076c4 <USBD_Get_USB_Status>
 80074d6:	4603      	mov	r3, r0
 80074d8:	73bb      	strb	r3, [r7, #14]

  return usb_status;
 80074da:	7bbb      	ldrb	r3, [r7, #14]
}
 80074dc:	4618      	mov	r0, r3
 80074de:	3710      	adds	r7, #16
 80074e0:	46bd      	mov	sp, r7
 80074e2:	bd80      	pop	{r7, pc}

080074e4 <USBD_LL_StallEP>:
  * @param  pdev: Device handle
  * @param  ep_addr: Endpoint number
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_StallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
 80074e4:	b580      	push	{r7, lr}
 80074e6:	b084      	sub	sp, #16
 80074e8:	af00      	add	r7, sp, #0
 80074ea:	6078      	str	r0, [r7, #4]
 80074ec:	460b      	mov	r3, r1
 80074ee:	70fb      	strb	r3, [r7, #3]
  HAL_StatusTypeDef hal_status = HAL_OK;
 80074f0:	2300      	movs	r3, #0
 80074f2:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
 80074f4:	2300      	movs	r3, #0
 80074f6:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_PCD_EP_SetStall(pdev->pData, ep_addr);
 80074f8:	687b      	ldr	r3, [r7, #4]
 80074fa:	f8d3 32c0 	ldr.w	r3, [r3, #704]	; 0x2c0
 80074fe:	78fa      	ldrb	r2, [r7, #3]
 8007500:	4611      	mov	r1, r2
 8007502:	4618      	mov	r0, r3
 8007504:	f7f9 feea 	bl	80012dc <HAL_PCD_EP_SetStall>
 8007508:	4603      	mov	r3, r0
 800750a:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
 800750c:	7bfb      	ldrb	r3, [r7, #15]
 800750e:	4618      	mov	r0, r3
 8007510:	f000 f8d8 	bl	80076c4 <USBD_Get_USB_Status>
 8007514:	4603      	mov	r3, r0
 8007516:	73bb      	strb	r3, [r7, #14]

  return usb_status;
 8007518:	7bbb      	ldrb	r3, [r7, #14]
}
 800751a:	4618      	mov	r0, r3
 800751c:	3710      	adds	r7, #16
 800751e:	46bd      	mov	sp, r7
 8007520:	bd80      	pop	{r7, pc}

08007522 <USBD_LL_ClearStallEP>:
  * @param  pdev: Device handle
  * @param  ep_addr: Endpoint number
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_ClearStallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
 8007522:	b580      	push	{r7, lr}
 8007524:	b084      	sub	sp, #16
 8007526:	af00      	add	r7, sp, #0
 8007528:	6078      	str	r0, [r7, #4]
 800752a:	460b      	mov	r3, r1
 800752c:	70fb      	strb	r3, [r7, #3]
  HAL_StatusTypeDef hal_status = HAL_OK;
 800752e:	2300      	movs	r3, #0
 8007530:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
 8007532:	2300      	movs	r3, #0
 8007534:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_PCD_EP_ClrStall(pdev->pData, ep_addr);
 8007536:	687b      	ldr	r3, [r7, #4]
 8007538:	f8d3 32c0 	ldr.w	r3, [r3, #704]	; 0x2c0
 800753c:	78fa      	ldrb	r2, [r7, #3]
 800753e:	4611      	mov	r1, r2
 8007540:	4618      	mov	r0, r3
 8007542:	f7f9 ff2b 	bl	800139c <HAL_PCD_EP_ClrStall>
 8007546:	4603      	mov	r3, r0
 8007548:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
 800754a:	7bfb      	ldrb	r3, [r7, #15]
 800754c:	4618      	mov	r0, r3
 800754e:	f000 f8b9 	bl	80076c4 <USBD_Get_USB_Status>
 8007552:	4603      	mov	r3, r0
 8007554:	73bb      	strb	r3, [r7, #14]

  return usb_status;
 8007556:	7bbb      	ldrb	r3, [r7, #14]
}
 8007558:	4618      	mov	r0, r3
 800755a:	3710      	adds	r7, #16
 800755c:	46bd      	mov	sp, r7
 800755e:	bd80      	pop	{r7, pc}

08007560 <USBD_LL_IsStallEP>:
  * @param  pdev: Device handle
  * @param  ep_addr: Endpoint number
  * @retval Stall (1: Yes, 0: No)
  */
uint8_t USBD_LL_IsStallEP(USBD_HandleTypeDef *pdev, uint8_t ep_addr)
{
 8007560:	b480      	push	{r7}
 8007562:	b085      	sub	sp, #20
 8007564:	af00      	add	r7, sp, #0
 8007566:	6078      	str	r0, [r7, #4]
 8007568:	460b      	mov	r3, r1
 800756a:	70fb      	strb	r3, [r7, #3]
  PCD_HandleTypeDef *hpcd = (PCD_HandleTypeDef*) pdev->pData;
 800756c:	687b      	ldr	r3, [r7, #4]
 800756e:	f8d3 32c0 	ldr.w	r3, [r3, #704]	; 0x2c0
 8007572:	60fb      	str	r3, [r7, #12]

  if((ep_addr & 0x80) == 0x80)
 8007574:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8007578:	2b00      	cmp	r3, #0
 800757a:	da0c      	bge.n	8007596 <USBD_LL_IsStallEP+0x36>
  {
    return hpcd->IN_ep[ep_addr & 0x7F].is_stall;
 800757c:	78fb      	ldrb	r3, [r7, #3]
 800757e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8007582:	68f9      	ldr	r1, [r7, #12]
 8007584:	1c5a      	adds	r2, r3, #1
 8007586:	4613      	mov	r3, r2
 8007588:	009b      	lsls	r3, r3, #2
 800758a:	4413      	add	r3, r2
 800758c:	00db      	lsls	r3, r3, #3
 800758e:	440b      	add	r3, r1
 8007590:	3302      	adds	r3, #2
 8007592:	781b      	ldrb	r3, [r3, #0]
 8007594:	e00b      	b.n	80075ae <USBD_LL_IsStallEP+0x4e>
  }
  else
  {
    return hpcd->OUT_ep[ep_addr & 0x7F].is_stall;
 8007596:	78fb      	ldrb	r3, [r7, #3]
 8007598:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800759c:	68f9      	ldr	r1, [r7, #12]
 800759e:	4613      	mov	r3, r2
 80075a0:	009b      	lsls	r3, r3, #2
 80075a2:	4413      	add	r3, r2
 80075a4:	00db      	lsls	r3, r3, #3
 80075a6:	440b      	add	r3, r1
 80075a8:	f503 73b5 	add.w	r3, r3, #362	; 0x16a
 80075ac:	781b      	ldrb	r3, [r3, #0]
  }
}
 80075ae:	4618      	mov	r0, r3
 80075b0:	3714      	adds	r7, #20
 80075b2:	46bd      	mov	sp, r7
 80075b4:	bc80      	pop	{r7}
 80075b6:	4770      	bx	lr

080075b8 <USBD_LL_SetUSBAddress>:
  * @param  pdev: Device handle
  * @param  dev_addr: Device address
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_SetUSBAddress(USBD_HandleTypeDef *pdev, uint8_t dev_addr)
{
 80075b8:	b580      	push	{r7, lr}
 80075ba:	b084      	sub	sp, #16
 80075bc:	af00      	add	r7, sp, #0
 80075be:	6078      	str	r0, [r7, #4]
 80075c0:	460b      	mov	r3, r1
 80075c2:	70fb      	strb	r3, [r7, #3]
  HAL_StatusTypeDef hal_status = HAL_OK;
 80075c4:	2300      	movs	r3, #0
 80075c6:	73fb      	strb	r3, [r7, #15]
  USBD_StatusTypeDef usb_status = USBD_OK;
 80075c8:	2300      	movs	r3, #0
 80075ca:	73bb      	strb	r3, [r7, #14]

  hal_status = HAL_PCD_SetAddress(pdev->pData, dev_addr);
 80075cc:	687b      	ldr	r3, [r7, #4]
 80075ce:	f8d3 32c0 	ldr.w	r3, [r3, #704]	; 0x2c0
 80075d2:	78fa      	ldrb	r2, [r7, #3]
 80075d4:	4611      	mov	r1, r2
 80075d6:	4618      	mov	r0, r3
 80075d8:	f7f9 fd2d 	bl	8001036 <HAL_PCD_SetAddress>
 80075dc:	4603      	mov	r3, r0
 80075de:	73fb      	strb	r3, [r7, #15]

  usb_status =  USBD_Get_USB_Status(hal_status);
 80075e0:	7bfb      	ldrb	r3, [r7, #15]
 80075e2:	4618      	mov	r0, r3
 80075e4:	f000 f86e 	bl	80076c4 <USBD_Get_USB_Status>
 80075e8:	4603      	mov	r3, r0
 80075ea:	73bb      	strb	r3, [r7, #14]

  return usb_status;
 80075ec:	7bbb      	ldrb	r3, [r7, #14]
}
 80075ee:	4618      	mov	r0, r3
 80075f0:	3710      	adds	r7, #16
 80075f2:	46bd      	mov	sp, r7
 80075f4:	bd80      	pop	{r7, pc}

080075f6 <USBD_LL_Transmit>:
  * @param  pbuf: Pointer to data to be sent
  * @param  size: Data size
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_Transmit(USBD_HandleTypeDef *pdev, uint8_t ep_addr, uint8_t *pbuf, uint16_t size)
{
 80075f6:	b580      	push	{r7, lr}
 80075f8:	b086      	sub	sp, #24
 80075fa:	af00      	add	r7, sp, #0
 80075fc:	60f8      	str	r0, [r7, #12]
 80075fe:	607a      	str	r2, [r7, #4]
 8007600:	461a      	mov	r2, r3
 8007602:	460b      	mov	r3, r1
 8007604:	72fb      	strb	r3, [r7, #11]
 8007606:	4613      	mov	r3, r2
 8007608:	813b      	strh	r3, [r7, #8]
  HAL_StatusTypeDef hal_status = HAL_OK;
 800760a:	2300      	movs	r3, #0
 800760c:	75fb      	strb	r3, [r7, #23]
  USBD_StatusTypeDef usb_status = USBD_OK;
 800760e:	2300      	movs	r3, #0
 8007610:	75bb      	strb	r3, [r7, #22]

  hal_status = HAL_PCD_EP_Transmit(pdev->pData, ep_addr, pbuf, size);
 8007612:	68fb      	ldr	r3, [r7, #12]
 8007614:	f8d3 02c0 	ldr.w	r0, [r3, #704]	; 0x2c0
 8007618:	893b      	ldrh	r3, [r7, #8]
 800761a:	7af9      	ldrb	r1, [r7, #11]
 800761c:	687a      	ldr	r2, [r7, #4]
 800761e:	f7f9 fe1a 	bl	8001256 <HAL_PCD_EP_Transmit>
 8007622:	4603      	mov	r3, r0
 8007624:	75fb      	strb	r3, [r7, #23]

  usb_status =  USBD_Get_USB_Status(hal_status);
 8007626:	7dfb      	ldrb	r3, [r7, #23]
 8007628:	4618      	mov	r0, r3
 800762a:	f000 f84b 	bl	80076c4 <USBD_Get_USB_Status>
 800762e:	4603      	mov	r3, r0
 8007630:	75bb      	strb	r3, [r7, #22]

  return usb_status;
 8007632:	7dbb      	ldrb	r3, [r7, #22]
}
 8007634:	4618      	mov	r0, r3
 8007636:	3718      	adds	r7, #24
 8007638:	46bd      	mov	sp, r7
 800763a:	bd80      	pop	{r7, pc}

0800763c <USBD_LL_PrepareReceive>:
  * @param  pbuf: Pointer to data to be received
  * @param  size: Data size
  * @retval USBD status
  */
USBD_StatusTypeDef USBD_LL_PrepareReceive(USBD_HandleTypeDef *pdev, uint8_t ep_addr, uint8_t *pbuf, uint16_t size)
{
 800763c:	b580      	push	{r7, lr}
 800763e:	b086      	sub	sp, #24
 8007640:	af00      	add	r7, sp, #0
 8007642:	60f8      	str	r0, [r7, #12]
 8007644:	607a      	str	r2, [r7, #4]
 8007646:	461a      	mov	r2, r3
 8007648:	460b      	mov	r3, r1
 800764a:	72fb      	strb	r3, [r7, #11]
 800764c:	4613      	mov	r3, r2
 800764e:	813b      	strh	r3, [r7, #8]
  HAL_StatusTypeDef hal_status = HAL_OK;
 8007650:	2300      	movs	r3, #0
 8007652:	75fb      	strb	r3, [r7, #23]
  USBD_StatusTypeDef usb_status = USBD_OK;
 8007654:	2300      	movs	r3, #0
 8007656:	75bb      	strb	r3, [r7, #22]

  hal_status = HAL_PCD_EP_Receive(pdev->pData, ep_addr, pbuf, size);
 8007658:	68fb      	ldr	r3, [r7, #12]
 800765a:	f8d3 02c0 	ldr.w	r0, [r3, #704]	; 0x2c0
 800765e:	893b      	ldrh	r3, [r7, #8]
 8007660:	7af9      	ldrb	r1, [r7, #11]
 8007662:	687a      	ldr	r2, [r7, #4]
 8007664:	f7f9 fdba 	bl	80011dc <HAL_PCD_EP_Receive>
 8007668:	4603      	mov	r3, r0
 800766a:	75fb      	strb	r3, [r7, #23]

  usb_status =  USBD_Get_USB_Status(hal_status);
 800766c:	7dfb      	ldrb	r3, [r7, #23]
 800766e:	4618      	mov	r0, r3
 8007670:	f000 f828 	bl	80076c4 <USBD_Get_USB_Status>
 8007674:	4603      	mov	r3, r0
 8007676:	75bb      	strb	r3, [r7, #22]

  return usb_status;
 8007678:	7dbb      	ldrb	r3, [r7, #22]
}
 800767a:	4618      	mov	r0, r3
 800767c:	3718      	adds	r7, #24
 800767e:	46bd      	mov	sp, r7
 8007680:	bd80      	pop	{r7, pc}
	...

08007684 <USBD_static_malloc>:
  * @brief  Static single allocation.
  * @param  size: Size of allocated memory
  * @retval None
  */
void *USBD_static_malloc(uint32_t size)
{
 8007684:	b480      	push	{r7}
 8007686:	b083      	sub	sp, #12
 8007688:	af00      	add	r7, sp, #0
 800768a:	6078      	str	r0, [r7, #4]
  static uint32_t mem[(sizeof(USBD_CUSTOM_HID_HandleTypeDef)/4+1)];/* On 32-bit boundary */
  return mem;
 800768c:	4b02      	ldr	r3, [pc, #8]	; (8007698 <USBD_static_malloc+0x14>)
}
 800768e:	4618      	mov	r0, r3
 8007690:	370c      	adds	r7, #12
 8007692:	46bd      	mov	sp, r7
 8007694:	bc80      	pop	{r7}
 8007696:	4770      	bx	lr
 8007698:	200009c4 	.word	0x200009c4

0800769c <USBD_static_free>:
  * @brief  Dummy memory free
  * @param  p: Pointer to allocated  memory address
  * @retval None
  */
void USBD_static_free(void *p)
{
 800769c:	b480      	push	{r7}
 800769e:	b083      	sub	sp, #12
 80076a0:	af00      	add	r7, sp, #0
 80076a2:	6078      	str	r0, [r7, #4]

}
 80076a4:	bf00      	nop
 80076a6:	370c      	adds	r7, #12
 80076a8:	46bd      	mov	sp, r7
 80076aa:	bc80      	pop	{r7}
 80076ac:	4770      	bx	lr

080076ae <HAL_PCDEx_SetConnectionState>:
#if (USE_HAL_PCD_REGISTER_CALLBACKS == 1U)
static void PCDEx_SetConnectionState(PCD_HandleTypeDef *hpcd, uint8_t state)
#else
void HAL_PCDEx_SetConnectionState(PCD_HandleTypeDef *hpcd, uint8_t state)
#endif /* USE_HAL_PCD_REGISTER_CALLBACKS */
{
 80076ae:	b480      	push	{r7}
 80076b0:	b083      	sub	sp, #12
 80076b2:	af00      	add	r7, sp, #0
 80076b4:	6078      	str	r0, [r7, #4]
 80076b6:	460b      	mov	r3, r1
 80076b8:	70fb      	strb	r3, [r7, #3]
  {
    /* Configure High connection state. */

  }
  /* USER CODE END 6 */
}
 80076ba:	bf00      	nop
 80076bc:	370c      	adds	r7, #12
 80076be:	46bd      	mov	sp, r7
 80076c0:	bc80      	pop	{r7}
 80076c2:	4770      	bx	lr

080076c4 <USBD_Get_USB_Status>:
  * @brief  Returns the USB status depending on the HAL status:
  * @param  hal_status: HAL status
  * @retval USB status
  */
USBD_StatusTypeDef USBD_Get_USB_Status(HAL_StatusTypeDef hal_status)
{
 80076c4:	b480      	push	{r7}
 80076c6:	b085      	sub	sp, #20
 80076c8:	af00      	add	r7, sp, #0
 80076ca:	4603      	mov	r3, r0
 80076cc:	71fb      	strb	r3, [r7, #7]
  USBD_StatusTypeDef usb_status = USBD_OK;
 80076ce:	2300      	movs	r3, #0
 80076d0:	73fb      	strb	r3, [r7, #15]

  switch (hal_status)
 80076d2:	79fb      	ldrb	r3, [r7, #7]
 80076d4:	2b03      	cmp	r3, #3
 80076d6:	d817      	bhi.n	8007708 <USBD_Get_USB_Status+0x44>
 80076d8:	a201      	add	r2, pc, #4	; (adr r2, 80076e0 <USBD_Get_USB_Status+0x1c>)
 80076da:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80076de:	bf00      	nop
 80076e0:	080076f1 	.word	0x080076f1
 80076e4:	080076f7 	.word	0x080076f7
 80076e8:	080076fd 	.word	0x080076fd
 80076ec:	08007703 	.word	0x08007703
  {
    case HAL_OK :
      usb_status = USBD_OK;
 80076f0:	2300      	movs	r3, #0
 80076f2:	73fb      	strb	r3, [r7, #15]
    break;
 80076f4:	e00b      	b.n	800770e <USBD_Get_USB_Status+0x4a>
    case HAL_ERROR :
      usb_status = USBD_FAIL;
 80076f6:	2302      	movs	r3, #2
 80076f8:	73fb      	strb	r3, [r7, #15]
    break;
 80076fa:	e008      	b.n	800770e <USBD_Get_USB_Status+0x4a>
    case HAL_BUSY :
      usb_status = USBD_BUSY;
 80076fc:	2301      	movs	r3, #1
 80076fe:	73fb      	strb	r3, [r7, #15]
    break;
 8007700:	e005      	b.n	800770e <USBD_Get_USB_Status+0x4a>
    case HAL_TIMEOUT :
      usb_status = USBD_FAIL;
 8007702:	2302      	movs	r3, #2
 8007704:	73fb      	strb	r3, [r7, #15]
    break;
 8007706:	e002      	b.n	800770e <USBD_Get_USB_Status+0x4a>
    default :
      usb_status = USBD_FAIL;
 8007708:	2302      	movs	r3, #2
 800770a:	73fb      	strb	r3, [r7, #15]
    break;
 800770c:	bf00      	nop
  }
  return usb_status;
 800770e:	7bfb      	ldrb	r3, [r7, #15]
}
 8007710:	4618      	mov	r0, r3
 8007712:	3714      	adds	r7, #20
 8007714:	46bd      	mov	sp, r7
 8007716:	bc80      	pop	{r7}
 8007718:	4770      	bx	lr
 800771a:	bf00      	nop

0800771c <__libc_init_array>:
 800771c:	b570      	push	{r4, r5, r6, lr}
 800771e:	2600      	movs	r6, #0
 8007720:	4d0c      	ldr	r5, [pc, #48]	; (8007754 <__libc_init_array+0x38>)
 8007722:	4c0d      	ldr	r4, [pc, #52]	; (8007758 <__libc_init_array+0x3c>)
 8007724:	1b64      	subs	r4, r4, r5
 8007726:	10a4      	asrs	r4, r4, #2
 8007728:	42a6      	cmp	r6, r4
 800772a:	d109      	bne.n	8007740 <__libc_init_array+0x24>
 800772c:	f000 f822 	bl	8007774 <_init>
 8007730:	2600      	movs	r6, #0
 8007732:	4d0a      	ldr	r5, [pc, #40]	; (800775c <__libc_init_array+0x40>)
 8007734:	4c0a      	ldr	r4, [pc, #40]	; (8007760 <__libc_init_array+0x44>)
 8007736:	1b64      	subs	r4, r4, r5
 8007738:	10a4      	asrs	r4, r4, #2
 800773a:	42a6      	cmp	r6, r4
 800773c:	d105      	bne.n	800774a <__libc_init_array+0x2e>
 800773e:	bd70      	pop	{r4, r5, r6, pc}
 8007740:	f855 3b04 	ldr.w	r3, [r5], #4
 8007744:	4798      	blx	r3
 8007746:	3601      	adds	r6, #1
 8007748:	e7ee      	b.n	8007728 <__libc_init_array+0xc>
 800774a:	f855 3b04 	ldr.w	r3, [r5], #4
 800774e:	4798      	blx	r3
 8007750:	3601      	adds	r6, #1
 8007752:	e7f2      	b.n	800773a <__libc_init_array+0x1e>
 8007754:	0800780c 	.word	0x0800780c
 8007758:	0800780c 	.word	0x0800780c
 800775c:	0800780c 	.word	0x0800780c
 8007760:	08007810 	.word	0x08007810

08007764 <memset>:
 8007764:	4603      	mov	r3, r0
 8007766:	4402      	add	r2, r0
 8007768:	4293      	cmp	r3, r2
 800776a:	d100      	bne.n	800776e <memset+0xa>
 800776c:	4770      	bx	lr
 800776e:	f803 1b01 	strb.w	r1, [r3], #1
 8007772:	e7f9      	b.n	8007768 <memset+0x4>

08007774 <_init>:
 8007774:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007776:	bf00      	nop
 8007778:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800777a:	bc08      	pop	{r3}
 800777c:	469e      	mov	lr, r3
 800777e:	4770      	bx	lr

08007780 <_fini>:
 8007780:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007782:	bf00      	nop
 8007784:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007786:	bc08      	pop	{r3}
 8007788:	469e      	mov	lr, r3
 800778a:	4770      	bx	lr
